{"ast":null,"code":"'use strict';\n\nimport \"../layoutReanimation/animationsManager.js\";\nimport { maybeBuild } from \"../animationBuilder.js\";\nimport { IS_JEST, IS_WEB, logger } from \"../common/index.js\";\nimport { LayoutAnimationType } from \"../commonTypes.js\";\nimport { SkipEnteringContext } from \"../component/LayoutAnimationConfig.js\";\nimport ReanimatedAnimatedComponent from \"../css/component/AnimatedComponent.js\";\nimport { configureWebLayoutAnimations, getReducedMotionFromConfig, saveSnapshot, startWebLayoutAnimation, tryActivateLayoutTransition } from \"../layoutReanimation/web/index.js\";\nimport { addHTMLMutationObserver } from \"../layoutReanimation/web/domUtils.js\";\nimport { updateLayoutAnimations } from \"../UpdateLayoutAnimations.js\";\nimport { InlinePropManager } from \"./InlinePropManager.js\";\nimport jsPropsUpdater from \"./JSPropsUpdater.js\";\nimport { NativeEventsManager } from \"./NativeEventsManager.js\";\nimport { PropsFilter } from \"./PropsFilter.js\";\nimport { filterStyles, flattenArray } from \"./utils.js\";\nlet id = 0;\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\nexport default class AnimatedComponent extends ReanimatedAnimatedComponent {\n  _animatedStyles = [];\n  _prevAnimatedStyles = [];\n  _animatedProps = [];\n  _prevAnimatedProps = [];\n  _isFirstRender = true;\n  jestAnimatedStyle = {\n    value: {}\n  };\n  jestAnimatedProps = {\n    value: {}\n  };\n  _InlinePropManager = new InlinePropManager();\n  _PropsFilter = new PropsFilter();\n  static contextType = SkipEnteringContext;\n  reanimatedID = id++;\n  constructor(ChildComponent, props, displayName, options) {\n    super(ChildComponent, props);\n    this._options = options;\n    this._displayName = displayName;\n    if (IS_JEST) {\n      this.jestAnimatedStyle = {\n        value: {}\n      };\n      this.jestAnimatedProps = {\n        value: {}\n      };\n    }\n    const skipEntering = this.context?.current;\n    if (!skipEntering) {\n      this._configureLayoutAnimation(LayoutAnimationType.ENTERING, this.props.entering);\n    }\n  }\n  componentDidMount() {\n    super.componentDidMount();\n    if (!IS_WEB) {\n      this._NativeEventsManager = new NativeEventsManager(this, this._options);\n    }\n    this._NativeEventsManager?.attachEvents();\n    this._updateAnimatedStylesAndProps();\n    this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n    if (this._options?.jsProps?.length) {\n      jsPropsUpdater.registerComponent(this, this._options.jsProps);\n    }\n    this._configureLayoutAnimation(LayoutAnimationType.LAYOUT, this.props.layout);\n    this._configureLayoutAnimation(LayoutAnimationType.EXITING, this.props.exiting);\n    if (IS_WEB) {\n      if (this.props.exiting && this._componentDOMRef) {\n        saveSnapshot(this._componentDOMRef);\n      }\n      if (!this.props.entering || getReducedMotionFromConfig(this.props.entering)) {\n        this._isFirstRender = false;\n        return;\n      }\n      const skipEntering = this.context?.current;\n      if (!skipEntering) {\n        startWebLayoutAnimation(this.props, this._componentDOMRef, LayoutAnimationType.ENTERING);\n      } else if (this._componentDOMRef) {\n        this._componentDOMRef.style.visibility = 'initial';\n      }\n    }\n    this._isFirstRender = false;\n  }\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    this._NativeEventsManager?.detachEvents();\n    this._detachStyles();\n    this._InlinePropManager.detachInlineProps();\n    if (this._options?.jsProps?.length) {\n      jsPropsUpdater.unregisterComponent(this);\n    }\n    const exiting = this.props.exiting;\n    if (IS_WEB && this._componentDOMRef && exiting && !getReducedMotionFromConfig(exiting)) {\n      addHTMLMutationObserver();\n      startWebLayoutAnimation(this.props, this._componentDOMRef, LayoutAnimationType.EXITING);\n    }\n  }\n  _detachStyles() {\n    const viewTag = this.getComponentViewTag();\n    if (viewTag !== -1) {\n      for (const style of this._animatedStyles) {\n        style.viewDescriptors.remove(viewTag);\n      }\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.remove(viewTag);\n      }\n    }\n  }\n  setNativeProps(props) {\n    if (this._options?.setNativeProps) {\n      this._options.setNativeProps(this._componentRef, props);\n    } else {\n      this._componentRef?.setNativeProps?.(props);\n    }\n  }\n  _handleAnimatedStylesUpdate(prevStyles, currentStyles, jestAnimatedStyleOrProps) {\n    const {\n      viewTag,\n      shadowNodeWrapper\n    } = this._getViewInfo();\n    const newStyles = new Set(currentStyles);\n    if (prevStyles) {\n      const hasOneSameStyle = currentStyles.length === 1 && prevStyles.length === 1 && currentStyles[0] === prevStyles[0];\n      if (hasOneSameStyle) {\n        return;\n      }\n      for (const prevStyle of prevStyles) {\n        const isPresent = currentStyles.some(style => {\n          if (style === prevStyle) {\n            newStyles.delete(style);\n            return true;\n          }\n          return false;\n        });\n        if (!isPresent) {\n          prevStyle.viewDescriptors.remove(viewTag);\n        }\n      }\n    }\n    newStyles.forEach(style => {\n      style.viewDescriptors.add({\n        tag: viewTag,\n        shadowNodeWrapper\n      }, style.styleUpdaterContainer);\n      if (IS_JEST) {\n        Object.assign(jestAnimatedStyleOrProps.value, style.initial.value);\n        style.jestAnimatedValues.current = jestAnimatedStyleOrProps;\n      }\n    });\n  }\n  _updateAnimatedStylesAndProps() {\n    this._handleAnimatedStylesUpdate(this._prevAnimatedStyles, this._animatedStyles, this.jestAnimatedStyle);\n    this._handleAnimatedStylesUpdate(this._prevAnimatedProps, this._animatedProps, this.jestAnimatedProps);\n  }\n  componentDidUpdate(prevProps, _prevState, snapshot) {\n    this._configureLayoutAnimation(LayoutAnimationType.LAYOUT, this.props.layout, prevProps.layout);\n    this._configureLayoutAnimation(LayoutAnimationType.EXITING, this.props.exiting, prevProps.exiting);\n    this._NativeEventsManager?.updateEvents(prevProps);\n    this._updateAnimatedStylesAndProps();\n    this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n    if (IS_WEB && this.props.exiting && this._componentDOMRef) {\n      saveSnapshot(this._componentDOMRef);\n    }\n    if (IS_WEB && snapshot && this.props.layout && !getReducedMotionFromConfig(this.props.layout)) {\n      tryActivateLayoutTransition(this.props, this._componentDOMRef, snapshot);\n    }\n  }\n  _updateStyles(props) {\n    const filteredStyles = filterStyles(flattenArray(props.style ?? []));\n    this._prevAnimatedStyles = this._animatedStyles;\n    this._animatedStyles = filteredStyles.animatedStyles;\n    const filteredAnimatedProps = filterStyles(flattenArray(props.animatedProps ?? []));\n    this._prevAnimatedProps = this._animatedProps;\n    this._animatedProps = filteredAnimatedProps.animatedStyles;\n    if (filteredAnimatedProps.cssStyle) {\n      if (__DEV__ && filteredStyles.cssStyle) {\n        logger.warn('AnimatedComponent: CSS properties cannot be used in style and animatedProps at the same time. Using properties from the style object.');\n        this._cssStyle = filteredStyles.cssStyle;\n        return;\n      }\n      const mergedProps = Object.assign({}, props, filteredAnimatedProps.cssStyle);\n      delete mergedProps.style;\n      delete mergedProps.animatedProps;\n      this._cssStyle = mergedProps;\n    } else {\n      this._cssStyle = filteredStyles.cssStyle ?? {};\n    }\n  }\n  _configureLayoutAnimation(type, currentConfig, previousConfig) {\n    if (IS_WEB || currentConfig === previousConfig) {\n      return;\n    }\n    updateLayoutAnimations(type === LayoutAnimationType.ENTERING ? this.reanimatedID : this.getComponentViewTag(), type, currentConfig && maybeBuild(currentConfig, type === LayoutAnimationType.LAYOUT ? undefined : this.props?.style, this._displayName));\n  }\n  getSnapshotBeforeUpdate() {\n    if (IS_WEB && this.props.layout && this._componentDOMRef?.getBoundingClientRect) {\n      return this._componentDOMRef.getBoundingClientRect();\n    }\n    return null;\n  }\n  render() {\n    const filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n    if (IS_JEST) {\n      filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n      filteredProps.jestAnimatedProps = this.jestAnimatedProps;\n    }\n    if (this._isFirstRender && IS_WEB && filteredProps.entering && !getReducedMotionFromConfig(filteredProps.entering)) {\n      filteredProps.style = Array.isArray(filteredProps.style) ? filteredProps.style.concat([{\n        visibility: 'hidden'\n      }]) : Object.assign({}, filteredProps.style ?? {}, {\n        visibility: 'hidden'\n      });\n    }\n    const skipEntering = this.context?.current;\n    const nativeID = skipEntering ? undefined : `${this.reanimatedID}`;\n    const jestProps = IS_JEST ? {\n      jestInlineStyle: this.props.style && filterOutAnimatedStyles(this.props.style),\n      jestAnimatedStyle: this.jestAnimatedStyle,\n      jestAnimatedProps: this.jestAnimatedProps\n    } : {};\n    return super.render(Object.assign({\n      nativeID\n    }, filteredProps, jestProps));\n  }\n}\nfunction filterOutAnimatedStyles(style) {\n  if (!style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return style?.viewDescriptors ? {} : style;\n  }\n  return style.filter(styleElement => !(styleElement && 'viewDescriptors' in styleElement)).map(styleElement => {\n    if (Array.isArray(styleElement)) {\n      return filterOutAnimatedStyles(styleElement);\n    }\n    return styleElement;\n  });\n}","map":{"version":3,"names":["maybeBuild","IS_JEST","IS_WEB","logger","LayoutAnimationType","SkipEnteringContext","ReanimatedAnimatedComponent","configureWebLayoutAnimations","getReducedMotionFromConfig","saveSnapshot","startWebLayoutAnimation","tryActivateLayoutTransition","addHTMLMutationObserver","updateLayoutAnimations","InlinePropManager","jsPropsUpdater","NativeEventsManager","PropsFilter","filterStyles","flattenArray","id","AnimatedComponent","_animatedStyles","_prevAnimatedStyles","_animatedProps","_prevAnimatedProps","_isFirstRender","jestAnimatedStyle","value","jestAnimatedProps","_InlinePropManager","_PropsFilter","contextType","reanimatedID","constructor","ChildComponent","props","displayName","options","_options","_displayName","skipEntering","context","current","_configureLayoutAnimation","ENTERING","entering","componentDidMount","_NativeEventsManager","attachEvents","_updateAnimatedStylesAndProps","attachInlineProps","_getViewInfo","jsProps","length","registerComponent","LAYOUT","layout","EXITING","exiting","_componentDOMRef","style","visibility","componentWillUnmount","detachEvents","_detachStyles","detachInlineProps","unregisterComponent","viewTag","getComponentViewTag","viewDescriptors","remove","animatedProps","setNativeProps","_componentRef","_handleAnimatedStylesUpdate","prevStyles","currentStyles","jestAnimatedStyleOrProps","shadowNodeWrapper","newStyles","Set","hasOneSameStyle","prevStyle","isPresent","some","delete","forEach","add","tag","styleUpdaterContainer","Object","assign","initial","jestAnimatedValues","componentDidUpdate","prevProps","_prevState","snapshot","updateEvents","_updateStyles","filteredStyles","animatedStyles","filteredAnimatedProps","cssStyle","__DEV__","warn","_cssStyle","mergedProps","type","currentConfig","previousConfig","undefined","getSnapshotBeforeUpdate","getBoundingClientRect","render","filteredProps","filterNonAnimatedProps","Array","isArray","concat","nativeID","jestProps","jestInlineStyle","filterOutAnimatedStyles","filter","styleElement","map"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\createAnimatedComponent\\AnimatedComponent.tsx"],"sourcesContent":["'use strict';\nimport '../layoutReanimation/animationsManager';\n\nimport type React from 'react';\n\nimport { maybeBuild } from '../animationBuilder';\nimport { IS_JEST, IS_WEB, logger } from '../common';\nimport type { StyleProps } from '../commonTypes';\nimport { LayoutAnimationType } from '../commonTypes';\nimport { SkipEnteringContext } from '../component/LayoutAnimationConfig';\nimport ReanimatedAnimatedComponent from '../css/component/AnimatedComponent';\nimport type { AnimatedStyleHandle } from '../hook/commonTypes';\nimport {\n  configureWebLayoutAnimations,\n  getReducedMotionFromConfig,\n  saveSnapshot,\n  startWebLayoutAnimation,\n  tryActivateLayoutTransition,\n} from '../layoutReanimation/web';\nimport type { CustomConfig } from '../layoutReanimation/web/config';\nimport { addHTMLMutationObserver } from '../layoutReanimation/web/domUtils';\nimport type { ReanimatedHTMLElement } from '../ReanimatedModule/js-reanimated';\nimport { updateLayoutAnimations } from '../UpdateLayoutAnimations';\nimport type {\n  AnimatedComponentProps,\n  AnimatedComponentRef,\n  AnimatedProps,\n  AnyComponent,\n  IAnimatedComponentInternal,\n  INativeEventsManager,\n  InitialComponentProps,\n  LayoutAnimationOrBuilder,\n  NestedArray,\n} from './commonTypes';\nimport { InlinePropManager } from './InlinePropManager';\nimport jsPropsUpdater from './JSPropsUpdater';\nimport { NativeEventsManager } from './NativeEventsManager';\nimport { PropsFilter } from './PropsFilter';\nimport { filterStyles, flattenArray } from './utils';\n\nlet id = 0;\n\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\n\nexport type Options<P> = {\n  setNativeProps?: (ref: AnimatedComponentRef, props: P) => void;\n  jsProps?: string[];\n};\n\nexport default class AnimatedComponent\n  extends ReanimatedAnimatedComponent<\n    AnimatedComponentProps<InitialComponentProps>\n  >\n  implements IAnimatedComponentInternal\n{\n  _options?: Options<InitialComponentProps>;\n  _displayName: string;\n  _animatedStyles: StyleProps[] = [];\n  _prevAnimatedStyles: StyleProps[] = [];\n  _animatedProps: Partial<AnimatedComponentProps<AnimatedProps>>[] = [];\n  _prevAnimatedProps: Partial<AnimatedComponentProps<AnimatedProps>>[] = [];\n  _isFirstRender = true;\n  jestInlineStyle: NestedArray<StyleProps> | undefined;\n  jestAnimatedStyle: { value: StyleProps } = { value: {} };\n  jestAnimatedProps: { value: AnimatedProps } = { value: {} };\n  _InlinePropManager = new InlinePropManager();\n  _PropsFilter = new PropsFilter();\n  _NativeEventsManager?: INativeEventsManager;\n  static contextType = SkipEnteringContext;\n  context!: React.ContextType<typeof SkipEnteringContext>;\n  reanimatedID = id++;\n\n  constructor(\n    ChildComponent: AnyComponent,\n    props: AnimatedComponentProps<InitialComponentProps>,\n    displayName: string,\n    options?: Options<InitialComponentProps>\n  ) {\n    super(ChildComponent, props);\n    this._options = options;\n    this._displayName = displayName;\n\n    if (IS_JEST) {\n      this.jestAnimatedStyle = { value: {} };\n      this.jestAnimatedProps = { value: {} };\n    }\n\n    const skipEntering = this.context?.current;\n    if (!skipEntering) {\n      this._configureLayoutAnimation(\n        LayoutAnimationType.ENTERING,\n        this.props.entering\n      );\n    }\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n    if (!IS_WEB) {\n      // It exists only on native platforms. We initialize it here because the ref to the animated component is available only post-mount\n      this._NativeEventsManager = new NativeEventsManager(this, this._options);\n    }\n    this._NativeEventsManager?.attachEvents();\n    this._updateAnimatedStylesAndProps();\n    this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n    if (this._options?.jsProps?.length) {\n      jsPropsUpdater.registerComponent(this, this._options.jsProps);\n    }\n\n    this._configureLayoutAnimation(\n      LayoutAnimationType.LAYOUT,\n      this.props.layout\n    );\n    this._configureLayoutAnimation(\n      LayoutAnimationType.EXITING,\n      this.props.exiting\n    );\n\n    if (IS_WEB) {\n      if (this.props.exiting && this._componentDOMRef) {\n        saveSnapshot(this._componentDOMRef);\n      }\n\n      if (\n        !this.props.entering ||\n        getReducedMotionFromConfig(this.props.entering as CustomConfig)\n      ) {\n        this._isFirstRender = false;\n        return;\n      }\n\n      const skipEntering = this.context?.current;\n\n      if (!skipEntering) {\n        startWebLayoutAnimation(\n          this.props,\n          this._componentDOMRef as ReanimatedHTMLElement,\n          LayoutAnimationType.ENTERING\n        );\n      } else if (this._componentDOMRef) {\n        this._componentDOMRef.style.visibility = 'initial';\n      }\n    }\n\n    this._isFirstRender = false;\n  }\n\n  componentWillUnmount() {\n    super.componentWillUnmount();\n    this._NativeEventsManager?.detachEvents();\n    this._detachStyles();\n    this._InlinePropManager.detachInlineProps();\n\n    if (this._options?.jsProps?.length) {\n      jsPropsUpdater.unregisterComponent(this);\n    }\n\n    const exiting = this.props.exiting;\n\n    if (\n      IS_WEB &&\n      this._componentDOMRef &&\n      exiting &&\n      !getReducedMotionFromConfig(exiting as CustomConfig)\n    ) {\n      addHTMLMutationObserver();\n\n      startWebLayoutAnimation(\n        this.props,\n        this._componentDOMRef as ReanimatedHTMLElement,\n        LayoutAnimationType.EXITING\n      );\n    }\n  }\n\n  _detachStyles() {\n    const viewTag = this.getComponentViewTag();\n    if (viewTag !== -1) {\n      for (const style of this._animatedStyles) {\n        style.viewDescriptors.remove(viewTag);\n      }\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.remove(viewTag);\n      }\n    }\n  }\n\n  setNativeProps(props: StyleProps) {\n    if (this._options?.setNativeProps) {\n      this._options.setNativeProps(\n        this._componentRef as AnimatedComponentRef,\n        props\n      );\n    } else {\n      (this._componentRef as AnimatedComponentRef)?.setNativeProps?.(props);\n    }\n  }\n\n  _handleAnimatedStylesUpdate(\n    prevStyles: StyleProps[],\n    currentStyles: StyleProps[],\n    jestAnimatedStyleOrProps: { value: StyleProps }\n  ) {\n    const { viewTag, shadowNodeWrapper } = this._getViewInfo();\n    const newStyles = new Set<StyleProps>(currentStyles);\n\n    // remove old styles\n    if (prevStyles) {\n      // in most of the cases, views have only a single animated style and it remains unchanged\n      const hasOneSameStyle =\n        currentStyles.length === 1 &&\n        prevStyles.length === 1 &&\n        currentStyles[0] === prevStyles[0];\n\n      if (hasOneSameStyle) {\n        return;\n      }\n\n      // otherwise, remove each style that is not present in new styles\n      for (const prevStyle of prevStyles) {\n        const isPresent = currentStyles.some((style) => {\n          if (style === prevStyle) {\n            newStyles.delete(style);\n            return true;\n          }\n          return false;\n        });\n        if (!isPresent) {\n          prevStyle.viewDescriptors.remove(viewTag);\n        }\n      }\n    }\n    newStyles.forEach((style) => {\n      style.viewDescriptors.add(\n        {\n          tag: viewTag,\n          shadowNodeWrapper,\n        },\n        style.styleUpdaterContainer\n      );\n      if (IS_JEST) {\n        /**\n         * We need to connect Jest's TestObject instance whose contains just\n         * props object with the updateProps() function where we update the\n         * properties of the component. We can't update props object directly\n         * because TestObject contains a copy of props - look at render\n         * function: const props = this._filterNonAnimatedProps(this.props);\n         */\n        Object.assign(jestAnimatedStyleOrProps.value, style.initial.value);\n        style.jestAnimatedValues.current = jestAnimatedStyleOrProps;\n      }\n    });\n  }\n\n  _updateAnimatedStylesAndProps() {\n    this._handleAnimatedStylesUpdate(\n      this._prevAnimatedStyles,\n      this._animatedStyles,\n      this.jestAnimatedStyle\n    );\n    this._handleAnimatedStylesUpdate(\n      this._prevAnimatedProps,\n      this._animatedProps,\n      this.jestAnimatedProps\n    );\n  }\n\n  componentDidUpdate(\n    prevProps: AnimatedComponentProps<InitialComponentProps>,\n    _prevState: Readonly<unknown>,\n    snapshot: DOMRect | null\n  ) {\n    this._configureLayoutAnimation(\n      LayoutAnimationType.LAYOUT,\n      this.props.layout,\n      prevProps.layout\n    );\n    this._configureLayoutAnimation(\n      LayoutAnimationType.EXITING,\n      this.props.exiting,\n      prevProps.exiting\n    );\n\n    this._NativeEventsManager?.updateEvents(prevProps);\n    this._updateAnimatedStylesAndProps();\n    this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n    if (IS_WEB && this.props.exiting && this._componentDOMRef) {\n      saveSnapshot(this._componentDOMRef);\n    }\n\n    if (\n      IS_WEB &&\n      snapshot &&\n      this.props.layout &&\n      !getReducedMotionFromConfig(this.props.layout as CustomConfig)\n    ) {\n      tryActivateLayoutTransition(\n        this.props,\n        this._componentDOMRef as ReanimatedHTMLElement,\n        snapshot\n      );\n    }\n  }\n\n  _updateStyles(props: AnimatedComponentProps<InitialComponentProps>): void {\n    const filteredStyles = filterStyles(flattenArray(props.style ?? []));\n    this._prevAnimatedStyles = this._animatedStyles;\n    this._animatedStyles = filteredStyles.animatedStyles;\n\n    const filteredAnimatedProps = filterStyles(\n      flattenArray(props.animatedProps ?? [])\n    );\n    this._prevAnimatedProps = this._animatedProps;\n    this._animatedProps = filteredAnimatedProps.animatedStyles;\n\n    if (filteredAnimatedProps.cssStyle) {\n      if (__DEV__ && filteredStyles.cssStyle) {\n        logger.warn(\n          'AnimatedComponent: CSS properties cannot be used in style and animatedProps at the same time. Using properties from the style object.'\n        );\n        this._cssStyle = filteredStyles.cssStyle;\n        return;\n      }\n\n      // Add all remaining props to cssStyle object\n      // (e.g. SVG components are styled via top level props, not via style object)\n      const mergedProps = {\n        ...props,\n        ...filteredAnimatedProps.cssStyle,\n      };\n      delete mergedProps.style;\n      delete mergedProps.animatedProps;\n      this._cssStyle = mergedProps;\n    } else {\n      this._cssStyle = filteredStyles.cssStyle ?? {};\n    }\n  }\n  _configureLayoutAnimation(\n    type: LayoutAnimationType,\n    currentConfig: LayoutAnimationOrBuilder | undefined,\n    previousConfig?: LayoutAnimationOrBuilder\n  ) {\n    if (IS_WEB || currentConfig === previousConfig) {\n      return;\n    }\n\n    updateLayoutAnimations(\n      type === LayoutAnimationType.ENTERING\n        ? this.reanimatedID\n        : this.getComponentViewTag(),\n      type,\n      currentConfig &&\n        maybeBuild(\n          currentConfig,\n          type === LayoutAnimationType.LAYOUT\n            ? undefined /* We don't have to warn user if style has common properties with animation for LAYOUT */\n            : this.props?.style,\n          this._displayName\n        )\n    );\n  }\n\n  // This is a component lifecycle method from React, therefore we are not calling it directly.\n  // It is called before the component gets rerendered. This way we can access components' position before it changed\n  // and later on, in componentDidUpdate, calculate translation for layout transition.\n  getSnapshotBeforeUpdate() {\n    if (\n      IS_WEB &&\n      this.props.layout &&\n      this._componentDOMRef?.getBoundingClientRect\n    ) {\n      return this._componentDOMRef.getBoundingClientRect();\n    }\n\n    // `getSnapshotBeforeUpdate` has to return value which is not `undefined`.\n    return null;\n  }\n\n  render() {\n    const filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n\n    if (IS_JEST) {\n      filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n      filteredProps.jestAnimatedProps = this.jestAnimatedProps;\n    }\n\n    // Layout animations on web are set inside `componentDidMount` method, which is called after first render.\n    // Because of that we can encounter a situation in which component is visible for a short amount of time, and later on animation triggers.\n    // I've tested that on various browsers and devices and it did not happen to me. To be sure that it won't happen to someone else,\n    // I've decided to hide component at first render. Its visibility is reset in `componentDidMount`.\n    if (\n      this._isFirstRender &&\n      IS_WEB &&\n      filteredProps.entering &&\n      !getReducedMotionFromConfig(filteredProps.entering as CustomConfig)\n    ) {\n      filteredProps.style = Array.isArray(filteredProps.style)\n        ? filteredProps.style.concat([{ visibility: 'hidden' }])\n        : {\n            ...(filteredProps.style ?? {}),\n            visibility: 'hidden', // Hide component until `componentDidMount` triggers\n          };\n    }\n\n    const skipEntering = this.context?.current;\n    const nativeID = skipEntering ? undefined : `${this.reanimatedID}`;\n\n    const jestProps = IS_JEST\n      ? {\n          jestInlineStyle:\n            this.props.style && filterOutAnimatedStyles(this.props.style),\n          jestAnimatedStyle: this.jestAnimatedStyle,\n          jestAnimatedProps: this.jestAnimatedProps,\n        }\n      : {};\n\n    return super.render({\n      nativeID,\n      ...filteredProps,\n      ...jestProps,\n    });\n  }\n}\n\nfunction filterOutAnimatedStyles(\n  style: NestedArray<StyleProps | AnimatedStyleHandle | null | undefined>\n): NestedArray<StyleProps | null | undefined> {\n  if (!style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return style?.viewDescriptors ? {} : style;\n  }\n  return style\n    .filter(\n      (styleElement) => !(styleElement && 'viewDescriptors' in styleElement)\n    )\n    .map((styleElement) => {\n      if (Array.isArray(styleElement)) {\n        return filterOutAnimatedStyles(styleElement);\n      }\n      return styleElement;\n    });\n}\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,2CAAwC;AAI/C,SAASA,UAAU,QAAQ,wBAAqB;AAChD,SAASC,OAAO,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAW;AAEnD,SAASC,mBAAmB,QAAQ,mBAAgB;AACpD,SAASC,mBAAmB,QAAQ,uCAAoC;AACxE,OAAOC,2BAA2B,MAAM,uCAAoC;AAE5E,SACEC,4BAA4B,EAC5BC,0BAA0B,EAC1BC,YAAY,EACZC,uBAAuB,EACvBC,2BAA2B,QACtB,mCAA0B;AAEjC,SAASC,uBAAuB,QAAQ,sCAAmC;AAE3E,SAASC,sBAAsB,QAAQ,8BAA2B;AAYlE,SAASC,iBAAiB,QAAQ,wBAAqB;AACvD,OAAOC,cAAc,MAAM,qBAAkB;AAC7C,SAASC,mBAAmB,QAAQ,0BAAuB;AAC3D,SAASC,WAAW,QAAQ,kBAAe;AAC3C,SAASC,YAAY,EAAEC,YAAY,QAAQ,YAAS;AAEpD,IAAIC,EAAE,GAAG,CAAC;AAEV,IAAIlB,MAAM,EAAE;EACVK,4BAA4B,CAAC,CAAC;AAChC;AAOA,eAAe,MAAMc,iBAAiB,SAC5Bf,2BAA2B,CAIrC;EAGEgB,eAAe,GAAiB,EAAE;EAClCC,mBAAmB,GAAiB,EAAE;EACtCC,cAAc,GAAqD,EAAE;EACrEC,kBAAkB,GAAqD,EAAE;EACzEC,cAAc,GAAG,IAAI;EAErBC,iBAAiB,GAA0B;IAAEC,KAAK,EAAE,CAAC;EAAE,CAAC;EACxDC,iBAAiB,GAA6B;IAAED,KAAK,EAAE,CAAC;EAAE,CAAC;EAC3DE,kBAAkB,GAAG,IAAIhB,iBAAiB,CAAC,CAAC;EAC5CiB,YAAY,GAAG,IAAId,WAAW,CAAC,CAAC;EAEhC,OAAOe,WAAW,GAAG3B,mBAAmB;EAExC4B,YAAY,GAAGb,EAAE,EAAE;EAEnBc,WAAWA,CACTC,cAA4B,EAC5BC,KAAoD,EACpDC,WAAmB,EACnBC,OAAwC,EACxC;IACA,KAAK,CAACH,cAAc,EAAEC,KAAK,CAAC;IAC5B,IAAI,CAACG,QAAQ,GAAGD,OAAO;IACvB,IAAI,CAACE,YAAY,GAAGH,WAAW;IAE/B,IAAIpC,OAAO,EAAE;MACX,IAAI,CAAC0B,iBAAiB,GAAG;QAAEC,KAAK,EAAE,CAAC;MAAE,CAAC;MACtC,IAAI,CAACC,iBAAiB,GAAG;QAAED,KAAK,EAAE,CAAC;MAAE,CAAC;IACxC;IAEA,MAAMa,YAAY,GAAG,IAAI,CAACC,OAAO,EAAEC,OAAO;IAC1C,IAAI,CAACF,YAAY,EAAE;MACjB,IAAI,CAACG,yBAAyB,CAC5BxC,mBAAmB,CAACyC,QAAQ,EAC5B,IAAI,CAACT,KAAK,CAACU,QACb,CAAC;IACH;EACF;EAEAC,iBAAiBA,CAAA,EAAG;IAClB,KAAK,CAACA,iBAAiB,CAAC,CAAC;IACzB,IAAI,CAAC7C,MAAM,EAAE;MAEX,IAAI,CAAC8C,oBAAoB,GAAG,IAAIhC,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAACuB,QAAQ,CAAC;IAC1E;IACA,IAAI,CAACS,oBAAoB,EAAEC,YAAY,CAAC,CAAC;IACzC,IAAI,CAACC,6BAA6B,CAAC,CAAC;IACpC,IAAI,CAACpB,kBAAkB,CAACqB,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC;IAEpE,IAAI,IAAI,CAACb,QAAQ,EAAEc,OAAO,EAAEC,MAAM,EAAE;MAClCvC,cAAc,CAACwC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAChB,QAAQ,CAACc,OAAO,CAAC;IAC/D;IAEA,IAAI,CAACT,yBAAyB,CAC5BxC,mBAAmB,CAACoD,MAAM,EAC1B,IAAI,CAACpB,KAAK,CAACqB,MACb,CAAC;IACD,IAAI,CAACb,yBAAyB,CAC5BxC,mBAAmB,CAACsD,OAAO,EAC3B,IAAI,CAACtB,KAAK,CAACuB,OACb,CAAC;IAED,IAAIzD,MAAM,EAAE;MACV,IAAI,IAAI,CAACkC,KAAK,CAACuB,OAAO,IAAI,IAAI,CAACC,gBAAgB,EAAE;QAC/CnD,YAAY,CAAC,IAAI,CAACmD,gBAAgB,CAAC;MACrC;MAEA,IACE,CAAC,IAAI,CAACxB,KAAK,CAACU,QAAQ,IACpBtC,0BAA0B,CAAC,IAAI,CAAC4B,KAAK,CAACU,QAAwB,CAAC,EAC/D;QACA,IAAI,CAACpB,cAAc,GAAG,KAAK;QAC3B;MACF;MAEA,MAAMe,YAAY,GAAG,IAAI,CAACC,OAAO,EAAEC,OAAO;MAE1C,IAAI,CAACF,YAAY,EAAE;QACjB/B,uBAAuB,CACrB,IAAI,CAAC0B,KAAK,EACV,IAAI,CAACwB,gBAAgB,EACrBxD,mBAAmB,CAACyC,QACtB,CAAC;MACH,CAAC,MAAM,IAAI,IAAI,CAACe,gBAAgB,EAAE;QAChC,IAAI,CAACA,gBAAgB,CAACC,KAAK,CAACC,UAAU,GAAG,SAAS;MACpD;IACF;IAEA,IAAI,CAACpC,cAAc,GAAG,KAAK;EAC7B;EAEAqC,oBAAoBA,CAAA,EAAG;IACrB,KAAK,CAACA,oBAAoB,CAAC,CAAC;IAC5B,IAAI,CAACf,oBAAoB,EAAEgB,YAAY,CAAC,CAAC;IACzC,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAACnC,kBAAkB,CAACoC,iBAAiB,CAAC,CAAC;IAE3C,IAAI,IAAI,CAAC3B,QAAQ,EAAEc,OAAO,EAAEC,MAAM,EAAE;MAClCvC,cAAc,CAACoD,mBAAmB,CAAC,IAAI,CAAC;IAC1C;IAEA,MAAMR,OAAO,GAAG,IAAI,CAACvB,KAAK,CAACuB,OAAO;IAElC,IACEzD,MAAM,IACN,IAAI,CAAC0D,gBAAgB,IACrBD,OAAO,IACP,CAACnD,0BAA0B,CAACmD,OAAuB,CAAC,EACpD;MACA/C,uBAAuB,CAAC,CAAC;MAEzBF,uBAAuB,CACrB,IAAI,CAAC0B,KAAK,EACV,IAAI,CAACwB,gBAAgB,EACrBxD,mBAAmB,CAACsD,OACtB,CAAC;IACH;EACF;EAEAO,aAAaA,CAAA,EAAG;IACd,MAAMG,OAAO,GAAG,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1C,IAAID,OAAO,KAAK,CAAC,CAAC,EAAE;MAClB,KAAK,MAAMP,KAAK,IAAI,IAAI,CAACvC,eAAe,EAAE;QACxCuC,KAAK,CAACS,eAAe,CAACC,MAAM,CAACH,OAAO,CAAC;MACvC;MACA,IAAI,IAAI,CAAChC,KAAK,CAACoC,aAAa,EAAEF,eAAe,EAAE;QAC7C,IAAI,CAAClC,KAAK,CAACoC,aAAa,CAACF,eAAe,CAACC,MAAM,CAACH,OAAO,CAAC;MAC1D;IACF;EACF;EAEAK,cAAcA,CAACrC,KAAiB,EAAE;IAChC,IAAI,IAAI,CAACG,QAAQ,EAAEkC,cAAc,EAAE;MACjC,IAAI,CAAClC,QAAQ,CAACkC,cAAc,CAC1B,IAAI,CAACC,aAAa,EAClBtC,KACF,CAAC;IACH,CAAC,MAAM;MACJ,IAAI,CAACsC,aAAa,EAA2BD,cAAc,GAAGrC,KAAK,CAAC;IACvE;EACF;EAEAuC,2BAA2BA,CACzBC,UAAwB,EACxBC,aAA2B,EAC3BC,wBAA+C,EAC/C;IACA,MAAM;MAAEV,OAAO;MAAEW;IAAkB,CAAC,GAAG,IAAI,CAAC3B,YAAY,CAAC,CAAC;IAC1D,MAAM4B,SAAS,GAAG,IAAIC,GAAG,CAAaJ,aAAa,CAAC;IAGpD,IAAID,UAAU,EAAE;MAEd,MAAMM,eAAe,GACnBL,aAAa,CAACvB,MAAM,KAAK,CAAC,IAC1BsB,UAAU,CAACtB,MAAM,KAAK,CAAC,IACvBuB,aAAa,CAAC,CAAC,CAAC,KAAKD,UAAU,CAAC,CAAC,CAAC;MAEpC,IAAIM,eAAe,EAAE;QACnB;MACF;MAGA,KAAK,MAAMC,SAAS,IAAIP,UAAU,EAAE;QAClC,MAAMQ,SAAS,GAAGP,aAAa,CAACQ,IAAI,CAAExB,KAAK,IAAK;UAC9C,IAAIA,KAAK,KAAKsB,SAAS,EAAE;YACvBH,SAAS,CAACM,MAAM,CAACzB,KAAK,CAAC;YACvB,OAAO,IAAI;UACb;UACA,OAAO,KAAK;QACd,CAAC,CAAC;QACF,IAAI,CAACuB,SAAS,EAAE;UACdD,SAAS,CAACb,eAAe,CAACC,MAAM,CAACH,OAAO,CAAC;QAC3C;MACF;IACF;IACAY,SAAS,CAACO,OAAO,CAAE1B,KAAK,IAAK;MAC3BA,KAAK,CAACS,eAAe,CAACkB,GAAG,CACvB;QACEC,GAAG,EAAErB,OAAO;QACZW;MACF,CAAC,EACDlB,KAAK,CAAC6B,qBACR,CAAC;MACD,IAAIzF,OAAO,EAAE;QAQX0F,MAAM,CAACC,MAAM,CAACd,wBAAwB,CAAClD,KAAK,EAAEiC,KAAK,CAACgC,OAAO,CAACjE,KAAK,CAAC;QAClEiC,KAAK,CAACiC,kBAAkB,CAACnD,OAAO,GAAGmC,wBAAwB;MAC7D;IACF,CAAC,CAAC;EACJ;EAEA5B,6BAA6BA,CAAA,EAAG;IAC9B,IAAI,CAACyB,2BAA2B,CAC9B,IAAI,CAACpD,mBAAmB,EACxB,IAAI,CAACD,eAAe,EACpB,IAAI,CAACK,iBACP,CAAC;IACD,IAAI,CAACgD,2BAA2B,CAC9B,IAAI,CAAClD,kBAAkB,EACvB,IAAI,CAACD,cAAc,EACnB,IAAI,CAACK,iBACP,CAAC;EACH;EAEAkE,kBAAkBA,CAChBC,SAAwD,EACxDC,UAA6B,EAC7BC,QAAwB,EACxB;IACA,IAAI,CAACtD,yBAAyB,CAC5BxC,mBAAmB,CAACoD,MAAM,EAC1B,IAAI,CAACpB,KAAK,CAACqB,MAAM,EACjBuC,SAAS,CAACvC,MACZ,CAAC;IACD,IAAI,CAACb,yBAAyB,CAC5BxC,mBAAmB,CAACsD,OAAO,EAC3B,IAAI,CAACtB,KAAK,CAACuB,OAAO,EAClBqC,SAAS,CAACrC,OACZ,CAAC;IAED,IAAI,CAACX,oBAAoB,EAAEmD,YAAY,CAACH,SAAS,CAAC;IAClD,IAAI,CAAC9C,6BAA6B,CAAC,CAAC;IACpC,IAAI,CAACpB,kBAAkB,CAACqB,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACC,YAAY,CAAC,CAAC,CAAC;IAEpE,IAAIlD,MAAM,IAAI,IAAI,CAACkC,KAAK,CAACuB,OAAO,IAAI,IAAI,CAACC,gBAAgB,EAAE;MACzDnD,YAAY,CAAC,IAAI,CAACmD,gBAAgB,CAAC;IACrC;IAEA,IACE1D,MAAM,IACNgG,QAAQ,IACR,IAAI,CAAC9D,KAAK,CAACqB,MAAM,IACjB,CAACjD,0BAA0B,CAAC,IAAI,CAAC4B,KAAK,CAACqB,MAAsB,CAAC,EAC9D;MACA9C,2BAA2B,CACzB,IAAI,CAACyB,KAAK,EACV,IAAI,CAACwB,gBAAgB,EACrBsC,QACF,CAAC;IACH;EACF;EAEAE,aAAaA,CAAChE,KAAoD,EAAQ;IACxE,MAAMiE,cAAc,GAAGnF,YAAY,CAACC,YAAY,CAACiB,KAAK,CAACyB,KAAK,IAAI,EAAE,CAAC,CAAC;IACpE,IAAI,CAACtC,mBAAmB,GAAG,IAAI,CAACD,eAAe;IAC/C,IAAI,CAACA,eAAe,GAAG+E,cAAc,CAACC,cAAc;IAEpD,MAAMC,qBAAqB,GAAGrF,YAAY,CACxCC,YAAY,CAACiB,KAAK,CAACoC,aAAa,IAAI,EAAE,CACxC,CAAC;IACD,IAAI,CAAC/C,kBAAkB,GAAG,IAAI,CAACD,cAAc;IAC7C,IAAI,CAACA,cAAc,GAAG+E,qBAAqB,CAACD,cAAc;IAE1D,IAAIC,qBAAqB,CAACC,QAAQ,EAAE;MAClC,IAAIC,OAAO,IAAIJ,cAAc,CAACG,QAAQ,EAAE;QACtCrG,MAAM,CAACuG,IAAI,CACT,uIACF,CAAC;QACD,IAAI,CAACC,SAAS,GAAGN,cAAc,CAACG,QAAQ;QACxC;MACF;MAIA,MAAMI,WAAW,GAAAjB,MAAA,CAAAC,MAAA,KACZxD,KAAK,EACLmE,qBAAqB,CAACC,QAAA,CAC1B;MACD,OAAOI,WAAW,CAAC/C,KAAK;MACxB,OAAO+C,WAAW,CAACpC,aAAa;MAChC,IAAI,CAACmC,SAAS,GAAGC,WAAW;IAC9B,CAAC,MAAM;MACL,IAAI,CAACD,SAAS,GAAGN,cAAc,CAACG,QAAQ,IAAI,CAAC,CAAC;IAChD;EACF;EACA5D,yBAAyBA,CACvBiE,IAAyB,EACzBC,aAAmD,EACnDC,cAAyC,EACzC;IACA,IAAI7G,MAAM,IAAI4G,aAAa,KAAKC,cAAc,EAAE;MAC9C;IACF;IAEAlG,sBAAsB,CACpBgG,IAAI,KAAKzG,mBAAmB,CAACyC,QAAQ,GACjC,IAAI,CAACZ,YAAY,GACjB,IAAI,CAACoC,mBAAmB,CAAC,CAAC,EAC9BwC,IAAI,EACJC,aAAa,IACX9G,UAAU,CACR8G,aAAa,EACbD,IAAI,KAAKzG,mBAAmB,CAACoD,MAAM,GAC/BwD,SAAS,GACT,IAAI,CAAC5E,KAAK,EAAEyB,KAAK,EACrB,IAAI,CAACrB,YACP,CACJ,CAAC;EACH;EAKAyE,uBAAuBA,CAAA,EAAG;IACxB,IACE/G,MAAM,IACN,IAAI,CAACkC,KAAK,CAACqB,MAAM,IACjB,IAAI,CAACG,gBAAgB,EAAEsD,qBAAqB,EAC5C;MACA,OAAO,IAAI,CAACtD,gBAAgB,CAACsD,qBAAqB,CAAC,CAAC;IACtD;IAGA,OAAO,IAAI;EACb;EAEAC,MAAMA,CAAA,EAAG;IACP,MAAMC,aAAa,GAAG,IAAI,CAACrF,YAAY,CAACsF,sBAAsB,CAAC,IAAI,CAAC;IAEpE,IAAIpH,OAAO,EAAE;MACXmH,aAAa,CAACzF,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;MACxDyF,aAAa,CAACvF,iBAAiB,GAAG,IAAI,CAACA,iBAAiB;IAC1D;IAMA,IACE,IAAI,CAACH,cAAc,IACnBxB,MAAM,IACNkH,aAAa,CAACtE,QAAQ,IACtB,CAACtC,0BAA0B,CAAC4G,aAAa,CAACtE,QAAwB,CAAC,EACnE;MACAsE,aAAa,CAACvD,KAAK,GAAGyD,KAAK,CAACC,OAAO,CAACH,aAAa,CAACvD,KAAK,CAAC,GACpDuD,aAAa,CAACvD,KAAK,CAAC2D,MAAM,CAAC,CAAC;QAAE1D,UAAU,EAAE;MAAS,CAAC,CAAC,CAAC,GAAA6B,MAAA,CAAAC,MAAA,KAEhDwB,aAAa,CAACvD,KAAK,IAAI,CAAC,CAAC;QAC7BC,UAAU,EAAE;MAAQ,EACrB;IACP;IAEA,MAAMrB,YAAY,GAAG,IAAI,CAACC,OAAO,EAAEC,OAAO;IAC1C,MAAM8E,QAAQ,GAAGhF,YAAY,GAAGuE,SAAS,GAAG,GAAG,IAAI,CAAC/E,YAAY,EAAE;IAElE,MAAMyF,SAAS,GAAGzH,OAAO,GACrB;MACE0H,eAAe,EACb,IAAI,CAACvF,KAAK,CAACyB,KAAK,IAAI+D,uBAAuB,CAAC,IAAI,CAACxF,KAAK,CAACyB,KAAK,CAAC;MAC/DlC,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;MACzCE,iBAAiB,EAAE,IAAI,CAACA;IAC1B,CAAC,GACD,CAAC,CAAC;IAEN,OAAO,KAAK,CAACsF,MAAM,CAAAxB,MAAA,CAAAC,MAAA;MACjB6B;IAAQ,GACLL,aAAa,EACbM,SAAA,CACJ,CAAC;EACJ;AACF;AAEA,SAASE,uBAAuBA,CAC9B/D,KAAuE,EAC3B;EAC5C,IAAI,CAACA,KAAK,EAAE;IACV,OAAOA,KAAK;EACd;EACA,IAAI,CAACyD,KAAK,CAACC,OAAO,CAAC1D,KAAK,CAAC,EAAE;IACzB,OAAOA,KAAK,EAAES,eAAe,GAAG,CAAC,CAAC,GAAGT,KAAK;EAC5C;EACA,OAAOA,KAAK,CACTgE,MAAM,CACJC,YAAY,IAAK,EAAEA,YAAY,IAAI,iBAAiB,IAAIA,YAAY,CACvE,CAAC,CACAC,GAAG,CAAED,YAAY,IAAK;IACrB,IAAIR,KAAK,CAACC,OAAO,CAACO,YAAY,CAAC,EAAE;MAC/B,OAAOF,uBAAuB,CAACE,YAAY,CAAC;IAC9C;IACA,OAAOA,YAAY;EACrB,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
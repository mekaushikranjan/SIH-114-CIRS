{"ast":null,"code":"\"use strict\";\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"style\"];\nimport * as React from 'react';\nimport { Component } from 'react';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default class TouchableHighlight extends Component {\n  static defaultProps = Object.assign({}, GenericTouchable.defaultProps, {\n    activeOpacity: 0.85,\n    delayPressOut: 100,\n    underlayColor: 'black'\n  });\n  constructor(props) {\n    super(props);\n    this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: null\n    };\n  }\n  showUnderlay = () => {\n    if (!this.hasPressHandler()) {\n      return;\n    }\n    this.setState({\n      extraChildStyle: {\n        opacity: this.props.activeOpacity\n      },\n      extraUnderlayStyle: {\n        backgroundColor: this.props.underlayColor\n      }\n    });\n    this.props.onShowUnderlay?.();\n  };\n  hasPressHandler = () => this.props.onPress || this.props.onPressIn || this.props.onPressOut || this.props.onLongPress;\n  hideUnderlay = () => {\n    this.setState({\n      extraChildStyle: null,\n      extraUnderlayStyle: null\n    });\n    this.props.onHideUnderlay?.();\n  };\n  renderChildren() {\n    if (!this.props.children) {\n      return _jsx(View, {});\n    }\n    const child = React.Children.only(this.props.children);\n    return React.cloneElement(child, {\n      style: StyleSheet.compose(child.props.style, this.state.extraChildStyle)\n    });\n  }\n  onStateChange = (_from, to) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.showUnderlay();\n    } else if (to === TOUCHABLE_STATE.UNDETERMINED || to === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      this.hideUnderlay();\n    }\n  };\n  render() {\n    const _this$props = this.props,\n      {\n        style = {}\n      } = _this$props,\n      rest = _objectWithoutPropertiesLoose(_this$props, _excluded);\n    const {\n      extraUnderlayStyle\n    } = this.state;\n    return _jsx(GenericTouchable, Object.assign({}, rest, {\n      style: [style, extraUnderlayStyle],\n      onStateChange: this.onStateChange,\n      children: this.renderChildren()\n    }));\n  }\n}","map":{"version":3,"names":["React","Component","GenericTouchable","TOUCHABLE_STATE","StyleSheet","View","jsx","_jsx","TouchableHighlight","defaultProps","Object","assign","activeOpacity","delayPressOut","underlayColor","constructor","props","state","extraChildStyle","extraUnderlayStyle","showUnderlay","hasPressHandler","setState","opacity","backgroundColor","onShowUnderlay","onPress","onPressIn","onPressOut","onLongPress","hideUnderlay","onHideUnderlay","renderChildren","children","child","Children","only","cloneElement","style","compose","onStateChange","_from","to","BEGAN","UNDETERMINED","MOVED_OUTSIDE","render","_this$props","rest","_objectWithoutPropertiesLoose","_excluded"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-gesture-handler\\src\\components\\touchables\\TouchableHighlight.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Component } from 'react';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport type { GenericTouchableProps } from './GenericTouchableProps';\nimport {\n  StyleSheet,\n  View,\n  TouchableHighlightProps as RNTouchableHighlightProps,\n  ColorValue,\n  ViewProps,\n} from 'react-native';\n\ninterface State {\n  extraChildStyle: null | {\n    opacity?: number;\n  };\n  extraUnderlayStyle: null | {\n    backgroundColor?: ColorValue;\n  };\n}\n\n/**\n * @deprecated TouchableHighlight will be removed in the future version of Gesture Handler. Use Pressable instead.\n */\nexport type TouchableHighlightProps = RNTouchableHighlightProps &\n  GenericTouchableProps;\n\n/**\n * @deprecated TouchableHighlight will be removed in the future version of Gesture Handler. Use Pressable instead.\n *\n * TouchableHighlight follows RN's implementation\n */\nexport default class TouchableHighlight extends Component<\n  TouchableHighlightProps,\n  State\n> {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.85,\n    delayPressOut: 100,\n    underlayColor: 'black',\n  };\n\n  constructor(props: TouchableHighlightProps) {\n    super(props);\n    this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    };\n  }\n\n  // Copied from RN\n  showUnderlay = () => {\n    if (!this.hasPressHandler()) {\n      return;\n    }\n    this.setState({\n      extraChildStyle: {\n        opacity: this.props.activeOpacity,\n      },\n      extraUnderlayStyle: {\n        backgroundColor: this.props.underlayColor,\n      },\n    });\n    this.props.onShowUnderlay?.();\n  };\n\n  hasPressHandler = () =>\n    this.props.onPress ||\n    this.props.onPressIn ||\n    this.props.onPressOut ||\n    this.props.onLongPress;\n\n  hideUnderlay = () => {\n    this.setState({\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    });\n    this.props.onHideUnderlay?.();\n  };\n\n  renderChildren() {\n    if (!this.props.children) {\n      return <View />;\n    }\n\n    const child = React.Children.only(\n      this.props.children\n    ) as React.ReactElement<ViewProps>; // TODO: not sure if OK but fixes error\n    return React.cloneElement(child, {\n      style: StyleSheet.compose(child.props.style, this.state.extraChildStyle),\n    });\n  }\n\n  onStateChange = (_from: number, to: number) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.showUnderlay();\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.hideUnderlay();\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    const { extraUnderlayStyle } = this.state;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[style, extraUnderlayStyle]}\n        onStateChange={this.onStateChange}>\n        {this.renderChildren()}\n      </GenericTouchable>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
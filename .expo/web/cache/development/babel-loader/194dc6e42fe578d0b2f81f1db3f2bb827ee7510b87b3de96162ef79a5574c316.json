{"ast":null,"code":"\"use strict\";\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"enabled\"];\nimport { State } from '../../State';\nimport { EventTypes } from '../interfaces';\nimport GestureHandler from './GestureHandler';\nconst DEFAULT_MAX_DURATION_MS = 500;\nconst DEFAULT_MAX_DELAY_MS = 500;\nconst DEFAULT_NUMBER_OF_TAPS = 1;\nconst DEFAULT_MIN_NUMBER_OF_POINTERS = 1;\nexport default class TapGestureHandler extends GestureHandler {\n  maxDeltaX = Number.MIN_SAFE_INTEGER;\n  maxDeltaY = Number.MIN_SAFE_INTEGER;\n  maxDistSq = Number.MIN_SAFE_INTEGER;\n  maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  maxDelayMs = DEFAULT_MAX_DELAY_MS;\n  numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n  minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  currentMaxNumberOfPointers = 1;\n  startX = 0;\n  startY = 0;\n  offsetX = 0;\n  offsetY = 0;\n  lastX = 0;\n  lastY = 0;\n  tapsSoFar = 0;\n  updateGestureConfig(_ref) {\n    let {\n        enabled = true\n      } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n    super.updateGestureConfig(Object.assign({\n      enabled: enabled\n    }, props));\n    if (this.config.numberOfTaps !== undefined) {\n      this.numberOfTaps = this.config.numberOfTaps;\n    }\n    if (this.config.maxDurationMs !== undefined) {\n      this.maxDurationMs = this.config.maxDurationMs;\n    }\n    if (this.config.maxDelayMs !== undefined) {\n      this.maxDelayMs = this.config.maxDelayMs;\n    }\n    if (this.config.maxDeltaX !== undefined) {\n      this.maxDeltaX = this.config.maxDeltaX;\n    }\n    if (this.config.maxDeltaY !== undefined) {\n      this.maxDeltaY = this.config.maxDeltaY;\n    }\n    if (this.config.maxDist !== undefined) {\n      this.maxDistSq = this.config.maxDist * this.config.maxDist;\n    }\n    if (this.config.minPointers !== undefined) {\n      this.minNumberOfPointers = this.config.minPointers;\n    }\n  }\n  resetConfig() {\n    super.resetConfig();\n    this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n    this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n    this.maxDistSq = Number.MIN_SAFE_INTEGER;\n    this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n    this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n    this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n    this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  }\n  clearTimeouts() {\n    clearTimeout(this.waitTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n  startTap() {\n    this.clearTimeouts();\n    this.waitTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n  endTap() {\n    this.clearTimeouts();\n    if (++this.tapsSoFar === this.numberOfTaps && this.currentMaxNumberOfPointers >= this.minNumberOfPointers) {\n      this.activate();\n    } else {\n      this.delayTimeout = setTimeout(() => this.fail(), this.maxDelayMs);\n    }\n  }\n  updateLastCoords() {\n    const {\n      x,\n      y\n    } = this.tracker.getAbsoluteCoordsAverage();\n    this.lastX = x;\n    this.lastY = y;\n  }\n  onPointerDown(event) {\n    if (!this.isButtonInConfig(event.button)) {\n      return;\n    }\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.trySettingPosition(event);\n    this.startX = event.x;\n    this.startY = event.y;\n    this.lastX = event.x;\n    this.lastY = event.y;\n    this.updateState(event);\n    this.tryToSendTouchEvent(event);\n  }\n  onPointerAdd(event) {\n    super.onPointerAdd(event);\n    this.tracker.addToTracker(event);\n    this.trySettingPosition(event);\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY - this.startY;\n    this.updateLastCoords();\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n    this.updateState(event);\n  }\n  onPointerUp(event) {\n    super.onPointerUp(event);\n    this.updateLastCoords();\n    this.tracker.removeFromTracker(event.pointerId);\n    this.updateState(event);\n  }\n  onPointerRemove(event) {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY = this.startY;\n    this.updateLastCoords();\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n    this.updateState(event);\n  }\n  onPointerMove(event) {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n    this.updateLastCoords();\n    this.updateState(event);\n    super.onPointerMove(event);\n  }\n  onPointerOutOfBounds(event) {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n    this.updateLastCoords();\n    this.updateState(event);\n    super.onPointerOutOfBounds(event);\n  }\n  updateState(event) {\n    if (this.currentMaxNumberOfPointers < this.tracker.trackedPointersCount) {\n      this.currentMaxNumberOfPointers = this.tracker.trackedPointersCount;\n    }\n    if (this.shouldFail()) {\n      this.fail();\n      return;\n    }\n    switch (this.state) {\n      case State.UNDETERMINED:\n        if (event.eventType === EventTypes.DOWN) {\n          this.begin();\n        }\n        this.startTap();\n        break;\n      case State.BEGAN:\n        if (event.eventType === EventTypes.UP) {\n          this.endTap();\n        }\n        if (event.eventType === EventTypes.DOWN) {\n          this.startTap();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n  trySettingPosition(event) {\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.startX = event.x;\n    this.startY = event.y;\n  }\n  shouldFail() {\n    const dx = this.lastX - this.startX + this.offsetX;\n    if (this.maxDeltaX !== Number.MIN_SAFE_INTEGER && Math.abs(dx) > this.maxDeltaX) {\n      return true;\n    }\n    const dy = this.lastY - this.startY + this.offsetY;\n    if (this.maxDeltaY !== Number.MIN_SAFE_INTEGER && Math.abs(dy) > this.maxDeltaY) {\n      return true;\n    }\n    const distSq = dy * dy + dx * dx;\n    return this.maxDistSq !== Number.MIN_SAFE_INTEGER && distSq > this.maxDistSq;\n  }\n  activate() {\n    super.activate();\n    this.end();\n  }\n  onCancel() {\n    this.resetProgress();\n    this.clearTimeouts();\n  }\n  resetProgress() {\n    this.clearTimeouts();\n    this.tapsSoFar = 0;\n    this.currentMaxNumberOfPointers = 0;\n  }\n}","map":{"version":3,"names":["State","EventTypes","GestureHandler","DEFAULT_MAX_DURATION_MS","DEFAULT_MAX_DELAY_MS","DEFAULT_NUMBER_OF_TAPS","DEFAULT_MIN_NUMBER_OF_POINTERS","TapGestureHandler","maxDeltaX","Number","MIN_SAFE_INTEGER","maxDeltaY","maxDistSq","maxDurationMs","maxDelayMs","numberOfTaps","minNumberOfPointers","currentMaxNumberOfPointers","startX","startY","offsetX","offsetY","lastX","lastY","tapsSoFar","updateGestureConfig","_ref","enabled","props","_objectWithoutPropertiesLoose","_excluded","Object","assign","config","undefined","maxDist","minPointers","resetConfig","clearTimeouts","clearTimeout","waitTimeout","delayTimeout","startTap","setTimeout","fail","endTap","activate","updateLastCoords","x","y","tracker","getAbsoluteCoordsAverage","onPointerDown","event","isButtonInConfig","button","addToTracker","trySettingPosition","updateState","tryToSendTouchEvent","onPointerAdd","onPointerUp","removeFromTracker","pointerId","onPointerRemove","onPointerMove","track","onPointerOutOfBounds","trackedPointersCount","shouldFail","state","UNDETERMINED","eventType","DOWN","begin","BEGAN","UP","dx","Math","abs","dy","distSq","end","onCancel","resetProgress"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-gesture-handler\\src\\web\\handlers\\TapGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { AdaptedEvent, Config, EventTypes } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MAX_DURATION_MS = 500;\nconst DEFAULT_MAX_DELAY_MS = 500;\nconst DEFAULT_NUMBER_OF_TAPS = 1;\nconst DEFAULT_MIN_NUMBER_OF_POINTERS = 1;\n\nexport default class TapGestureHandler extends GestureHandler {\n  private maxDeltaX = Number.MIN_SAFE_INTEGER;\n  private maxDeltaY = Number.MIN_SAFE_INTEGER;\n  private maxDistSq = Number.MIN_SAFE_INTEGER;\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private maxDelayMs = DEFAULT_MAX_DELAY_MS;\n\n  private numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n  private minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  private currentMaxNumberOfPointers = 1;\n\n  private startX = 0;\n  private startY = 0;\n  private offsetX = 0;\n  private offsetY = 0;\n  private lastX = 0;\n  private lastY = 0;\n\n  private waitTimeout: number | undefined;\n  private delayTimeout: number | undefined;\n\n  private tapsSoFar = 0;\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.numberOfTaps !== undefined) {\n      this.numberOfTaps = this.config.numberOfTaps;\n    }\n\n    if (this.config.maxDurationMs !== undefined) {\n      this.maxDurationMs = this.config.maxDurationMs;\n    }\n\n    if (this.config.maxDelayMs !== undefined) {\n      this.maxDelayMs = this.config.maxDelayMs;\n    }\n\n    if (this.config.maxDeltaX !== undefined) {\n      this.maxDeltaX = this.config.maxDeltaX;\n    }\n\n    if (this.config.maxDeltaY !== undefined) {\n      this.maxDeltaY = this.config.maxDeltaY;\n    }\n\n    if (this.config.maxDist !== undefined) {\n      this.maxDistSq = this.config.maxDist * this.config.maxDist;\n    }\n\n    if (this.config.minPointers !== undefined) {\n      this.minNumberOfPointers = this.config.minPointers;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n\n    this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n    this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n    this.maxDistSq = Number.MIN_SAFE_INTEGER;\n    this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n    this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n    this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n    this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  }\n\n  private clearTimeouts(): void {\n    clearTimeout(this.waitTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  private startTap(): void {\n    this.clearTimeouts();\n\n    this.waitTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n\n  private endTap(): void {\n    this.clearTimeouts();\n\n    if (\n      ++this.tapsSoFar === this.numberOfTaps &&\n      this.currentMaxNumberOfPointers >= this.minNumberOfPointers\n    ) {\n      this.activate();\n    } else {\n      this.delayTimeout = setTimeout(() => this.fail(), this.maxDelayMs);\n    }\n  }\n\n  private updateLastCoords() {\n    const { x, y } = this.tracker.getAbsoluteCoordsAverage();\n\n    this.lastX = x;\n    this.lastY = y;\n  }\n\n  // Handling Events\n  protected onPointerDown(event: AdaptedEvent): void {\n    if (!this.isButtonInConfig(event.button)) {\n      return;\n    }\n\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.trySettingPosition(event);\n\n    this.startX = event.x;\n    this.startY = event.y;\n\n    this.lastX = event.x;\n    this.lastY = event.y;\n\n    this.updateState(event);\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    super.onPointerAdd(event);\n    this.tracker.addToTracker(event);\n    this.trySettingPosition(event);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY - this.startY;\n\n    this.updateLastCoords();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n\n    this.updateState(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n\n    this.updateLastCoords();\n\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.updateState(event);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY = this.startY;\n\n    this.updateLastCoords();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n\n    this.updateState(event);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    this.updateLastCoords();\n    this.updateState(event);\n\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    this.updateLastCoords();\n    this.updateState(event);\n\n    super.onPointerOutOfBounds(event);\n  }\n\n  private updateState(event: AdaptedEvent): void {\n    if (this.currentMaxNumberOfPointers < this.tracker.trackedPointersCount) {\n      this.currentMaxNumberOfPointers = this.tracker.trackedPointersCount;\n    }\n\n    if (this.shouldFail()) {\n      this.fail();\n      return;\n    }\n\n    switch (this.state) {\n      case State.UNDETERMINED:\n        if (event.eventType === EventTypes.DOWN) {\n          this.begin();\n        }\n        this.startTap();\n        break;\n      case State.BEGAN:\n        if (event.eventType === EventTypes.UP) {\n          this.endTap();\n        }\n        if (event.eventType === EventTypes.DOWN) {\n          this.startTap();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  private trySettingPosition(event: AdaptedEvent): void {\n    if (this.state !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.startX = event.x;\n    this.startY = event.y;\n  }\n\n  private shouldFail(): boolean {\n    const dx = this.lastX - this.startX + this.offsetX;\n\n    if (\n      this.maxDeltaX !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dx) > this.maxDeltaX\n    ) {\n      return true;\n    }\n\n    const dy = this.lastY - this.startY + this.offsetY;\n    if (\n      this.maxDeltaY !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dy) > this.maxDeltaY\n    ) {\n      return true;\n    }\n\n    const distSq = dy * dy + dx * dx;\n\n    return (\n      this.maxDistSq !== Number.MIN_SAFE_INTEGER && distSq > this.maxDistSq\n    );\n  }\n\n  public activate(): void {\n    super.activate();\n\n    this.end();\n  }\n\n  protected onCancel(): void {\n    this.resetProgress();\n    this.clearTimeouts();\n  }\n\n  protected resetProgress(): void {\n    this.clearTimeouts();\n    this.tapsSoFar = 0;\n    this.currentMaxNumberOfPointers = 0;\n  }\n}\n"],"mappings":";;;;AAAA,SAASA,KAAK,QAAQ,aAAa;AACnC,SAA+BC,UAAU,QAAQ,eAAe;AAEhE,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,MAAMC,uBAAuB,GAAG,GAAG;AACnC,MAAMC,oBAAoB,GAAG,GAAG;AAChC,MAAMC,sBAAsB,GAAG,CAAC;AAChC,MAAMC,8BAA8B,GAAG,CAAC;AAExC,eAAe,MAAMC,iBAAiB,SAASL,cAAc,CAAC;EACpDM,SAAS,GAAGC,MAAM,CAACC,gBAAgB;EACnCC,SAAS,GAAGF,MAAM,CAACC,gBAAgB;EACnCE,SAAS,GAAGH,MAAM,CAACC,gBAAgB;EACnCG,aAAa,GAAGV,uBAAuB;EACvCW,UAAU,GAAGV,oBAAoB;EAEjCW,YAAY,GAAGV,sBAAsB;EACrCW,mBAAmB,GAAGV,8BAA8B;EACpDW,0BAA0B,GAAG,CAAC;EAE9BC,MAAM,GAAG,CAAC;EACVC,MAAM,GAAG,CAAC;EACVC,OAAO,GAAG,CAAC;EACXC,OAAO,GAAG,CAAC;EACXC,KAAK,GAAG,CAAC;EACTC,KAAK,GAAG,CAAC;EAKTC,SAAS,GAAG,CAAC;EAEdC,mBAAmBA,CAAAC,IAAA,EAA6C;IAAA,IAA5C;QAAEC,OAAO,GAAG;MAAuB,CAAC,GAAAD,IAAA;MAAfE,KAAA,GAAAC,6BAAA,CAAAH,IAAA,EAAAI,SAAA;IAC9C,KAAK,CAACL,mBAAmB,CAAAM,MAAA,CAAAC,MAAA;MAAGL,OAAO,EAAEA;IAAO,GAAKC,KAAA,CAAO,CAAC;IAEzD,IAAI,IAAI,CAACK,MAAM,CAAClB,YAAY,KAAKmB,SAAS,EAAE;MAC1C,IAAI,CAACnB,YAAY,GAAG,IAAI,CAACkB,MAAM,CAAClB,YAAY;IAC9C;IAEA,IAAI,IAAI,CAACkB,MAAM,CAACpB,aAAa,KAAKqB,SAAS,EAAE;MAC3C,IAAI,CAACrB,aAAa,GAAG,IAAI,CAACoB,MAAM,CAACpB,aAAa;IAChD;IAEA,IAAI,IAAI,CAACoB,MAAM,CAACnB,UAAU,KAAKoB,SAAS,EAAE;MACxC,IAAI,CAACpB,UAAU,GAAG,IAAI,CAACmB,MAAM,CAACnB,UAAU;IAC1C;IAEA,IAAI,IAAI,CAACmB,MAAM,CAACzB,SAAS,KAAK0B,SAAS,EAAE;MACvC,IAAI,CAAC1B,SAAS,GAAG,IAAI,CAACyB,MAAM,CAACzB,SAAS;IACxC;IAEA,IAAI,IAAI,CAACyB,MAAM,CAACtB,SAAS,KAAKuB,SAAS,EAAE;MACvC,IAAI,CAACvB,SAAS,GAAG,IAAI,CAACsB,MAAM,CAACtB,SAAS;IACxC;IAEA,IAAI,IAAI,CAACsB,MAAM,CAACE,OAAO,KAAKD,SAAS,EAAE;MACrC,IAAI,CAACtB,SAAS,GAAG,IAAI,CAACqB,MAAM,CAACE,OAAO,GAAG,IAAI,CAACF,MAAM,CAACE,OAAO;IAC5D;IAEA,IAAI,IAAI,CAACF,MAAM,CAACG,WAAW,KAAKF,SAAS,EAAE;MACzC,IAAI,CAAClB,mBAAmB,GAAG,IAAI,CAACiB,MAAM,CAACG,WAAW;IACpD;EACF;EAEUC,WAAWA,CAAA,EAAS;IAC5B,KAAK,CAACA,WAAW,CAAC,CAAC;IAEnB,IAAI,CAAC7B,SAAS,GAAGC,MAAM,CAACC,gBAAgB;IACxC,IAAI,CAACC,SAAS,GAAGF,MAAM,CAACC,gBAAgB;IACxC,IAAI,CAACE,SAAS,GAAGH,MAAM,CAACC,gBAAgB;IACxC,IAAI,CAACG,aAAa,GAAGV,uBAAuB;IAC5C,IAAI,CAACW,UAAU,GAAGV,oBAAoB;IACtC,IAAI,CAACW,YAAY,GAAGV,sBAAsB;IAC1C,IAAI,CAACW,mBAAmB,GAAGV,8BAA8B;EAC3D;EAEQgC,aAAaA,CAAA,EAAS;IAC5BC,YAAY,CAAC,IAAI,CAACC,WAAW,CAAC;IAC9BD,YAAY,CAAC,IAAI,CAACE,YAAY,CAAC;EACjC;EAEQC,QAAQA,CAAA,EAAS;IACvB,IAAI,CAACJ,aAAa,CAAC,CAAC;IAEpB,IAAI,CAACE,WAAW,GAAGG,UAAU,CAAC,MAAM,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC/B,aAAa,CAAC;EACtE;EAEQgC,MAAMA,CAAA,EAAS;IACrB,IAAI,CAACP,aAAa,CAAC,CAAC;IAEpB,IACE,EAAE,IAAI,CAACd,SAAS,KAAK,IAAI,CAACT,YAAY,IACtC,IAAI,CAACE,0BAA0B,IAAI,IAAI,CAACD,mBAAmB,EAC3D;MACA,IAAI,CAAC8B,QAAQ,CAAC,CAAC;IACjB,CAAC,MAAM;MACL,IAAI,CAACL,YAAY,GAAGE,UAAU,CAAC,MAAM,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC9B,UAAU,CAAC;IACpE;EACF;EAEQiC,gBAAgBA,CAAA,EAAG;IACzB,MAAM;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAG,IAAI,CAACC,OAAO,CAACC,wBAAwB,CAAC,CAAC;IAExD,IAAI,CAAC7B,KAAK,GAAG0B,CAAC;IACd,IAAI,CAACzB,KAAK,GAAG0B,CAAC;EAChB;EAGUG,aAAaA,CAACC,KAAmB,EAAQ;IACjD,IAAI,CAAC,IAAI,CAACC,gBAAgB,CAACD,KAAK,CAACE,MAAM,CAAC,EAAE;MACxC;IACF;IAEA,IAAI,CAACL,OAAO,CAACM,YAAY,CAACH,KAAK,CAAC;IAChC,KAAK,CAACD,aAAa,CAACC,KAAK,CAAC;IAE1B,IAAI,CAACI,kBAAkB,CAACJ,KAAK,CAAC;IAE9B,IAAI,CAACnC,MAAM,GAAGmC,KAAK,CAACL,CAAC;IACrB,IAAI,CAAC7B,MAAM,GAAGkC,KAAK,CAACJ,CAAC;IAErB,IAAI,CAAC3B,KAAK,GAAG+B,KAAK,CAACL,CAAC;IACpB,IAAI,CAACzB,KAAK,GAAG8B,KAAK,CAACJ,CAAC;IAEpB,IAAI,CAACS,WAAW,CAACL,KAAK,CAAC;IAEvB,IAAI,CAACM,mBAAmB,CAACN,KAAK,CAAC;EACjC;EAEUO,YAAYA,CAACP,KAAmB,EAAQ;IAChD,KAAK,CAACO,YAAY,CAACP,KAAK,CAAC;IACzB,IAAI,CAACH,OAAO,CAACM,YAAY,CAACH,KAAK,CAAC;IAChC,IAAI,CAACI,kBAAkB,CAACJ,KAAK,CAAC;IAE9B,IAAI,CAACjC,OAAO,IAAI,IAAI,CAACE,KAAK,GAAG,IAAI,CAACJ,MAAM;IACxC,IAAI,CAACG,OAAO,IAAI,IAAI,CAACE,KAAK,GAAG,IAAI,CAACJ,MAAM;IAExC,IAAI,CAAC4B,gBAAgB,CAAC,CAAC;IAEvB,IAAI,CAAC7B,MAAM,GAAG,IAAI,CAACI,KAAK;IACxB,IAAI,CAACH,MAAM,GAAG,IAAI,CAACI,KAAK;IAExB,IAAI,CAACmC,WAAW,CAACL,KAAK,CAAC;EACzB;EAEUQ,WAAWA,CAACR,KAAmB,EAAQ;IAC/C,KAAK,CAACQ,WAAW,CAACR,KAAK,CAAC;IAExB,IAAI,CAACN,gBAAgB,CAAC,CAAC;IAEvB,IAAI,CAACG,OAAO,CAACY,iBAAiB,CAACT,KAAK,CAACU,SAAS,CAAC;IAE/C,IAAI,CAACL,WAAW,CAACL,KAAK,CAAC;EACzB;EAEUW,eAAeA,CAACX,KAAmB,EAAQ;IACnD,KAAK,CAACW,eAAe,CAACX,KAAK,CAAC;IAC5B,IAAI,CAACH,OAAO,CAACY,iBAAiB,CAACT,KAAK,CAACU,SAAS,CAAC;IAE/C,IAAI,CAAC3C,OAAO,IAAI,IAAI,CAACE,KAAK,GAAG,IAAI,CAACJ,MAAM;IACxC,IAAI,CAACG,OAAO,IAAI,IAAI,CAACE,KAAK,GAAG,IAAI,CAACJ,MAAM;IAExC,IAAI,CAAC4B,gBAAgB,CAAC,CAAC;IAEvB,IAAI,CAAC7B,MAAM,GAAG,IAAI,CAACI,KAAK;IACxB,IAAI,CAACH,MAAM,GAAG,IAAI,CAACI,KAAK;IAExB,IAAI,CAACmC,WAAW,CAACL,KAAK,CAAC;EACzB;EAEUY,aAAaA,CAACZ,KAAmB,EAAQ;IACjD,IAAI,CAACI,kBAAkB,CAACJ,KAAK,CAAC;IAC9B,IAAI,CAACH,OAAO,CAACgB,KAAK,CAACb,KAAK,CAAC;IAEzB,IAAI,CAACN,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACW,WAAW,CAACL,KAAK,CAAC;IAEvB,KAAK,CAACY,aAAa,CAACZ,KAAK,CAAC;EAC5B;EAEUc,oBAAoBA,CAACd,KAAmB,EAAQ;IACxD,IAAI,CAACI,kBAAkB,CAACJ,KAAK,CAAC;IAC9B,IAAI,CAACH,OAAO,CAACgB,KAAK,CAACb,KAAK,CAAC;IAEzB,IAAI,CAACN,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACW,WAAW,CAACL,KAAK,CAAC;IAEvB,KAAK,CAACc,oBAAoB,CAACd,KAAK,CAAC;EACnC;EAEQK,WAAWA,CAACL,KAAmB,EAAQ;IAC7C,IAAI,IAAI,CAACpC,0BAA0B,GAAG,IAAI,CAACiC,OAAO,CAACkB,oBAAoB,EAAE;MACvE,IAAI,CAACnD,0BAA0B,GAAG,IAAI,CAACiC,OAAO,CAACkB,oBAAoB;IACrE;IAEA,IAAI,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE;MACrB,IAAI,CAACzB,IAAI,CAAC,CAAC;MACX;IACF;IAEA,QAAQ,IAAI,CAAC0B,KAAK;MAChB,KAAKtE,KAAK,CAACuE,YAAY;QACrB,IAAIlB,KAAK,CAACmB,SAAS,KAAKvE,UAAU,CAACwE,IAAI,EAAE;UACvC,IAAI,CAACC,KAAK,CAAC,CAAC;QACd;QACA,IAAI,CAAChC,QAAQ,CAAC,CAAC;QACf;MACF,KAAK1C,KAAK,CAAC2E,KAAK;QACd,IAAItB,KAAK,CAACmB,SAAS,KAAKvE,UAAU,CAAC2E,EAAE,EAAE;UACrC,IAAI,CAAC/B,MAAM,CAAC,CAAC;QACf;QACA,IAAIQ,KAAK,CAACmB,SAAS,KAAKvE,UAAU,CAACwE,IAAI,EAAE;UACvC,IAAI,CAAC/B,QAAQ,CAAC,CAAC;QACjB;QACA;MACF;QACE;IACJ;EACF;EAEQe,kBAAkBA,CAACJ,KAAmB,EAAQ;IACpD,IAAI,IAAI,CAACiB,KAAK,KAAKtE,KAAK,CAACuE,YAAY,EAAE;MACrC;IACF;IAEA,IAAI,CAACnD,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACH,MAAM,GAAGmC,KAAK,CAACL,CAAC;IACrB,IAAI,CAAC7B,MAAM,GAAGkC,KAAK,CAACJ,CAAC;EACvB;EAEQoB,UAAUA,CAAA,EAAY;IAC5B,MAAMQ,EAAE,GAAG,IAAI,CAACvD,KAAK,GAAG,IAAI,CAACJ,MAAM,GAAG,IAAI,CAACE,OAAO;IAElD,IACE,IAAI,CAACZ,SAAS,KAAKC,MAAM,CAACC,gBAAgB,IAC1CoE,IAAI,CAACC,GAAG,CAACF,EAAE,CAAC,GAAG,IAAI,CAACrE,SAAS,EAC7B;MACA,OAAO,IAAI;IACb;IAEA,MAAMwE,EAAE,GAAG,IAAI,CAACzD,KAAK,GAAG,IAAI,CAACJ,MAAM,GAAG,IAAI,CAACE,OAAO;IAClD,IACE,IAAI,CAACV,SAAS,KAAKF,MAAM,CAACC,gBAAgB,IAC1CoE,IAAI,CAACC,GAAG,CAACC,EAAE,CAAC,GAAG,IAAI,CAACrE,SAAS,EAC7B;MACA,OAAO,IAAI;IACb;IAEA,MAAMsE,MAAM,GAAGD,EAAE,GAAGA,EAAE,GAAGH,EAAE,GAAGA,EAAE;IAEhC,OACE,IAAI,CAACjE,SAAS,KAAKH,MAAM,CAACC,gBAAgB,IAAIuE,MAAM,GAAG,IAAI,CAACrE,SAAS;EAEzE;EAEOkC,QAAQA,CAAA,EAAS;IACtB,KAAK,CAACA,QAAQ,CAAC,CAAC;IAEhB,IAAI,CAACoC,GAAG,CAAC,CAAC;EACZ;EAEUC,QAAQA,CAAA,EAAS;IACzB,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,IAAI,CAAC9C,aAAa,CAAC,CAAC;EACtB;EAEU8C,aAAaA,CAAA,EAAS;IAC9B,IAAI,CAAC9C,aAAa,CAAC,CAAC;IACpB,IAAI,CAACd,SAAS,GAAG,CAAC;IAClB,IAAI,CAACP,0BAA0B,GAAG,CAAC;EACrC;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
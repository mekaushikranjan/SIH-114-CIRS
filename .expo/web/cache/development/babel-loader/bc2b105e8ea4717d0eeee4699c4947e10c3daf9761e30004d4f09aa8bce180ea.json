{"ast":null,"code":"'use strict';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"animationTimingFunction\"];\nimport { ReanimatedError } from \"../../../../common/index.js\";\nimport { PERCENTAGE_REGEX } from \"../../../constants/index.js\";\nimport { isDefined, isNumber } from \"../../../utils/index.js\";\nimport { normalizeTimingFunction } from \"../common/index.js\";\nexport const ERROR_MESSAGES = {\n  invalidOffsetType: selector => `Invalid keyframe selector \"${selector}\". Only numbers, percentages, \"from\", and \"to\" are supported.`,\n  invalidOffsetRange: selector => `Invalid keyframe selector \"${selector}\". Expected a number between 0 and 1 or a percentage between 0% and 100%.`\n};\nfunction normalizeKeyframeSelector(keyframeSelector) {\n  const selectors = typeof keyframeSelector === 'string' ? keyframeSelector.split(',').map(k => k.trim()) : [keyframeSelector];\n  const offsets = selectors.map(selector => {\n    if (selector === 'from') {\n      return 0;\n    }\n    if (selector === 'to') {\n      return 1;\n    }\n    let offset;\n    if (typeof selector === 'number' || !isNaN(+selector)) {\n      offset = +selector;\n    } else if (PERCENTAGE_REGEX.test(selector)) {\n      offset = parseFloat(selector) / 100;\n    }\n    if (!isNumber(offset)) {\n      throw new ReanimatedError(ERROR_MESSAGES.invalidOffsetType(selector));\n    }\n    if (offset < 0 || offset > 1) {\n      throw new ReanimatedError(ERROR_MESSAGES.invalidOffsetRange(selector));\n    }\n    return offset;\n  });\n  return offsets;\n}\nfunction processKeyframes(keyframes, styleBuilder) {\n  return Object.entries(keyframes).flatMap(([selector, _ref = {}]) => {\n    let {\n        animationTimingFunction = undefined\n      } = _ref,\n      style = _objectWithoutPropertiesLoose(_ref, _excluded);\n    const normalizedStyle = styleBuilder.buildFrom(style);\n    if (!normalizedStyle) {\n      return [];\n    }\n    return normalizeKeyframeSelector(selector).map(offset => ({\n      offset,\n      style: normalizedStyle,\n      timingFunction: animationTimingFunction\n    }));\n  }).sort((a, b) => a.offset - b.offset).reduce((acc, keyframe) => {\n    const lastKeyframe = acc[acc.length - 1];\n    if (lastKeyframe && lastKeyframe.offset === keyframe.offset) {\n      lastKeyframe.style = Object.assign({}, lastKeyframe.style, keyframe.style);\n      lastKeyframe.timingFunction = keyframe.timingFunction;\n    } else {\n      acc.push(keyframe);\n    }\n    return acc;\n  }, []);\n}\nfunction processStyleProperties(offset, style, keyframeStyle, styleBuilder) {\n  Object.entries(style).forEach(([property, value]) => {\n    if (!isDefined(value)) {\n      return;\n    }\n    if (typeof value === 'object') {\n      if (!Array.isArray(value) || styleBuilder.isSeparatelyInterpolatedArrayProperty(property)) {\n        if (!keyframeStyle[property]) {\n          keyframeStyle[property] = Array.isArray(value) ? [] : {};\n        }\n        processStyleProperties(offset, value, keyframeStyle[property], styleBuilder);\n        return;\n      }\n    }\n    if (!keyframeStyle[property]) {\n      keyframeStyle[property] = [];\n    }\n    keyframeStyle[property].push({\n      offset,\n      value\n    });\n  });\n}\nexport function normalizeAnimationKeyframes(keyframes, styleBuilder) {\n  const keyframesStyle = {};\n  const timingFunctions = {};\n  processKeyframes(keyframes, styleBuilder).forEach(({\n    offset,\n    style,\n    timingFunction\n  }) => {\n    processStyleProperties(offset, style, keyframesStyle, styleBuilder);\n    if (timingFunction && offset < 1) {\n      timingFunctions[offset] = normalizeTimingFunction(timingFunction);\n    }\n  });\n  return {\n    keyframesStyle,\n    keyframeTimingFunctions: timingFunctions\n  };\n}","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_excluded","ReanimatedError","PERCENTAGE_REGEX","isDefined","isNumber","normalizeTimingFunction","ERROR_MESSAGES","invalidOffsetType","selector","invalidOffsetRange","normalizeKeyframeSelector","keyframeSelector","selectors","split","map","k","trim","offsets","offset","isNaN","test","parseFloat","processKeyframes","keyframes","styleBuilder","Object","entries","flatMap","_ref","animationTimingFunction","undefined","style","normalizedStyle","buildFrom","timingFunction","sort","a","b","reduce","acc","keyframe","lastKeyframe","length","assign","push","processStyleProperties","keyframeStyle","forEach","property","value","Array","isArray","isSeparatelyInterpolatedArrayProperty","normalizeAnimationKeyframes","keyframesStyle","timingFunctions","keyframeTimingFunctions"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\css\\native\\normalization\\animation\\keyframes.ts"],"sourcesContent":["'use strict';\nimport { ReanimatedError } from '../../../../common';\nimport type { StyleProps } from '../../../../commonTypes';\nimport { PERCENTAGE_REGEX } from '../../../constants';\nimport type {\n  AnyRecord,\n  CSSAnimationKeyframes,\n  CSSAnimationKeyframeSelector,\n  CSSAnimationTimingFunction,\n} from '../../../types';\nimport { isDefined, isNumber } from '../../../utils';\nimport type { StyleBuilder } from '../../style';\nimport type {\n  NormalizedCSSAnimationKeyframesConfig,\n  NormalizedCSSKeyframesStyle,\n  NormalizedCSSKeyframeTimingFunctions,\n} from '../../types';\nimport { normalizeTimingFunction } from '../common';\n\nexport const ERROR_MESSAGES = {\n  invalidOffsetType: (selector: CSSAnimationKeyframeSelector) =>\n    `Invalid keyframe selector \"${selector}\". Only numbers, percentages, \"from\", and \"to\" are supported.`,\n  invalidOffsetRange: (selector: CSSAnimationKeyframeSelector) =>\n    `Invalid keyframe selector \"${selector}\". Expected a number between 0 and 1 or a percentage between 0% and 100%.`,\n};\n\nfunction normalizeKeyframeSelector(\n  keyframeSelector: CSSAnimationKeyframeSelector\n): number[] {\n  const selectors =\n    typeof keyframeSelector === 'string'\n      ? keyframeSelector.split(',').map((k) => k.trim())\n      : [keyframeSelector];\n\n  const offsets = selectors.map((selector) => {\n    if (selector === 'from') {\n      return 0;\n    }\n    if (selector === 'to') {\n      return 1;\n    }\n\n    let offset: number | undefined;\n\n    if (typeof selector === 'number' || !isNaN(+selector)) {\n      offset = +selector;\n    } else if (PERCENTAGE_REGEX.test(selector)) {\n      offset = parseFloat(selector) / 100;\n    }\n\n    if (!isNumber(offset)) {\n      throw new ReanimatedError(ERROR_MESSAGES.invalidOffsetType(selector));\n    }\n    if (offset < 0 || offset > 1) {\n      throw new ReanimatedError(ERROR_MESSAGES.invalidOffsetRange(selector));\n    }\n\n    return offset;\n  });\n\n  return offsets;\n}\n\ntype ProcessedKeyframes = Array<{\n  offset: number;\n  style: StyleProps;\n  timingFunction?: CSSAnimationTimingFunction;\n}>;\n\nfunction processKeyframes(\n  keyframes: CSSAnimationKeyframes,\n  styleBuilder: StyleBuilder<AnyRecord>\n): ProcessedKeyframes {\n  return Object.entries(keyframes)\n    .flatMap(\n      ([selector, { animationTimingFunction = undefined, ...style } = {}]) => {\n        const normalizedStyle = styleBuilder.buildFrom(style);\n        if (!normalizedStyle) {\n          return [];\n        }\n        return normalizeKeyframeSelector(selector).map((offset) => ({\n          offset,\n          style: normalizedStyle,\n          timingFunction: animationTimingFunction,\n        }));\n      }\n    )\n    .sort((a, b) => a.offset - b.offset)\n    .reduce<ProcessedKeyframes>((acc, keyframe) => {\n      const lastKeyframe = acc[acc.length - 1];\n      if (lastKeyframe && lastKeyframe.offset === keyframe.offset) {\n        lastKeyframe.style = { ...lastKeyframe.style, ...keyframe.style };\n        lastKeyframe.timingFunction = keyframe.timingFunction;\n      } else {\n        acc.push(keyframe);\n      }\n      return acc;\n    }, []);\n}\n\nfunction processStyleProperties<S extends AnyRecord>(\n  offset: number,\n  style: S,\n  keyframeStyle: AnyRecord,\n  styleBuilder: StyleBuilder<AnyRecord>\n) {\n  Object.entries(style).forEach(([property, value]) => {\n    if (!isDefined(value)) {\n      return;\n    }\n\n    if (typeof value === 'object') {\n      if (\n        !Array.isArray(value) ||\n        styleBuilder.isSeparatelyInterpolatedArrayProperty(property)\n      ) {\n        if (!keyframeStyle[property]) {\n          keyframeStyle[property] = Array.isArray(value) ? [] : {};\n        }\n        processStyleProperties(\n          offset,\n          value,\n          keyframeStyle[property],\n          styleBuilder\n        );\n        return;\n      }\n    }\n\n    if (!keyframeStyle[property]) {\n      keyframeStyle[property] = [];\n    }\n    keyframeStyle[property].push({ offset, value });\n  });\n}\n\nexport function normalizeAnimationKeyframes(\n  keyframes: CSSAnimationKeyframes,\n  styleBuilder: StyleBuilder<AnyRecord>\n): NormalizedCSSAnimationKeyframesConfig {\n  const keyframesStyle: NormalizedCSSKeyframesStyle = {};\n  const timingFunctions: NormalizedCSSKeyframeTimingFunctions = {};\n\n  processKeyframes(keyframes, styleBuilder).forEach(\n    ({ offset, style, timingFunction }) => {\n      processStyleProperties(offset, style, keyframesStyle, styleBuilder);\n      if (timingFunction && offset < 1) {\n        timingFunctions[offset] = normalizeTimingFunction(timingFunction);\n      }\n    }\n  );\n\n  return { keyframesStyle, keyframeTimingFunctions: timingFunctions };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
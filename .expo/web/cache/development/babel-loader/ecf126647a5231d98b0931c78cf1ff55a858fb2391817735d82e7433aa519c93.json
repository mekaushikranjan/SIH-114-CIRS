{"ast":null,"code":"'use strict';\n\nimport { IS_JEST, SHOULD_BE_USE_WEB } from \"./PlatformChecker/index.js\";\nimport { RuntimeKind } from \"./runtimeKind.js\";\nimport { createSerializable, makeShareableCloneOnUIRecursive } from \"./serializable.js\";\nimport { serializableMappingCache } from \"./serializableMappingCache.js\";\nimport { isWorkletFunction } from \"./workletFunction.js\";\nimport { WorkletsError } from \"./WorkletsError.js\";\nimport { WorkletsModule } from \"./WorkletsModule/index.js\";\nlet runOnUIQueue = [];\nconst _worklet_4463399413847_init_data = {\n  code: \"function setupMicrotasks_threadsJs1(){let microtasksQueue=[];let isExecutingMicrotasksQueue=false;global.queueMicrotask=function(callback){microtasksQueue.push(callback);};global._microtaskQueueFinalizers=[];global.__callMicrotasks=function(){if(isExecutingMicrotasksQueue){return;}try{isExecutingMicrotasksQueue=true;for(let index=0;index<microtasksQueue.length;index+=1){microtasksQueue[index]();}microtasksQueue=[];global._microtaskQueueFinalizers.forEach(function(finalizer){return finalizer();});}finally{isExecutingMicrotasksQueue=false;}};}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-worklets\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"setupMicrotasks_threadsJs1\\\",\\\"microtasksQueue\\\",\\\"isExecutingMicrotasksQueue\\\",\\\"global\\\",\\\"queueMicrotask\\\",\\\"callback\\\",\\\"push\\\",\\\"_microtaskQueueFinalizers\\\",\\\"__callMicrotasks\\\",\\\"index\\\",\\\"length\\\",\\\"forEach\\\",\\\"finalizer\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-worklets/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAUO,SAAAA,0BAA2BA,CAAA,EAGhC,GAAI,CAAAC,eAAe,CAAG,EAAE,CACxB,GAAI,CAAAC,0BAA0B,CAAG,KAAK,CACtCC,MAAM,CAACC,cAAc,CAAG,SAAAC,QAAQ,CAAI,CAClCJ,eAAe,CAACK,IAAI,CAACD,QAAQ,CAAC,CAChC,CAAC,CACDF,MAAM,CAACI,yBAAyB,CAAG,EAAE,CACrCJ,MAAM,CAACK,gBAAgB,CAAG,UAAM,CAC9B,GAAIN,0BAA0B,CAAE,CAC9B,OACF,CACA,GAAI,CACFA,0BAA0B,CAAG,IAAI,CACjC,IAAK,GAAI,CAAAO,KAAK,CAAG,CAAC,CAAEA,KAAK,CAAGR,eAAe,CAACS,MAAM,CAAED,KAAK,EAAI,CAAC,CAAE,CAE9DR,eAAe,CAACQ,KAAK,CAAC,CAAC,CAAC,CAC1B,CACAR,eAAe,CAAG,EAAE,CACpBE,MAAM,CAACI,yBAAyB,CAACI,OAAO,CAAC,SAAAC,SAAS,QAAI,CAAAA,SAAS,CAAC,CAAC,GAAC,CACpE,CAAC,OAAS,CACRV,0BAA0B,CAAG,KAAK,CACpC,CACF,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\"\n};\nexport const setupMicrotasks = function setupMicrotasks_threadsJs1Factory({\n  _worklet_4463399413847_init_data\n}) {\n  const _e = [new global.Error(), 1, -27];\n  const setupMicrotasks = function () {\n    let microtasksQueue = [];\n    let isExecutingMicrotasksQueue = false;\n    global.queueMicrotask = callback => {\n      microtasksQueue.push(callback);\n    };\n    global._microtaskQueueFinalizers = [];\n    global.__callMicrotasks = () => {\n      if (isExecutingMicrotasksQueue) {\n        return;\n      }\n      try {\n        isExecutingMicrotasksQueue = true;\n        for (let index = 0; index < microtasksQueue.length; index += 1) {\n          microtasksQueue[index]();\n        }\n        microtasksQueue = [];\n        global._microtaskQueueFinalizers.forEach(finalizer => finalizer());\n      } finally {\n        isExecutingMicrotasksQueue = false;\n      }\n    };\n  };\n  setupMicrotasks.__closure = {};\n  setupMicrotasks.__workletHash = 4463399413847;\n  setupMicrotasks.__pluginVersion = \"0.5.1\";\n  setupMicrotasks.__initData = _worklet_4463399413847_init_data;\n  setupMicrotasks.__stackDetails = _e;\n  return setupMicrotasks;\n}({\n  _worklet_4463399413847_init_data\n});\nconst _worklet_6162042684295_init_data = {\n  code: \"function callMicrotasksOnUIThread_threadsJs2(){global.__callMicrotasks();}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-worklets\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"callMicrotasksOnUIThread_threadsJs2\\\",\\\"global\\\",\\\"__callMicrotasks\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-worklets/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAoCA,SAAAA,mCAAoCA,CAAA,EAGlCC,MAAM,CAACC,gBAAgB,CAAC,CAAC,CAC3B\\\",\\\"ignoreList\\\":[]}\"\n};\nconst callMicrotasksOnUIThread = function callMicrotasksOnUIThread_threadsJs2Factory({\n  _worklet_6162042684295_init_data\n}) {\n  const _e = [new global.Error(), 1, -27];\n  const callMicrotasksOnUIThread = function () {\n    global.__callMicrotasks();\n  };\n  callMicrotasksOnUIThread.__closure = {};\n  callMicrotasksOnUIThread.__workletHash = 6162042684295;\n  callMicrotasksOnUIThread.__pluginVersion = \"0.5.1\";\n  callMicrotasksOnUIThread.__initData = _worklet_6162042684295_init_data;\n  callMicrotasksOnUIThread.__stackDetails = _e;\n  return callMicrotasksOnUIThread;\n}({\n  _worklet_6162042684295_init_data\n});\nexport const callMicrotasks = SHOULD_BE_USE_WEB ? () => {} : callMicrotasksOnUIThread;\nexport function scheduleOnUI(worklet, ...args) {\n  runOnUI(worklet)(...args);\n}\nconst _worklet_11108901834577_init_data = {\n  code: \"function threadsJs3(){const{worklet,args}=this.__closure;worklet(...args);}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-worklets\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"threadsJs3\\\",\\\"worklet\\\",\\\"args\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-worklets/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAyGqD,SAAAA,UAAMA,CAAA,QAAAC,OAAA,CAAAC,IAAA,OAAAC,SAAA,CAGnDF,OAAO,CAAC,GAAGC,IAAI,CAAC,CAClB\\\",\\\"ignoreList\\\":[]}\"\n};\nexport function runOnUI(worklet) {\n  if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet) && !worklet.__bundleData) {\n    throw new WorkletsError('`runOnUI` can only be used with worklets.');\n  }\n  return (...args) => {\n    if (IS_JEST) {\n      WorkletsModule.scheduleOnUI(createSerializable(function threadsJs3Factory({\n        _worklet_11108901834577_init_data,\n        worklet,\n        args\n      }) {\n        const _e = [new global.Error(), -3, -27];\n        const threadsJs3 = function () {\n          worklet(...args);\n        };\n        threadsJs3.__closure = {\n          worklet,\n          args\n        };\n        threadsJs3.__workletHash = 11108901834577;\n        threadsJs3.__pluginVersion = \"0.5.1\";\n        threadsJs3.__initData = _worklet_11108901834577_init_data;\n        threadsJs3.__stackDetails = _e;\n        return threadsJs3;\n      }({\n        _worklet_11108901834577_init_data,\n        worklet,\n        args\n      })));\n      return;\n    }\n    if (__DEV__) {\n      createSerializable(worklet);\n      createSerializable(args);\n    }\n    enqueueUI(worklet, args);\n  };\n}\nconst _worklet_1417455388571_init_data = {\n  code: \"function runOnUIWorklet_threadsJs4(){throw new WorkletsError('`runOnUI` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-worklets\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"runOnUIWorklet_threadsJs4\\\",\\\"WorkletsError\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-worklets/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AA6HE,SAAAA,yBAA0BA,CAAA,EAGxB,KAAM,IAAI,CAAAC,aAAa,CAAC,kJAAkJ,CAAC,CAC7K\\\",\\\"ignoreList\\\":[]}\"\n};\nif (__DEV__) {\n  const runOnUIWorklet = function runOnUIWorklet_threadsJs4Factory({\n    _worklet_1417455388571_init_data\n  }) {\n    const _e = [new global.Error(), 1, -27];\n    const runOnUIWorklet = function () {\n      throw new WorkletsError('`runOnUI` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');\n    };\n    runOnUIWorklet.__closure = {};\n    runOnUIWorklet.__workletHash = 1417455388571;\n    runOnUIWorklet.__pluginVersion = \"0.5.1\";\n    runOnUIWorklet.__initData = _worklet_1417455388571_init_data;\n    runOnUIWorklet.__stackDetails = _e;\n    return runOnUIWorklet;\n  }({\n    _worklet_1417455388571_init_data\n  });\n  const serializableRunOnUIWorklet = createSerializable(runOnUIWorklet);\n  serializableMappingCache.set(runOnUI, serializableRunOnUIWorklet);\n}\nexport function runOnUISync(worklet, ...args) {\n  return executeOnUIRuntimeSync(worklet)(...args);\n}\nconst _worklet_11036196228115_init_data = {\n  code: \"function threadsJs5(){const{worklet,args,makeShareableCloneOnUIRecursive}=this.__closure;const result=worklet(...args);return makeShareableCloneOnUIRecursive(result);}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-worklets\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"threadsJs5\\\",\\\"worklet\\\",\\\"args\\\",\\\"makeShareableCloneOnUIRecursive\\\",\\\"__closure\\\",\\\"result\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-worklets/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAkKoE,SAAAA,UAAMA,CAAA,QAAAC,OAAA,CAAAC,IAAA,CAAAC,+BAAA,OAAAC,SAAA,CAGpE,KAAM,CAAAC,MAAM,CAAGJ,OAAO,CAAC,GAAGC,IAAI,CAAC,CAC/B,MAAO,CAAAC,+BAA+B,CAACE,MAAM,CAAC,CAChD\\\",\\\"ignoreList\\\":[]}\"\n};\nexport function executeOnUIRuntimeSync(worklet) {\n  return (...args) => {\n    return WorkletsModule.executeOnUIRuntimeSync(createSerializable(function threadsJs5Factory({\n      _worklet_11036196228115_init_data,\n      worklet,\n      args,\n      makeShareableCloneOnUIRecursive\n    }) {\n      const _e = [new global.Error(), -4, -27];\n      const threadsJs5 = function () {\n        const result = worklet(...args);\n        return makeShareableCloneOnUIRecursive(result);\n      };\n      threadsJs5.__closure = {\n        worklet,\n        args,\n        makeShareableCloneOnUIRecursive\n      };\n      threadsJs5.__workletHash = 11036196228115;\n      threadsJs5.__pluginVersion = \"0.5.1\";\n      threadsJs5.__initData = _worklet_11036196228115_init_data;\n      threadsJs5.__stackDetails = _e;\n      return threadsJs5;\n    }({\n      _worklet_11036196228115_init_data,\n      worklet,\n      args,\n      makeShareableCloneOnUIRecursive\n    })));\n  };\n}\nfunction runWorkletOnJS(worklet, ...args) {\n  worklet(...args);\n}\nconst _worklet_7311604395258_init_data = {\n  code: \"function runOnJS_threadsJs6(fun){const runOnJS_threadsJs6=this._recur;const{SHOULD_BE_USE_WEB,RuntimeKind,isWorkletFunction,runWorkletOnJS,makeShareableCloneOnUIRecursive}=this.__closure;if(SHOULD_BE_USE_WEB||globalThis.__RUNTIME_KIND===RuntimeKind.ReactNative){return function(...args){return queueMicrotask(args.length?function(){return fun(...args);}:fun);};}if(isWorkletFunction(fun)){return function(...args){return runOnJS_threadsJs6(runWorkletOnJS)(fun,...args);};}if(fun.__remoteFunction){fun=fun.__remoteFunction;}const scheduleOnJS=typeof fun==='function'?global._scheduleHostFunctionOnJS:global._scheduleRemoteFunctionOnJS;return function(...args){scheduleOnJS(fun,args.length>0?makeShareableCloneOnUIRecursive(args):undefined);};}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-worklets\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"runOnJS_threadsJs6\\\",\\\"fun\\\",\\\"_recur\\\",\\\"SHOULD_BE_USE_WEB\\\",\\\"RuntimeKind\\\",\\\"isWorkletFunction\\\",\\\"runWorkletOnJS\\\",\\\"makeShareableCloneOnUIRecursive\\\",\\\"__closure\\\",\\\"globalThis\\\",\\\"__RUNTIME_KIND\\\",\\\"ReactNative\\\",\\\"args\\\",\\\"queueMicrotask\\\",\\\"length\\\",\\\"__remoteFunction\\\",\\\"scheduleOnJS\\\",\\\"global\\\",\\\"_scheduleHostFunctionOnJS\\\",\\\"_scheduleRemoteFunctionOnJS\\\",\\\"undefined\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-worklets/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AA8LO,SAAAA,kBAAsBA,CAAAC,GAAA,QAAAD,kBAAA,MAAAE,MAAA,OAAAC,iBAAA,CAAAC,WAAA,CAAAC,iBAAA,CAAAC,cAAA,CAAAC,+BAAA,OAAAC,SAAA,CAG3B,GAAIL,iBAAiB,EAAIM,UAAU,CAACC,cAAc,GAAKN,WAAW,CAACO,WAAW,CAAE,CAE9E,MAAO,UAAC,GAAGC,IAAI,QAAK,CAAAC,cAAc,CAACD,IAAI,CAACE,MAAM,CAAG,iBAAM,CAAAb,GAAG,CAAC,GAAGW,IAAI,CAAC,GAAGX,GAAG,CAAC,GAC5E,CACA,GAAII,iBAAiB,CAACJ,GAAG,CAAC,CAAE,CAI1B,MAAO,UAAC,GAAGW,IAAI,QAAK,CAAAZ,kBAAQ,CAAAM,cAAwB,EAAAL,GAAK,IAAAW,IAAA,IAC3D,CACA,GAAIX,GAAG,CAACc,gBAAgB,CAAE,CAKxBd,GAAG,CAAGA,GAAG,CAACc,gBAAgB,CAC5B,CACA,KAAM,CAAAC,YAAY,CAAG,MAAO,CAAAf,GAAG,GAAK,UAAU,CAAGgB,MAAM,CAACC,yBAAyB,CAAGD,MAAM,CAACE,2BAA2B,CACtH,MAAO,UAAC,GAAGP,IAAI,CAAK,CAClBI,YAAY,CAACf,GAAG,CAAEW,IAAI,CAACE,MAAM,CAAG,CAAC,CAAGP,+BAA+B,CAACK,IAAI,CAAC,CAAGQ,SAAS,CAAC,CACxF,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\"\n};\nexport const runOnJS = function runOnJS_threadsJs6Factory({\n  _worklet_7311604395258_init_data,\n  SHOULD_BE_USE_WEB,\n  RuntimeKind,\n  isWorkletFunction,\n  runWorkletOnJS,\n  makeShareableCloneOnUIRecursive\n}) {\n  const _e = [new global.Error(), -6, -27];\n  const runOnJS = function (fun) {\n    if (SHOULD_BE_USE_WEB || globalThis.__RUNTIME_KIND === RuntimeKind.ReactNative) {\n      return (...args) => queueMicrotask(args.length ? () => fun(...args) : fun);\n    }\n    if (isWorkletFunction(fun)) {\n      return (...args) => runOnJS(runWorkletOnJS)(fun, ...args);\n    }\n    if (fun.__remoteFunction) {\n      fun = fun.__remoteFunction;\n    }\n    const scheduleOnJS = typeof fun === 'function' ? global._scheduleHostFunctionOnJS : global._scheduleRemoteFunctionOnJS;\n    return (...args) => {\n      scheduleOnJS(fun, args.length > 0 ? makeShareableCloneOnUIRecursive(args) : undefined);\n    };\n  };\n  runOnJS.__closure = {\n    SHOULD_BE_USE_WEB,\n    RuntimeKind,\n    isWorkletFunction,\n    runWorkletOnJS,\n    makeShareableCloneOnUIRecursive\n  };\n  runOnJS.__workletHash = 7311604395258;\n  runOnJS.__pluginVersion = \"0.5.1\";\n  runOnJS.__initData = _worklet_7311604395258_init_data;\n  runOnJS.__stackDetails = _e;\n  return runOnJS;\n}({\n  _worklet_7311604395258_init_data,\n  SHOULD_BE_USE_WEB,\n  RuntimeKind,\n  isWorkletFunction,\n  runWorkletOnJS,\n  makeShareableCloneOnUIRecursive\n});\nconst _worklet_1962057170269_init_data = {\n  code: \"function scheduleOnRN_threadsJs7(fun,...args){const{runOnJS}=this.__closure;runOnJS(fun)(...args);}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-worklets\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"scheduleOnRN_threadsJs7\\\",\\\"fun\\\",\\\"args\\\",\\\"runOnJS\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-worklets/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AA8OO,SAAAA,uBAA8BA,CAAAC,GAAI,CAAE,GAAAC,IAAA,QAAAC,OAAA,OAAAC,SAAA,CAGzCD,OAAO,CAACF,GAAG,CAAC,CAAC,GAAGC,IAAI,CAAC,CACvB\\\",\\\"ignoreList\\\":[]}\"\n};\nexport const scheduleOnRN = function scheduleOnRN_threadsJs7Factory({\n  _worklet_1962057170269_init_data,\n  runOnJS\n}) {\n  const _e = [new global.Error(), -2, -27];\n  const scheduleOnRN = function (fun, ...args) {\n    runOnJS(fun)(...args);\n  };\n  scheduleOnRN.__closure = {\n    runOnJS\n  };\n  scheduleOnRN.__workletHash = 1962057170269;\n  scheduleOnRN.__pluginVersion = \"0.5.1\";\n  scheduleOnRN.__initData = _worklet_1962057170269_init_data;\n  scheduleOnRN.__stackDetails = _e;\n  return scheduleOnRN;\n}({\n  _worklet_1962057170269_init_data,\n  runOnJS\n});\nconst _worklet_1655652225370_init_data = {\n  code: \"function threadsJs8(){const{worklet,args}=this.__closure;worklet(...args);}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-worklets\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"threadsJs8\\\",\\\"worklet\\\",\\\"args\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-worklets/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAuRuD,SAAAA,UAAMA,CAAA,QAAAC,OAAA,CAAAC,IAAA,OAAAC,SAAA,CAGnDF,OAAO,CAAC,GAAGC,IAAI,CAAC,CAClB\\\",\\\"ignoreList\\\":[]}\"\n};\nexport function runOnUIAsync(worklet) {\n  if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet)) {\n    throw new WorkletsError('`runOnUIAsync` can only be used with worklets.');\n  }\n  return (...args) => {\n    return new Promise(resolve => {\n      if (IS_JEST) {\n        WorkletsModule.scheduleOnUI(createSerializable(function threadsJs8Factory({\n          _worklet_1655652225370_init_data,\n          worklet,\n          args\n        }) {\n          const _e = [new global.Error(), -3, -27];\n          const threadsJs8 = function () {\n            worklet(...args);\n          };\n          threadsJs8.__closure = {\n            worklet,\n            args\n          };\n          threadsJs8.__workletHash = 1655652225370;\n          threadsJs8.__pluginVersion = \"0.5.1\";\n          threadsJs8.__initData = _worklet_1655652225370_init_data;\n          threadsJs8.__stackDetails = _e;\n          return threadsJs8;\n        }({\n          _worklet_1655652225370_init_data,\n          worklet,\n          args\n        })));\n        return;\n      }\n      if (__DEV__) {\n        createSerializable(worklet);\n        createSerializable(args);\n      }\n      enqueueUI(worklet, args, resolve);\n    });\n  };\n}\nconst _worklet_7493684755254_init_data = {\n  code: \"function runOnUIAsyncWorklet_threadsJs9(){throw new WorkletsError('`runOnUIAsync` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-worklets\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"runOnUIAsyncWorklet_threadsJs9\\\",\\\"WorkletsError\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-worklets/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AA4SE,SAAAA,8BAA+BA,CAAA,EAG7B,KAAM,IAAI,CAAAC,aAAa,CAAC,uJAAuJ,CAAC,CAClL\\\",\\\"ignoreList\\\":[]}\"\n};\nif (__DEV__) {\n  const runOnUIAsyncWorklet = function runOnUIAsyncWorklet_threadsJs9Factory({\n    _worklet_7493684755254_init_data\n  }) {\n    const _e = [new global.Error(), 1, -27];\n    const runOnUIAsyncWorklet = function () {\n      throw new WorkletsError('`runOnUIAsync` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.');\n    };\n    runOnUIAsyncWorklet.__closure = {};\n    runOnUIAsyncWorklet.__workletHash = 7493684755254;\n    runOnUIAsyncWorklet.__pluginVersion = \"0.5.1\";\n    runOnUIAsyncWorklet.__initData = _worklet_7493684755254_init_data;\n    runOnUIAsyncWorklet.__stackDetails = _e;\n    return runOnUIAsyncWorklet;\n  }({\n    _worklet_7493684755254_init_data\n  });\n  const serializableRunOnUIAsyncWorklet = createSerializable(runOnUIAsyncWorklet);\n  serializableMappingCache.set(runOnUIAsync, serializableRunOnUIAsyncWorklet);\n}\nfunction enqueueUI(worklet, args, resolve) {\n  const job = [worklet, args, resolve];\n  runOnUIQueue.push(job);\n  if (runOnUIQueue.length === 1) {\n    flushUIQueue();\n  }\n}\nconst _worklet_12726195542958_init_data = {\n  code: \"function threadsJs10(){const{queue,runOnJS,callMicrotasks}=this.__closure;queue.forEach(function([workletFunction,workletArgs,jobResolve]){const result=workletFunction(...workletArgs);if(jobResolve){runOnJS(jobResolve)(result);}});callMicrotasks();}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-worklets\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"threadsJs10\\\",\\\"queue\\\",\\\"runOnJS\\\",\\\"callMicrotasks\\\",\\\"__closure\\\",\\\"forEach\\\",\\\"workletFunction\\\",\\\"workletArgs\\\",\\\"jobResolve\\\",\\\"result\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-worklets/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AA+TmD,SAAAA,WAAMA,CAAA,QAAAC,KAAA,CAAAC,OAAA,CAAAC,cAAA,OAAAC,SAAA,CAGnDH,KAAK,CAACI,OAAO,CAAC,SAAC,CAACC,eAAe,CAAEC,WAAW,CAAEC,UAAU,CAAC,CAAK,CAC5D,KAAM,CAAAC,MAAM,CAAGH,eAAe,CAAC,GAAGC,WAAW,CAAC,CAC9C,GAAIC,UAAU,CAAE,CACdN,OAAO,CAACM,UAAU,CAAC,CAACC,MAAM,CAAC,CAC7B,CACF,CAAC,CAAC,CACFN,cAAc,CAAC,CAAC,CAClB\\\",\\\"ignoreList\\\":[]}\"\n};\nfunction flushUIQueue() {\n  queueMicrotask(() => {\n    const queue = runOnUIQueue;\n    runOnUIQueue = [];\n    WorkletsModule.scheduleOnUI(createSerializable(function threadsJs10Factory({\n      _worklet_12726195542958_init_data,\n      queue,\n      runOnJS,\n      callMicrotasks\n    }) {\n      const _e = [new global.Error(), -4, -27];\n      const threadsJs10 = function () {\n        queue.forEach(([workletFunction, workletArgs, jobResolve]) => {\n          const result = workletFunction(...workletArgs);\n          if (jobResolve) {\n            runOnJS(jobResolve)(result);\n          }\n        });\n        callMicrotasks();\n      };\n      threadsJs10.__closure = {\n        queue,\n        runOnJS,\n        callMicrotasks\n      };\n      threadsJs10.__workletHash = 12726195542958;\n      threadsJs10.__pluginVersion = \"0.5.1\";\n      threadsJs10.__initData = _worklet_12726195542958_init_data;\n      threadsJs10.__stackDetails = _e;\n      return threadsJs10;\n    }({\n      _worklet_12726195542958_init_data,\n      queue,\n      runOnJS,\n      callMicrotasks\n    })));\n  });\n}\nconst _worklet_2837864279798_init_data = {\n  code: \"function threadsJs11(...args){const{worklet,callMicrotasks}=this.__closure;worklet(...args);callMicrotasks();}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-worklets\\\\lib\\\\module\\\\threads.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"threadsJs11\\\",\\\"args\\\",\\\"worklet\\\",\\\"callMicrotasks\\\",\\\"__closure\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-worklets/lib/module/threads.js\\\"],\\\"mappings\\\":\\\"AAmVS,QAAC,CAAAA,WAAYA,CAAA,GAAAC,IAAA,QAAAC,OAAA,CAAAC,cAAA,OAAAC,SAAA,CAGlBF,OAAO,CAAC,GAAGD,IAAI,CAAC,CAChBE,cAAc,CAAC,CAAC,CAClB\\\",\\\"ignoreList\\\":[]}\"\n};\nexport function unstable_eventLoopTask(worklet) {\n  return function threadsJs11Factory({\n    _worklet_2837864279798_init_data,\n    worklet,\n    callMicrotasks\n  }) {\n    const _e = [new global.Error(), -3, -27];\n    const threadsJs11 = function (...args) {\n      worklet(...args);\n      callMicrotasks();\n    };\n    threadsJs11.__closure = {\n      worklet,\n      callMicrotasks\n    };\n    threadsJs11.__workletHash = 2837864279798;\n    threadsJs11.__pluginVersion = \"0.5.1\";\n    threadsJs11.__initData = _worklet_2837864279798_init_data;\n    threadsJs11.__stackDetails = _e;\n    return threadsJs11;\n  }({\n    _worklet_2837864279798_init_data,\n    worklet,\n    callMicrotasks\n  });\n}","map":{"version":3,"names":["IS_JEST","SHOULD_BE_USE_WEB","RuntimeKind","createSerializable","makeShareableCloneOnUIRecursive","serializableMappingCache","isWorkletFunction","WorkletsError","WorkletsModule","runOnUIQueue","_worklet_4463399413847_init_data","code","location","sourceMap","setupMicrotasks","setupMicrotasks_threadsJs1Factory","_e","global","Error","microtasksQueue","isExecutingMicrotasksQueue","queueMicrotask","callback","push","_microtaskQueueFinalizers","__callMicrotasks","index","length","forEach","finalizer","__closure","__workletHash","__pluginVersion","__initData","__stackDetails","_worklet_6162042684295_init_data","callMicrotasksOnUIThread","callMicrotasksOnUIThread_threadsJs2Factory","callMicrotasks","scheduleOnUI","worklet","args","runOnUI","_worklet_11108901834577_init_data","__DEV__","__bundleData","threadsJs3Factory","threadsJs3","enqueueUI","_worklet_1417455388571_init_data","runOnUIWorklet","runOnUIWorklet_threadsJs4Factory","serializableRunOnUIWorklet","set","runOnUISync","executeOnUIRuntimeSync","_worklet_11036196228115_init_data","threadsJs5Factory","threadsJs5","result","runWorkletOnJS","_worklet_7311604395258_init_data","runOnJS","runOnJS_threadsJs6Factory","fun","globalThis","__RUNTIME_KIND","ReactNative","__remoteFunction","scheduleOnJS","_scheduleHostFunctionOnJS","_scheduleRemoteFunctionOnJS","undefined","_worklet_1962057170269_init_data","scheduleOnRN","scheduleOnRN_threadsJs7Factory","_worklet_1655652225370_init_data","runOnUIAsync","Promise","resolve","threadsJs8Factory","threadsJs8","_worklet_7493684755254_init_data","runOnUIAsyncWorklet","runOnUIAsyncWorklet_threadsJs9Factory","serializableRunOnUIAsyncWorklet","job","flushUIQueue","_worklet_12726195542958_init_data","queue","threadsJs10Factory","threadsJs10","workletFunction","workletArgs","jobResolve","_worklet_2837864279798_init_data","unstable_eventLoopTask","threadsJs11Factory","threadsJs11"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-worklets\\src\\threads.ts"],"sourcesContent":["'use strict';\nimport { IS_JEST, SHOULD_BE_USE_WEB } from './PlatformChecker';\nimport { RuntimeKind } from './runtimeKind';\nimport {\n  createSerializable,\n  makeShareableCloneOnUIRecursive,\n} from './serializable';\nimport { serializableMappingCache } from './serializableMappingCache';\nimport { isWorkletFunction } from './workletFunction';\nimport { WorkletsError } from './WorkletsError';\nimport { WorkletsModule } from './WorkletsModule';\nimport type { WorkletFunction, WorkletImport } from './workletTypes';\n\ntype UIJob<Args extends unknown[] = unknown[], ReturnValue = unknown> = [\n  worklet: WorkletFunction<Args, ReturnValue>,\n  args: Args,\n  resolve?: (value: ReturnValue) => void,\n];\n\nlet runOnUIQueue: UIJob[] = [];\n\nexport function setupMicrotasks() {\n  'worklet';\n\n  let microtasksQueue: Array<() => void> = [];\n  let isExecutingMicrotasksQueue = false;\n  global.queueMicrotask = (callback: () => void) => {\n    microtasksQueue.push(callback);\n  };\n  global._microtaskQueueFinalizers = [];\n\n  global.__callMicrotasks = () => {\n    if (isExecutingMicrotasksQueue) {\n      return;\n    }\n    try {\n      isExecutingMicrotasksQueue = true;\n      for (let index = 0; index < microtasksQueue.length; index += 1) {\n        // we use classic 'for' loop because the size of the currentTasks array may change while executing some of the callbacks due to queueMicrotask calls\n        microtasksQueue[index]();\n      }\n      microtasksQueue = [];\n      global._microtaskQueueFinalizers.forEach((finalizer) => finalizer());\n    } finally {\n      isExecutingMicrotasksQueue = false;\n    }\n  };\n}\n\nfunction callMicrotasksOnUIThread() {\n  'worklet';\n  global.__callMicrotasks();\n}\n\nexport const callMicrotasks = SHOULD_BE_USE_WEB\n  ? () => {\n      // on web flushing is a noop as immediates are handled by the browser\n    }\n  : callMicrotasksOnUIThread;\n\n/**\n * Lets you schedule a function to be executed on the [UI\n * Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#ui-runtime).\n *\n * - The callback executes asynchronously and doesn't return a value.\n * - Passed function and args are automatically\n *   [workletized](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#to-workletize)\n *   and serialized.\n * - This function cannot be called from the [UI\n *   Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#ui-runtime)\n *   or [Worker\n *   Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#worker-worklet-runtime---worker-runtime),\n *   unless you have the [Bundle Mode](/docs/experimental/bundleMode) enabled.\n *\n * @param fun - A reference to a function you want to schedule on the [UI\n *   Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#ui-runtime).\n * @param args - Arguments to pass to the function.\n * @see https://docs.swmansion.com/react-native-worklets/docs/threading/scheduleOnUI\n */\nexport function scheduleOnUI<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue,\n  ...args: Args\n): void {\n  runOnUI(worklet)(...args);\n}\n\n/**\n * Lets you asynchronously run\n * [workletized](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#to-workletize)\n * functions on the [UI\n * thread](https://docs.swmansion.com/react-native-worklets/docs/threading/runOnUI/).\n *\n * This method does not schedule the work immediately but instead waits for\n * other worklets to be scheduled within the same JS loop. It uses\n * queueMicrotask to schedule all the worklets at once making sure they will run\n * within the same frame boundaries on the UI thread.\n *\n * @param fun - A reference to a function you want to execute on the [UI\n *   thread](https://docs.swmansion.com/react-native-worklets/docs/threading/runOnUI/)\n *   from the [JavaScript\n *   thread](https://docs.swmansion.com/react-native-worklets/docs/threading/runOnUI/).\n * @returns A function that accepts arguments for the function passed as the\n *   first argument.\n * @see https://docs.swmansion.com/react-native-worklets/docs/threading/runOnUI @deprecated Use `scheduleOnUI` instead.\n */\n// @ts-expect-error This overload is correct since it's what user sees in his code\n// before it's transformed by Reanimated Babel plugin.\nexport function runOnUI<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): (...args: Args) => void;\n\nexport function runOnUI<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  if (\n    __DEV__ &&\n    !SHOULD_BE_USE_WEB &&\n    !isWorkletFunction(worklet) &&\n    !(worklet as unknown as WorkletImport).__bundleData\n  ) {\n    throw new WorkletsError('`runOnUI` can only be used with worklets.');\n  }\n  return (...args) => {\n    if (IS_JEST) {\n      // Mocking time in Jest is tricky as both requestAnimationFrame and queueMicrotask\n      // callbacks run on the same queue and can be interleaved. There is no way\n      // to flush particular queue in Jest and the only control over mocked timers\n      // is by using jest.advanceTimersByTime() method which advances all types\n      // of timers including immediate and animation callbacks. Ideally we'd like\n      // to have some way here to schedule work along with React updates, but\n      // that's not possible, and hence in Jest environment instead of using scheduling\n      // mechanism we just schedule the work ommiting the queue. This is ok for the\n      // uses that we currently have but may not be ok for future tests that we write.\n      WorkletsModule.scheduleOnUI(\n        createSerializable(() => {\n          'worklet';\n          worklet(...args);\n        })\n      );\n      return;\n    }\n    if (__DEV__) {\n      // in DEV mode we call serializable conversion here because in case the object\n      // can't be converted, we will get a meaningful stack-trace as opposed to the\n      // situation when conversion is only done via microtask queue. This does not\n      // make the app particularily less efficient as converted objects are cached\n      // and for a given worklet the conversion only happens once.\n      createSerializable(worklet);\n      createSerializable(args);\n    }\n\n    enqueueUI(worklet, args);\n  };\n}\n\nif (__DEV__) {\n  function runOnUIWorklet(): void {\n    'worklet';\n    throw new WorkletsError(\n      '`runOnUI` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n\n  const serializableRunOnUIWorklet = createSerializable(runOnUIWorklet);\n  serializableMappingCache.set(runOnUI, serializableRunOnUIWorklet);\n}\n\n/**\n * Lets you run a function synchronously on the [UI\n * Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#ui-runtime)\n * from the [RN\n * Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#react-native-runtime-rn-runtime).\n * Passed function and args are automatically\n * [workletized](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#to-workletize)\n * and serialized.\n *\n * - This function cannot be called from the [UI\n *   Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#ui-runtime).\n * - This function cannot be called from a [Worker\n *   Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#worker-worklet-runtime---worker-runtime).\n *\n * @param fun - A reference to a function you want to execute on the [UI\n *   Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#ui-runtime).\n * @param args - Arguments to pass to the function.\n * @returns The return value of the function passed as the first argument.\n * @see https://docs.swmansion.com/react-native-worklets/docs/threading/runOnUISync\n */\nexport function runOnUISync<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue,\n  ...args: Args\n): ReturnValue {\n  return executeOnUIRuntimeSync(worklet)(...args);\n}\n\n// @ts-expect-error Check `executeOnUIRuntimeSync` overload above.\nexport function executeOnUIRuntimeSync<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): (...args: Args) => ReturnValue;\n\nexport function executeOnUIRuntimeSync<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>\n): (...args: Args) => ReturnValue {\n  return (...args) => {\n    return WorkletsModule.executeOnUIRuntimeSync(\n      createSerializable(() => {\n        'worklet';\n        const result = worklet(...args);\n        return makeShareableCloneOnUIRecursive(result);\n      })\n    );\n  };\n}\n\ntype ReleaseRemoteFunction<Args extends unknown[], ReturnValue> = {\n  (...args: Args): ReturnValue;\n};\n\ntype DevRemoteFunction<Args extends unknown[], ReturnValue> = {\n  __remoteFunction: (...args: Args) => ReturnValue;\n};\n\ntype RemoteFunction<Args extends unknown[], ReturnValue> =\n  | ReleaseRemoteFunction<Args, ReturnValue>\n  | DevRemoteFunction<Args, ReturnValue>;\n\nfunction runWorkletOnJS<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>,\n  ...args: Args\n): void {\n  // remote function that calls a worklet synchronously on the JS runtime\n  worklet(...args);\n}\n\n/**\n * Lets you asynchronously run\n * non-[workletized](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#to-workletize)\n * functions that couldn't otherwise run on the [UI\n * thread](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#ui-thread).\n * This applies to most external libraries as they don't have their functions\n * marked with \"worklet\"; directive.\n *\n * @param fun - A reference to a function you want to execute on the JavaScript\n *   thread from the UI thread.\n * @returns A function that accepts arguments for the function passed as the\n *   first argument.\n * @see https://docs.swmansion.com/react-native-worklets/docs/threading/runOnJS\n */\n/** @deprecated Use `scheduleOnRN` instead. */\nexport function runOnJS<Args extends unknown[], ReturnValue>(\n  fun:\n    | ((...args: Args) => ReturnValue)\n    | RemoteFunction<Args, ReturnValue>\n    | WorkletFunction<Args, ReturnValue>\n): (...args: Args) => void {\n  'worklet';\n  type FunDevRemote = Extract<typeof fun, DevRemoteFunction<Args, ReturnValue>>;\n  if (\n    SHOULD_BE_USE_WEB ||\n    globalThis.__RUNTIME_KIND === RuntimeKind.ReactNative\n  ) {\n    // if we are already on the JS thread, we just schedule the worklet on the JS queue\n    return (...args) =>\n      queueMicrotask(\n        args.length\n          ? () => (fun as (...args: Args) => ReturnValue)(...args)\n          : (fun as () => ReturnValue)\n      );\n  }\n  if (isWorkletFunction<Args, ReturnValue>(fun)) {\n    // If `fun` is a worklet, we schedule a call of a remote function `runWorkletOnJS`\n    // and pass the worklet as a first argument followed by original arguments.\n\n    return (...args) =>\n      runOnJS(runWorkletOnJS<Args, ReturnValue>)(\n        fun as WorkletFunction<Args, ReturnValue>,\n        ...args\n      );\n  }\n  if ((fun as FunDevRemote).__remoteFunction) {\n    // In development mode the function provided as `fun` throws an error message\n    // such that when someone accidentally calls it directly on the UI runtime, they\n    // see that they should use `runOnJS` instead. To facilitate that we put the\n    // reference to the original remote function in the `__remoteFunction` property.\n    fun = (fun as FunDevRemote).__remoteFunction;\n  }\n\n  const scheduleOnJS =\n    typeof fun === 'function'\n      ? global._scheduleHostFunctionOnJS\n      : global._scheduleRemoteFunctionOnJS;\n\n  return (...args) => {\n    scheduleOnJS(\n      fun as\n        | ((...args: Args) => ReturnValue)\n        | WorkletFunction<Args, ReturnValue>,\n      args.length > 0 ? makeShareableCloneOnUIRecursive(args) : undefined\n    );\n  };\n}\n\n/**\n * Lets you schedule a function to be executed on the RN runtime from any\n * runtime. Check\n * {@link https://docs.swmansion.com/react-native-worklets/docs/fundamentals/runtimeKinds}\n * for more information about the different runtime kinds.\n *\n * Scheduling function from the RN Runtime (we are already on RN Runtime) simply\n * uses `queueMicrotask`.\n *\n * When functions need to be scheduled from the UI Runtime, first function and\n * args are serialized and then the system passes the scheduling responsibility\n * to the JSScheduler. The JSScheduler then uses the RN CallInvoker to schedule\n * the function asynchronously on the JavaScript thread by calling\n * `jsCallInvoker_->invokeAsync()`.\n *\n * When called from a Worker Runtime, it uses the same JSScheduler mechanism.\n *\n * @param fun - A function you want to schedule on the RN runtime. A function\n *   can be a worklet, a remote function or a regular function.\n * @param args - Arguments to pass to the function.\n * @see https://docs.swmansion.com/react-native-worklets/docs/threading/scheduleOnRN\n */\nexport function scheduleOnRN<Args extends unknown[], ReturnValue>(\n  fun:\n    | ((...args: Args) => ReturnValue)\n    | RemoteFunction<Args, ReturnValue>\n    | WorkletFunction<Args, ReturnValue>,\n  ...args: Args\n): void {\n  'worklet';\n  runOnJS(fun)(...args);\n}\n\n/**\n * Lets you asynchronously run\n * [workletized](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#to-workletize)\n * functions on the [UI\n * Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#ui-runtime).\n *\n * This method does not schedule the work immediately but instead waits for\n * other worklets to be scheduled within the same JS loop. It uses\n * queueMicrotask to schedule all the worklets at once making sure they will run\n * within the same frame boundaries on the UI thread.\n *\n * @param fun - A reference to a function you want to execute on the [UI\n *   Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#ui-runtime).\n *   from the [JavaScript\n *   Runtime](https://docs.swmansion.com/react-native-worklets/docs/fundamentals/glossary#javascript-runtime).\n * @returns A promise that resolves to the return value of the function passed\n *   as the first argument.\n * @see https://docs.swmansion.com/react-native-worklets/docs/threading/runOnUIAsync\n */\nexport function runOnUIAsync<Args extends unknown[], ReturnValue>(\n  worklet: (...args: Args) => ReturnValue\n): (...args: Args) => Promise<ReturnValue> {\n  if (__DEV__ && !SHOULD_BE_USE_WEB && !isWorkletFunction(worklet)) {\n    throw new WorkletsError('`runOnUIAsync` can only be used with worklets.');\n  }\n  return (...args: Args) => {\n    return new Promise<ReturnValue>((resolve) => {\n      if (IS_JEST) {\n        // Mocking time in Jest is tricky as both requestAnimationFrame and queueMicrotask\n        // callbacks run on the same queue and can be interleaved. There is no way\n        // to flush particular queue in Jest and the only control over mocked timers\n        // is by using jest.advanceTimersByTime() method which advances all types\n        // of timers including immediate and animation callbacks. Ideally we'd like\n        // to have some way here to schedule work along with React updates, but\n        // that's not possible, and hence in Jest environment instead of using scheduling\n        // mechanism we just schedule the work ommiting the queue. This is ok for the\n        // uses that we currently have but may not be ok for future tests that we write.\n        WorkletsModule.scheduleOnUI(\n          createSerializable(() => {\n            'worklet';\n            worklet(...args);\n          })\n        );\n        return;\n      }\n      if (__DEV__) {\n        // in DEV mode we call serializable conversion here because in case the object\n        // can't be converted, we will get a meaningful stack-trace as opposed to the\n        // situation when conversion is only done via microtask queue. This does not\n        // make the app particularily less efficient as converted objects are cached\n        // and for a given worklet the conversion only happens once.\n        createSerializable(worklet);\n        createSerializable(args);\n      }\n\n      enqueueUI(worklet as WorkletFunction<Args, ReturnValue>, args, resolve);\n    });\n  };\n}\n\nif (__DEV__) {\n  function runOnUIAsyncWorklet(): void {\n    'worklet';\n    throw new WorkletsError(\n      '`runOnUIAsync` cannot be called on the UI runtime. Please call the function synchronously or use `queueMicrotask` or `requestAnimationFrame` instead.'\n    );\n  }\n\n  const serializableRunOnUIAsyncWorklet =\n    createSerializable(runOnUIAsyncWorklet);\n  serializableMappingCache.set(runOnUIAsync, serializableRunOnUIAsyncWorklet);\n}\n\nfunction enqueueUI<Args extends unknown[], ReturnValue>(\n  worklet: WorkletFunction<Args, ReturnValue>,\n  args: Args,\n  resolve?: (value: ReturnValue) => void\n): void {\n  const job = [worklet, args, resolve] as UIJob<Args, ReturnValue>;\n  runOnUIQueue.push(job as unknown as UIJob);\n  if (runOnUIQueue.length === 1) {\n    flushUIQueue();\n  }\n}\n\nfunction flushUIQueue(): void {\n  queueMicrotask(() => {\n    const queue = runOnUIQueue;\n    runOnUIQueue = [];\n    WorkletsModule.scheduleOnUI(\n      createSerializable(() => {\n        'worklet';\n        queue.forEach(([workletFunction, workletArgs, jobResolve]) => {\n          const result = workletFunction(...workletArgs);\n          if (jobResolve) {\n            runOnJS(jobResolve)(result);\n          }\n        });\n        callMicrotasks();\n      })\n    );\n  });\n}\n\n/**\n * Added temporarily for integration with `react-native-audio-api`. Don't depend\n * on this API as it may change without notice.\n */\n// eslint-disable-next-line camelcase\nexport function unstable_eventLoopTask<TArgs extends unknown[], TRet>(\n  worklet: (...args: TArgs) => TRet\n) {\n  return (...args: TArgs) => {\n    'worklet';\n    worklet(...args);\n    callMicrotasks();\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\nexport class MountRegistry {\n  static mountListeners = new Set();\n  static unmountListeners = new Set();\n  static addMountListener(listener) {\n    this.mountListeners.add(listener);\n    return () => {\n      this.mountListeners.delete(listener);\n    };\n  }\n  static addUnmountListener(listener) {\n    this.unmountListeners.add(listener);\n    return () => {\n      this.unmountListeners.delete(listener);\n    };\n  }\n  static gestureHandlerWillMount(handler) {\n    this.mountListeners.forEach(listener => listener(handler));\n  }\n  static gestureHandlerWillUnmount(handler) {\n    this.unmountListeners.forEach(listener => listener(handler));\n  }\n  static gestureWillMount(gesture) {\n    this.mountListeners.forEach(listener => listener(gesture));\n  }\n  static gestureWillUnmount(gesture) {\n    this.unmountListeners.forEach(listener => listener(gesture));\n  }\n}","map":{"version":3,"names":["MountRegistry","mountListeners","Set","unmountListeners","addMountListener","listener","add","delete","addUnmountListener","gestureHandlerWillMount","handler","forEach","gestureHandlerWillUnmount","gestureWillMount","gesture","gestureWillUnmount"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-gesture-handler\\src\\mountRegistry.ts"],"sourcesContent":["import { GestureType } from './handlers/gestures/gesture';\n\ninterface ReactComponentWithHandlerTag extends React.Component {\n  handlerTag: number;\n}\n\nexport type GestureMountListener = (\n  gesture: GestureType | ReactComponentWithHandlerTag\n) => void;\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class MountRegistry {\n  private static mountListeners = new Set<GestureMountListener>();\n  private static unmountListeners = new Set<GestureMountListener>();\n\n  static addMountListener(listener: GestureMountListener): () => void {\n    this.mountListeners.add(listener);\n\n    return () => {\n      this.mountListeners.delete(listener);\n    };\n  }\n\n  static addUnmountListener(listener: GestureMountListener): () => void {\n    this.unmountListeners.add(listener);\n\n    return () => {\n      this.unmountListeners.delete(listener);\n    };\n  }\n\n  static gestureHandlerWillMount(handler: React.Component) {\n    this.mountListeners.forEach((listener) =>\n      listener(handler as ReactComponentWithHandlerTag)\n    );\n  }\n\n  static gestureHandlerWillUnmount(handler: React.Component) {\n    this.unmountListeners.forEach((listener) =>\n      listener(handler as ReactComponentWithHandlerTag)\n    );\n  }\n\n  static gestureWillMount(gesture: GestureType) {\n    this.mountListeners.forEach((listener) => listener(gesture));\n  }\n\n  static gestureWillUnmount(gesture: GestureType) {\n    this.unmountListeners.forEach((listener) => listener(gesture));\n  }\n}\n"],"mappings":";AAWA,OAAO,MAAMA,aAAa,CAAC;EACzB,OAAeC,cAAc,GAAG,IAAIC,GAAG,CAAuB,CAAC;EAC/D,OAAeC,gBAAgB,GAAG,IAAID,GAAG,CAAuB,CAAC;EAEjE,OAAOE,gBAAgBA,CAACC,QAA8B,EAAc;IAClE,IAAI,CAACJ,cAAc,CAACK,GAAG,CAACD,QAAQ,CAAC;IAEjC,OAAO,MAAM;MACX,IAAI,CAACJ,cAAc,CAACM,MAAM,CAACF,QAAQ,CAAC;IACtC,CAAC;EACH;EAEA,OAAOG,kBAAkBA,CAACH,QAA8B,EAAc;IACpE,IAAI,CAACF,gBAAgB,CAACG,GAAG,CAACD,QAAQ,CAAC;IAEnC,OAAO,MAAM;MACX,IAAI,CAACF,gBAAgB,CAACI,MAAM,CAACF,QAAQ,CAAC;IACxC,CAAC;EACH;EAEA,OAAOI,uBAAuBA,CAACC,OAAwB,EAAE;IACvD,IAAI,CAACT,cAAc,CAACU,OAAO,CAAEN,QAAQ,IACnCA,QAAQ,CAACK,OAAuC,CAClD,CAAC;EACH;EAEA,OAAOE,yBAAyBA,CAACF,OAAwB,EAAE;IACzD,IAAI,CAACP,gBAAgB,CAACQ,OAAO,CAAEN,QAAQ,IACrCA,QAAQ,CAACK,OAAuC,CAClD,CAAC;EACH;EAEA,OAAOG,gBAAgBA,CAACC,OAAoB,EAAE;IAC5C,IAAI,CAACb,cAAc,CAACU,OAAO,CAAEN,QAAQ,IAAKA,QAAQ,CAACS,OAAO,CAAC,CAAC;EAC9D;EAEA,OAAOC,kBAAkBA,CAACD,OAAoB,EAAE;IAC9C,IAAI,CAACX,gBAAgB,CAACQ,OAAO,CAAEN,QAAQ,IAAKA,QAAQ,CAACS,OAAO,CAAC,CAAC;EAChE;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
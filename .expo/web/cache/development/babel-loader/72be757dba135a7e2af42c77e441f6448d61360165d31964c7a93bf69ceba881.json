{"ast":null,"code":"'use strict';\n\nimport { withSpring, withTiming } from \"../../animation/index.js\";\nimport { assertEasingIsWorklet } from \"../../animation/util.js\";\nimport { BaseAnimationBuilder } from \"./BaseAnimationBuilder.js\";\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\n  static easing(easingFunction) {\n    const instance = this.createInstance();\n    return instance.easing(easingFunction);\n  }\n  easing(easingFunction) {\n    if (__DEV__) {\n      assertEasingIsWorklet(easingFunction);\n    }\n    this.easingV = easingFunction;\n    return this;\n  }\n  static rotate(degree) {\n    const instance = this.createInstance();\n    return instance.rotate(degree);\n  }\n  rotate(degree) {\n    this.rotateV = degree;\n    return this;\n  }\n  static springify(duration) {\n    const instance = this.createInstance();\n    return instance.springify(duration);\n  }\n  springify(duration) {\n    this.durationV = duration;\n    this.type = withSpring;\n    return this;\n  }\n  static dampingRatio(dampingRatio) {\n    const instance = this.createInstance();\n    return instance.dampingRatio(dampingRatio);\n  }\n  dampingRatio(value) {\n    this.dampingRatioV = value;\n    return this;\n  }\n  static damping(damping) {\n    const instance = this.createInstance();\n    return instance.damping(damping);\n  }\n  damping(damping) {\n    this.dampingV = damping;\n    return this;\n  }\n  static mass(mass) {\n    const instance = this.createInstance();\n    return instance.mass(mass);\n  }\n  mass(mass) {\n    this.massV = mass;\n    return this;\n  }\n  static stiffness(stiffness) {\n    const instance = this.createInstance();\n    return instance.stiffness(stiffness);\n  }\n  stiffness(stiffness) {\n    this.stiffnessV = stiffness;\n    return this;\n  }\n  static overshootClamping(overshootClamping) {\n    const instance = this.createInstance();\n    return instance.overshootClamping(overshootClamping);\n  }\n  overshootClamping(overshootClamping) {\n    this.overshootClampingV = overshootClamping;\n    return this;\n  }\n  static restDisplacementThreshold(_restDisplacementThreshold) {\n    return this.createInstance();\n  }\n  restDisplacementThreshold(_restDisplacementThreshold) {\n    return this;\n  }\n  static restSpeedThreshold(_restSpeedThreshold) {\n    return this.createInstance();\n  }\n  restSpeedThreshold(_restSpeedThreshold) {\n    return this;\n  }\n  static energyThreshold(energyThreshold) {\n    const instance = this.createInstance();\n    return instance.energyThreshold(energyThreshold);\n  }\n  energyThreshold(energyThreshold) {\n    this.energyThresholdV = energyThreshold;\n    return this;\n  }\n  static withInitialValues(values) {\n    const instance = this.createInstance();\n    return instance.withInitialValues(values);\n  }\n  withInitialValues(values) {\n    this.initialValues = values;\n    return this;\n  }\n  getAnimationAndConfig() {\n    const duration = this.durationV;\n    const easing = this.easingV;\n    const rotate = this.rotateV;\n    const type = this.type ? this.type : withTiming;\n    const damping = this.dampingV;\n    const dampingRatio = this.dampingRatioV;\n    const mass = this.massV;\n    const stiffness = this.stiffnessV;\n    const overshootClamping = this.overshootClampingV;\n    const energyThreshold = this.energyThresholdV;\n    const animation = type;\n    const config = {};\n    function maybeSetConfigValue(value, variableName) {\n      if (value) {\n        config[variableName] = value;\n      }\n    }\n    if (type === withTiming) {\n      maybeSetConfigValue(easing, 'easing');\n    }\n    [{\n      variableName: 'damping',\n      value: damping\n    }, {\n      variableName: 'dampingRatio',\n      value: dampingRatio\n    }, {\n      variableName: 'mass',\n      value: mass\n    }, {\n      variableName: 'stiffness',\n      value: stiffness\n    }, {\n      variableName: 'overshootClamping',\n      value: overshootClamping\n    }, {\n      variableName: 'energyThreshold',\n      value: energyThreshold\n    }, {\n      variableName: 'duration',\n      value: duration\n    }, {\n      variableName: 'rotate',\n      value: rotate\n    }].forEach(({\n      value,\n      variableName\n    }) => maybeSetConfigValue(value, variableName));\n    return [animation, config];\n  }\n}","map":{"version":3,"names":["withSpring","withTiming","assertEasingIsWorklet","BaseAnimationBuilder","ComplexAnimationBuilder","easing","easingFunction","instance","createInstance","__DEV__","easingV","rotate","degree","rotateV","springify","duration","durationV","type","dampingRatio","value","dampingRatioV","damping","dampingV","mass","massV","stiffness","stiffnessV","overshootClamping","overshootClampingV","restDisplacementThreshold","_restDisplacementThreshold","restSpeedThreshold","_restSpeedThreshold","energyThreshold","energyThresholdV","withInitialValues","values","initialValues","getAnimationAndConfig","animation","config","maybeSetConfigValue","variableName","forEach"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\animationBuilder\\ComplexAnimationBuilder.ts"],"sourcesContent":["'use strict';\nimport { withSpring, withTiming } from '../../animation';\nimport { assertEasingIsWorklet } from '../../animation/util';\nimport type {\n  AnimationFunction,\n  BaseBuilderAnimationConfig,\n  EasingFunction,\n  LayoutAnimationAndConfig,\n  StyleProps,\n} from '../../commonTypes';\nimport type { EasingFunctionFactory } from '../../Easing';\nimport { BaseAnimationBuilder } from './BaseAnimationBuilder';\n\nexport class ComplexAnimationBuilder extends BaseAnimationBuilder {\n  easingV?: EasingFunction | EasingFunctionFactory;\n  rotateV?: string;\n  type?: AnimationFunction;\n  dampingV?: number;\n  dampingRatioV?: number;\n  massV?: number;\n  stiffnessV?: number;\n  overshootClampingV?: number;\n  energyThresholdV?: number;\n  initialValues?: StyleProps;\n\n  static createInstance: <T extends typeof BaseAnimationBuilder>(\n    this: T\n  ) => InstanceType<T>;\n\n  /**\n   * Lets you change the easing curve of the animation. Can be chained alongside\n   * other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param easingFunction - An easing function which defines the animation\n   *   curve.\n   */\n  static easing<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    easingFunction: EasingFunction | EasingFunctionFactory\n  ) {\n    const instance = this.createInstance();\n    return instance.easing(easingFunction);\n  }\n\n  easing(easingFunction: EasingFunction | EasingFunctionFactory): this {\n    if (__DEV__) {\n      assertEasingIsWorklet(easingFunction);\n    }\n    this.easingV = easingFunction;\n    return this;\n  }\n\n  /**\n   * Lets you rotate the element. Can be chained alongside other [layout\n   * animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param degree - The rotation degree.\n   */\n  static rotate<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    degree: string\n  ) {\n    const instance = this.createInstance();\n    return instance.rotate(degree);\n  }\n\n  rotate(degree: string): this {\n    this.rotateV = degree;\n    return this;\n  }\n\n  /**\n   * Enables the spring-based animation configuration. Can be chained alongside\n   * other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param duration - An optional duration of the spring animation (in\n   *   milliseconds).\n   */\n  static springify<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    duration?: number\n  ): ComplexAnimationBuilder {\n    const instance = this.createInstance();\n    return instance.springify(duration);\n  }\n\n  springify(duration?: number): this {\n    this.durationV = duration;\n    this.type = withSpring as AnimationFunction;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the spring animation damping ratio. Can be chained\n   * alongside other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param dampingRatio - How damped the spring is.\n   */\n  static dampingRatio<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    dampingRatio: number\n  ) {\n    const instance = this.createInstance();\n    return instance.dampingRatio(dampingRatio);\n  }\n\n  dampingRatio(value: number): this {\n    this.dampingRatioV = value;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the spring animation damping. Can be chained alongside\n   * other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param value - Decides how quickly a spring stops moving. Higher damping\n   *   means the spring will come to rest faster.\n   */\n  static damping<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    damping: number\n  ) {\n    const instance = this.createInstance();\n    return instance.damping(damping);\n  }\n\n  damping(damping: number): this {\n    this.dampingV = damping;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the spring animation mass. Can be chained alongside other\n   * [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param mass - The weight of the spring. Reducing this value makes the\n   *   animation faster.\n   */\n  static mass<T extends typeof ComplexAnimationBuilder>(this: T, mass: number) {\n    const instance = this.createInstance();\n    return instance.mass(mass);\n  }\n\n  mass(mass: number): this {\n    this.massV = mass;\n    return this;\n  }\n\n  /**\n   * Lets you adjust the stiffness of the spring animation. Can be chained\n   * alongside other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param stiffness - How bouncy the spring is.\n   */\n  static stiffness<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    stiffness: number\n  ) {\n    const instance = this.createInstance();\n    return instance.stiffness(stiffness);\n  }\n\n  stiffness(stiffness: number): this {\n    this.stiffnessV = stiffness;\n    return this;\n  }\n\n  /**\n   * Lets you adjust overshoot clamping of the spring. Can be chained alongside\n   * other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param overshootClamping - Whether a spring can bounce over the final\n   *   position.\n   */\n  static overshootClamping<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    overshootClamping: number\n  ) {\n    const instance = this.createInstance();\n    return instance.overshootClamping(overshootClamping);\n  }\n\n  overshootClamping(overshootClamping: number): this {\n    this.overshootClampingV = overshootClamping;\n    return this;\n  }\n\n  /**\n   * @deprecated Use {@link energyThreshold} instead. This method currently does\n   *   nothing and will be removed in the upcoming major version.\n   */\n  static restDisplacementThreshold<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    _restDisplacementThreshold: number\n  ) {\n    return this.createInstance();\n  }\n\n  /**\n   * @deprecated Use {@link energyThreshold} instead. This method currently does\n   *   nothing and will be removed in the upcoming major version.\n   */\n  restDisplacementThreshold(_restDisplacementThreshold: number) {\n    return this;\n  }\n\n  /**\n   * @deprecated Use {@link energyThreshold} instead. This method currently does\n   *   nothing and will be removed in a future version.\n   */\n  static restSpeedThreshold<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    _restSpeedThreshold: number\n  ) {\n    return this.createInstance();\n  }\n\n  /**\n   * @deprecated Use {@link energyThreshold} instead. This method currently does\n   *   nothing and will be removed in a future version.\n   */\n  restSpeedThreshold(_restSpeedThreshold: number): this {\n    return this;\n  }\n\n  /**\n   * Lets you adjust the energy threshold level to stop the spring animation.\n   * Can be chained alongside other [layout animation\n   * modifiers](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#layout-animation-modifier).\n   *\n   * @param energyThreshold - Relative energy threshold below which the spring\n   *   will snap to `toValue` without further oscillations. Defaults to 6e-9.\n   */\n  static energyThreshold<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    energyThreshold: number\n  ) {\n    const instance = this.createInstance();\n    return instance.energyThreshold(energyThreshold);\n  }\n\n  energyThreshold(energyThreshold: number): this {\n    this.energyThresholdV = energyThreshold;\n    return this;\n  }\n\n  /**\n   * Lets you override the initial config of the animation\n   *\n   * @param values - An object containing the styles to override.\n   */\n  static withInitialValues<T extends typeof ComplexAnimationBuilder>(\n    this: T,\n    values: StyleProps\n  ) {\n    const instance = this.createInstance();\n    return instance.withInitialValues(values);\n  }\n\n  withInitialValues(values: StyleProps): this {\n    this.initialValues = values;\n    return this;\n  }\n\n  getAnimationAndConfig(): LayoutAnimationAndConfig {\n    const duration = this.durationV;\n    const easing = this.easingV;\n    const rotate = this.rotateV;\n    const type = this.type ? this.type : (withTiming as AnimationFunction);\n    const damping = this.dampingV;\n    const dampingRatio = this.dampingRatioV;\n    const mass = this.massV;\n    const stiffness = this.stiffnessV;\n    const overshootClamping = this.overshootClampingV;\n    const energyThreshold = this.energyThresholdV;\n\n    const animation = type;\n\n    const config: BaseBuilderAnimationConfig = {};\n\n    function maybeSetConfigValue<Key extends keyof BaseBuilderAnimationConfig>(\n      value: BaseBuilderAnimationConfig[Key],\n      variableName: Key\n    ) {\n      if (value) {\n        config[variableName] = value;\n      }\n    }\n\n    if (type === withTiming) {\n      maybeSetConfigValue(easing, 'easing');\n    }\n\n    (\n      [\n        { variableName: 'damping', value: damping },\n        { variableName: 'dampingRatio', value: dampingRatio },\n        { variableName: 'mass', value: mass },\n        { variableName: 'stiffness', value: stiffness },\n        { variableName: 'overshootClamping', value: overshootClamping },\n        { variableName: 'energyThreshold', value: energyThreshold },\n        { variableName: 'duration', value: duration },\n        { variableName: 'rotate', value: rotate },\n      ] as const\n    ).forEach(({ value, variableName }) =>\n      maybeSetConfigValue(value, variableName)\n    );\n\n    return [animation, config];\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
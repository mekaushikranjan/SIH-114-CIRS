{"ast":null,"code":"\"use strict\";\nexport default class NodeManager {\n  static gestures = {};\n  static getHandler(tag) {\n    if (tag in this.gestures) {\n      return this.gestures[tag];\n    }\n    throw new Error(`No handler for tag ${tag}`);\n  }\n  static createGestureHandler(handlerTag, handler) {\n    if (handlerTag in this.gestures) {\n      throw new Error(`Handler with tag ${handlerTag} already exists. Please ensure that no Gesture instance is used across multiple GestureDetectors.`);\n    }\n    this.gestures[handlerTag] = handler;\n    this.gestures[handlerTag].handlerTag = handlerTag;\n  }\n  static dropGestureHandler(handlerTag) {\n    if (!(handlerTag in this.gestures)) {\n      return;\n    }\n    this.gestures[handlerTag].onDestroy();\n    delete this.gestures[handlerTag];\n  }\n  static get nodes() {\n    return Object.assign({}, this.gestures);\n  }\n}","map":{"version":3,"names":["NodeManager","gestures","getHandler","tag","Error","createGestureHandler","handlerTag","handler","dropGestureHandler","onDestroy","nodes","Object","assign"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-gesture-handler\\src\\web\\tools\\NodeManager.ts"],"sourcesContent":["import { ValueOf } from '../../typeUtils';\nimport { Gestures } from '../Gestures';\nimport type IGestureHandler from '../handlers/IGestureHandler';\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport default abstract class NodeManager {\n  private static gestures: Record<\n    number,\n    InstanceType<ValueOf<typeof Gestures>>\n  > = {};\n\n  public static getHandler(tag: number): IGestureHandler {\n    if (tag in this.gestures) {\n      return this.gestures[tag] as IGestureHandler;\n    }\n\n    throw new Error(`No handler for tag ${tag}`);\n  }\n\n  public static createGestureHandler(\n    handlerTag: number,\n    handler: InstanceType<ValueOf<typeof Gestures>>\n  ): void {\n    if (handlerTag in this.gestures) {\n      throw new Error(\n        `Handler with tag ${handlerTag} already exists. Please ensure that no Gesture instance is used across multiple GestureDetectors.`\n      );\n    }\n\n    this.gestures[handlerTag] = handler;\n    this.gestures[handlerTag].handlerTag = handlerTag;\n  }\n\n  public static dropGestureHandler(handlerTag: number): void {\n    if (!(handlerTag in this.gestures)) {\n      return;\n    }\n\n    this.gestures[handlerTag].onDestroy();\n\n    // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n    delete this.gestures[handlerTag];\n  }\n\n  public static get nodes() {\n    return { ...this.gestures };\n  }\n}\n"],"mappings":";AAKA,eAAe,MAAeA,WAAW,CAAC;EACxC,OAAeC,QAAQ,GAGnB,CAAC,CAAC;EAEN,OAAcC,UAAUA,CAACC,GAAW,EAAmB;IACrD,IAAIA,GAAG,IAAI,IAAI,CAACF,QAAQ,EAAE;MACxB,OAAO,IAAI,CAACA,QAAQ,CAACE,GAAG,CAAC;IAC3B;IAEA,MAAM,IAAIC,KAAK,CAAC,sBAAsBD,GAAG,EAAE,CAAC;EAC9C;EAEA,OAAcE,oBAAoBA,CAChCC,UAAkB,EAClBC,OAA+C,EACzC;IACN,IAAID,UAAU,IAAI,IAAI,CAACL,QAAQ,EAAE;MAC/B,MAAM,IAAIG,KAAK,CACb,oBAAoBE,UAAU,mGAChC,CAAC;IACH;IAEA,IAAI,CAACL,QAAQ,CAACK,UAAU,CAAC,GAAGC,OAAO;IACnC,IAAI,CAACN,QAAQ,CAACK,UAAU,CAAC,CAACA,UAAU,GAAGA,UAAU;EACnD;EAEA,OAAcE,kBAAkBA,CAACF,UAAkB,EAAQ;IACzD,IAAI,EAAEA,UAAU,IAAI,IAAI,CAACL,QAAQ,CAAC,EAAE;MAClC;IACF;IAEA,IAAI,CAACA,QAAQ,CAACK,UAAU,CAAC,CAACG,SAAS,CAAC,CAAC;IAGrC,OAAO,IAAI,CAACR,QAAQ,CAACK,UAAU,CAAC;EAClC;EAEA,WAAkBI,KAAKA,CAAA,EAAG;IACxB,OAAAC,MAAA,CAAAC,MAAA,KAAY,IAAI,CAACX,QAAA;EACnB;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
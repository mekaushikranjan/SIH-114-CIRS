{"ast":null,"code":"'use strict';\n\nimport { ReanimatedError } from \"../../common/index.js\";\nexport const ERROR_MESSAGES = {\n  invalidStepsNumber: stepsNumber => `Steps easing function accepts only positive integers as numbers of steps, ${stepsNumber} isn't a one`\n};\nexport class StepsEasing {\n  static easingName = 'steps';\n  constructor(stepsNumber, modifier = 'jump-end') {\n    if (stepsNumber <= 0 || stepsNumber % 1 !== 0) {\n      throw new ReanimatedError(ERROR_MESSAGES.invalidStepsNumber(stepsNumber));\n    }\n    this.stepsNumber = stepsNumber;\n    this.modifier = modifier;\n  }\n  toString() {\n    return `${StepsEasing.easingName}(${this.stepsNumber}, ${this.modifier})`;\n  }\n  normalize() {\n    switch (this.modifier) {\n      case 'jump-start':\n      case 'start':\n        return this.jumpStart();\n      case 'jump-end':\n      case 'end':\n        return this.jumpEnd();\n      case 'jump-both':\n        return this.jumpBoth();\n      case 'jump-none':\n      default:\n        if (this.stepsNumber === 1) {\n          return 'linear';\n        }\n        return this.jumpNone();\n    }\n  }\n  jumpNone() {\n    const points = [];\n    const div = this.stepsNumber - 1;\n    for (let i = 0; i < this.stepsNumber; i++) {\n      points.push({\n        x: i / this.stepsNumber,\n        y: i / div\n      });\n    }\n    return this.withName(points);\n  }\n  jumpStart() {\n    const points = [];\n    for (let i = 0; i < this.stepsNumber; i++) {\n      points.push({\n        x: i / this.stepsNumber,\n        y: (i + 1) / this.stepsNumber\n      });\n    }\n    return this.withName(points);\n  }\n  jumpEnd() {\n    const points = [];\n    for (let i = 0; i < this.stepsNumber; i++) {\n      points.push({\n        x: i / this.stepsNumber,\n        y: i / this.stepsNumber\n      });\n    }\n    points.push({\n      x: 1,\n      y: 1\n    });\n    return this.withName(points);\n  }\n  jumpBoth() {\n    const points = [];\n    const div = this.stepsNumber + 1;\n    for (let i = 0; i < this.stepsNumber; i++) {\n      points.push({\n        x: i / this.stepsNumber,\n        y: (i + 1) / div\n      });\n    }\n    points.push({\n      x: 1,\n      y: 1\n    });\n    return this.withName(points);\n  }\n  withName(points) {\n    return {\n      name: StepsEasing.easingName,\n      points\n    };\n  }\n}","map":{"version":3,"names":["ReanimatedError","ERROR_MESSAGES","invalidStepsNumber","stepsNumber","StepsEasing","easingName","constructor","modifier","toString","normalize","jumpStart","jumpEnd","jumpBoth","jumpNone","points","div","i","push","x","y","withName","name"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\css\\easing\\steps.ts"],"sourcesContent":["'use strict';\nimport { ReanimatedError } from '../../common';\nimport type { Point } from '../types';\nimport type {\n  NormalizedStepsEasing,\n  ParametrizedTimingFunction,\n  StepsModifier,\n} from './types';\n\nexport const ERROR_MESSAGES = {\n  invalidStepsNumber: (stepsNumber: number) =>\n    `Steps easing function accepts only positive integers as numbers of steps, ${stepsNumber} isn't a one`,\n};\n\nexport class StepsEasing implements ParametrizedTimingFunction {\n  static readonly easingName = 'steps';\n  readonly stepsNumber: number;\n  readonly modifier: StepsModifier;\n\n  constructor(stepsNumber: number, modifier: StepsModifier = 'jump-end') {\n    if (stepsNumber <= 0 || stepsNumber % 1 !== 0) {\n      throw new ReanimatedError(ERROR_MESSAGES.invalidStepsNumber(stepsNumber));\n    }\n    this.stepsNumber = stepsNumber;\n    this.modifier = modifier;\n  }\n\n  toString(): string {\n    return `${StepsEasing.easingName}(${this.stepsNumber}, ${this.modifier})`;\n  }\n\n  normalize(): NormalizedStepsEasing | 'linear' {\n    switch (this.modifier) {\n      case 'jump-start':\n      case 'start':\n        return this.jumpStart();\n      case 'jump-end':\n      case 'end':\n        return this.jumpEnd();\n      case 'jump-both':\n        return this.jumpBoth();\n      case 'jump-none':\n      default:\n        if (this.stepsNumber === 1) {\n          // CSS animations standard returns here linear easing\n          return 'linear';\n        }\n        return this.jumpNone();\n    }\n  }\n\n  private jumpNone() {\n    const points: Point[] = [];\n    const div = this.stepsNumber - 1;\n\n    for (let i = 0; i < this.stepsNumber; i++) {\n      points.push({ x: i / this.stepsNumber, y: i / div });\n    }\n\n    return this.withName(points);\n  }\n\n  private jumpStart() {\n    const points: Point[] = [];\n\n    for (let i = 0; i < this.stepsNumber; i++) {\n      points.push({ x: i / this.stepsNumber, y: (i + 1) / this.stepsNumber });\n    }\n\n    return this.withName(points);\n  }\n\n  private jumpEnd() {\n    const points: Point[] = [];\n\n    for (let i = 0; i < this.stepsNumber; i++) {\n      points.push({ x: i / this.stepsNumber, y: i / this.stepsNumber });\n    }\n    // Final jump\n    points.push({ x: 1, y: 1 });\n\n    return this.withName(points);\n  }\n\n  private jumpBoth() {\n    const points: Point[] = [];\n    const div = this.stepsNumber + 1;\n\n    for (let i = 0; i < this.stepsNumber; i++) {\n      points.push({ x: i / this.stepsNumber, y: (i + 1) / div });\n    }\n    // Final jump\n    points.push({ x: 1, y: 1 });\n\n    return this.withName(points);\n  }\n\n  private withName(points: Point[]) {\n    return {\n      name: StepsEasing.easingName,\n      points,\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
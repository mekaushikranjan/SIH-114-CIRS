{"ast":null,"code":"\"use strict\";\n\nimport EventManager from './EventManager';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport { EventTypes } from '../interfaces';\nimport { PointerTypeMapping, calculateViewScale, tryExtractStylusData, isPointerInBounds } from '../utils';\nimport { PointerType } from '../../PointerType';\nconst POINTER_CAPTURE_EXCLUDE_LIST = new Set(['SELECT', 'INPUT']);\nexport default class PointerEventManager extends EventManager {\n  trackedPointers = new Set();\n  mouseButtonsMapper = new Map();\n  constructor(view) {\n    super(view);\n    this.mouseButtonsMapper.set(0, MouseButton.LEFT);\n    this.mouseButtonsMapper.set(1, MouseButton.MIDDLE);\n    this.mouseButtonsMapper.set(2, MouseButton.RIGHT);\n    this.mouseButtonsMapper.set(3, MouseButton.BUTTON_4);\n    this.mouseButtonsMapper.set(4, MouseButton.BUTTON_5);\n    this.lastPosition = {\n      x: -Infinity,\n      y: -Infinity\n    };\n  }\n  pointerDownCallback = event => {\n    if (!isPointerInBounds(this.view, {\n      x: event.clientX,\n      y: event.clientY\n    })) {\n      return;\n    }\n    const adaptedEvent = this.mapEvent(event, EventTypes.DOWN);\n    const target = event.target;\n    if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n      target.setPointerCapture(adaptedEvent.pointerId);\n    }\n    this.markAsInBounds(adaptedEvent.pointerId);\n    this.trackedPointers.add(adaptedEvent.pointerId);\n    if (++this.activePointersCounter > 1) {\n      adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n      this.onPointerAdd(adaptedEvent);\n    } else {\n      this.onPointerDown(adaptedEvent);\n    }\n  };\n  pointerUpCallback = event => {\n    if (this.activePointersCounter === 0) {\n      return;\n    }\n    const adaptedEvent = this.mapEvent(event, EventTypes.UP);\n    const target = event.target;\n    if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n      target.releasePointerCapture(adaptedEvent.pointerId);\n    }\n    this.markAsOutOfBounds(adaptedEvent.pointerId);\n    this.trackedPointers.delete(adaptedEvent.pointerId);\n    if (--this.activePointersCounter > 0) {\n      adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n      this.onPointerRemove(adaptedEvent);\n    } else {\n      this.onPointerUp(adaptedEvent);\n    }\n  };\n  pointerMoveCallback = event => {\n    const adaptedEvent = this.mapEvent(event, EventTypes.MOVE);\n    const target = event.target;\n    if (!target?.hasPointerCapture(event.pointerId) && !POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n      target.setPointerCapture(event.pointerId);\n    }\n    const inBounds = isPointerInBounds(this.view, {\n      x: adaptedEvent.x,\n      y: adaptedEvent.y\n    });\n    const pointerIndex = this.pointersInBounds.indexOf(adaptedEvent.pointerId);\n    if (inBounds) {\n      if (pointerIndex < 0) {\n        adaptedEvent.eventType = EventTypes.ENTER;\n        this.onPointerEnter(adaptedEvent);\n        this.markAsInBounds(adaptedEvent.pointerId);\n      } else {\n        this.onPointerMove(adaptedEvent);\n      }\n    } else {\n      if (pointerIndex >= 0) {\n        adaptedEvent.eventType = EventTypes.LEAVE;\n        this.onPointerLeave(adaptedEvent);\n        this.markAsOutOfBounds(adaptedEvent.pointerId);\n      } else {\n        this.onPointerOutOfBounds(adaptedEvent);\n      }\n    }\n    this.lastPosition.x = event.x;\n    this.lastPosition.y = event.y;\n  };\n  pointerCancelCallback = event => {\n    const adaptedEvent = this.mapEvent(event, EventTypes.CANCEL);\n    this.onPointerCancel(adaptedEvent);\n    this.markAsOutOfBounds(adaptedEvent.pointerId);\n    this.activePointersCounter = 0;\n    this.trackedPointers.clear();\n  };\n  pointerEnterCallback = event => {\n    const adaptedEvent = this.mapEvent(event, EventTypes.ENTER);\n    this.onPointerMoveOver(adaptedEvent);\n  };\n  pointerLeaveCallback = event => {\n    const adaptedEvent = this.mapEvent(event, EventTypes.LEAVE);\n    this.onPointerMoveOut(adaptedEvent);\n  };\n  lostPointerCaptureCallback = event => {\n    const adaptedEvent = this.mapEvent(event, EventTypes.CANCEL);\n    if (this.trackedPointers.has(adaptedEvent.pointerId)) {\n      this.onPointerCancel(adaptedEvent);\n      this.activePointersCounter = 0;\n      this.trackedPointers.clear();\n    }\n  };\n  registerListeners() {\n    this.view.addEventListener('pointerdown', this.pointerDownCallback);\n    this.view.addEventListener('pointerup', this.pointerUpCallback);\n    this.view.addEventListener('pointermove', this.pointerMoveCallback);\n    this.view.addEventListener('pointercancel', this.pointerCancelCallback);\n    this.view.addEventListener('pointerenter', this.pointerEnterCallback);\n    this.view.addEventListener('pointerleave', this.pointerLeaveCallback);\n    this.view.addEventListener('lostpointercapture', this.lostPointerCaptureCallback);\n  }\n  unregisterListeners() {\n    this.view.removeEventListener('pointerdown', this.pointerDownCallback);\n    this.view.removeEventListener('pointerup', this.pointerUpCallback);\n    this.view.removeEventListener('pointermove', this.pointerMoveCallback);\n    this.view.removeEventListener('pointercancel', this.pointerCancelCallback);\n    this.view.removeEventListener('pointerenter', this.pointerEnterCallback);\n    this.view.removeEventListener('pointerleave', this.pointerLeaveCallback);\n    this.view.removeEventListener('lostpointercapture', this.lostPointerCaptureCallback);\n  }\n  mapEvent(event, eventType) {\n    const rect = this.view.getBoundingClientRect();\n    const {\n      scaleX,\n      scaleY\n    } = calculateViewScale(this.view);\n    return {\n      x: event.clientX,\n      y: event.clientY,\n      offsetX: (event.clientX - rect.left) / scaleX,\n      offsetY: (event.clientY - rect.top) / scaleY,\n      pointerId: event.pointerId,\n      eventType: eventType,\n      pointerType: PointerTypeMapping.get(event.pointerType) ?? PointerType.OTHER,\n      button: this.mouseButtonsMapper.get(event.button),\n      time: event.timeStamp,\n      stylusData: tryExtractStylusData(event)\n    };\n  }\n  resetManager() {\n    super.resetManager();\n    this.trackedPointers.clear();\n  }\n}","map":{"version":3,"names":["EventManager","MouseButton","EventTypes","PointerTypeMapping","calculateViewScale","tryExtractStylusData","isPointerInBounds","PointerType","POINTER_CAPTURE_EXCLUDE_LIST","Set","PointerEventManager","trackedPointers","mouseButtonsMapper","Map","constructor","view","set","LEFT","MIDDLE","RIGHT","BUTTON_4","BUTTON_5","lastPosition","x","Infinity","y","pointerDownCallback","event","clientX","clientY","adaptedEvent","mapEvent","DOWN","target","has","tagName","setPointerCapture","pointerId","markAsInBounds","add","activePointersCounter","eventType","ADDITIONAL_POINTER_DOWN","onPointerAdd","onPointerDown","pointerUpCallback","UP","releasePointerCapture","markAsOutOfBounds","delete","ADDITIONAL_POINTER_UP","onPointerRemove","onPointerUp","pointerMoveCallback","MOVE","hasPointerCapture","inBounds","pointerIndex","pointersInBounds","indexOf","ENTER","onPointerEnter","onPointerMove","LEAVE","onPointerLeave","onPointerOutOfBounds","pointerCancelCallback","CANCEL","onPointerCancel","clear","pointerEnterCallback","onPointerMoveOver","pointerLeaveCallback","onPointerMoveOut","lostPointerCaptureCallback","registerListeners","addEventListener","unregisterListeners","removeEventListener","rect","getBoundingClientRect","scaleX","scaleY","offsetX","left","offsetY","top","pointerType","get","OTHER","button","time","timeStamp","stylusData","resetManager"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-gesture-handler\\src\\web\\tools\\PointerEventManager.ts"],"sourcesContent":["import EventManager from './EventManager';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport { AdaptedEvent, EventTypes, Point } from '../interfaces';\nimport {\n  PointerTypeMapping,\n  calculateViewScale,\n  tryExtractStylusData,\n  isPointerInBounds,\n} from '../utils';\nimport { PointerType } from '../../PointerType';\n\nconst POINTER_CAPTURE_EXCLUDE_LIST = new Set<string>(['SELECT', 'INPUT']);\n\nexport default class PointerEventManager extends EventManager<HTMLElement> {\n  private trackedPointers = new Set<number>();\n  private readonly mouseButtonsMapper = new Map<number, MouseButton>();\n  private lastPosition: Point;\n\n  constructor(view: HTMLElement) {\n    super(view);\n\n    this.mouseButtonsMapper.set(0, MouseButton.LEFT);\n    this.mouseButtonsMapper.set(1, MouseButton.MIDDLE);\n    this.mouseButtonsMapper.set(2, MouseButton.RIGHT);\n    this.mouseButtonsMapper.set(3, MouseButton.BUTTON_4);\n    this.mouseButtonsMapper.set(4, MouseButton.BUTTON_5);\n\n    this.lastPosition = {\n      x: -Infinity,\n      y: -Infinity,\n    };\n  }\n\n  private pointerDownCallback = (event: PointerEvent) => {\n    if (!isPointerInBounds(this.view, { x: event.clientX, y: event.clientY })) {\n      return;\n    }\n\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.DOWN);\n    const target = event.target as HTMLElement;\n\n    if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n      target.setPointerCapture(adaptedEvent.pointerId);\n    }\n\n    this.markAsInBounds(adaptedEvent.pointerId);\n    this.trackedPointers.add(adaptedEvent.pointerId);\n\n    if (++this.activePointersCounter > 1) {\n      adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n      this.onPointerAdd(adaptedEvent);\n    } else {\n      this.onPointerDown(adaptedEvent);\n    }\n  };\n\n  private pointerUpCallback = (event: PointerEvent) => {\n    // When we call reset on gesture handlers, it also resets their event managers\n    // In some handlers (like RotationGestureHandler) reset is called before all pointers leave view\n    // This means, that activePointersCounter will be set to 0, while there are still remaining pointers on view\n    // Removing them will end in activePointersCounter going below 0, therefore handlers won't behave properly\n    if (this.activePointersCounter === 0) {\n      return;\n    }\n\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.UP);\n    const target = event.target as HTMLElement;\n\n    if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n      target.releasePointerCapture(adaptedEvent.pointerId);\n    }\n\n    this.markAsOutOfBounds(adaptedEvent.pointerId);\n    this.trackedPointers.delete(adaptedEvent.pointerId);\n\n    if (--this.activePointersCounter > 0) {\n      adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n      this.onPointerRemove(adaptedEvent);\n    } else {\n      this.onPointerUp(adaptedEvent);\n    }\n  };\n\n  private pointerMoveCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.MOVE);\n    const target = event.target as HTMLElement;\n\n    // You may be wondering why are we setting pointer capture here, when we\n    // already set it in `pointerdown` handler. Well, that's a great question,\n    // for which I don't have an answer. Specification (https://www.w3.org/TR/pointerevents2/#dom-element-setpointercapture)\n    // says that the requirement for `setPointerCapture` to work is that pointer\n    // must be in 'active buttons state`, otherwise it will fail silently, which\n    // is lovely. Obviously, when `pointerdown` is fired, one of the buttons\n    // (when using mouse) is pressed, but that doesn't mean that `setPointerCapture`\n    // will succeed, for some reason. Since it fails silently, we don't actually know\n    // if it worked or not (there's `gotpointercapture` event, but the complexity of\n    // incorporating it here seems stupid), so we just call it again here, every time\n    // pointer moves until it succeeds.\n    // God, I do love web development.\n    if (\n      !target?.hasPointerCapture(event.pointerId) &&\n      !POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)\n    ) {\n      target.setPointerCapture(event.pointerId);\n    }\n\n    const inBounds: boolean = isPointerInBounds(this.view, {\n      x: adaptedEvent.x,\n      y: adaptedEvent.y,\n    });\n\n    const pointerIndex: number = this.pointersInBounds.indexOf(\n      adaptedEvent.pointerId\n    );\n\n    if (inBounds) {\n      if (pointerIndex < 0) {\n        adaptedEvent.eventType = EventTypes.ENTER;\n        this.onPointerEnter(adaptedEvent);\n        this.markAsInBounds(adaptedEvent.pointerId);\n      } else {\n        this.onPointerMove(adaptedEvent);\n      }\n    } else {\n      if (pointerIndex >= 0) {\n        adaptedEvent.eventType = EventTypes.LEAVE;\n        this.onPointerLeave(adaptedEvent);\n        this.markAsOutOfBounds(adaptedEvent.pointerId);\n      } else {\n        this.onPointerOutOfBounds(adaptedEvent);\n      }\n    }\n\n    this.lastPosition.x = event.x;\n    this.lastPosition.y = event.y;\n  };\n\n  private pointerCancelCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.CANCEL);\n\n    this.onPointerCancel(adaptedEvent);\n    this.markAsOutOfBounds(adaptedEvent.pointerId);\n    this.activePointersCounter = 0;\n    this.trackedPointers.clear();\n  };\n\n  private pointerEnterCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.ENTER);\n\n    this.onPointerMoveOver(adaptedEvent);\n  };\n\n  private pointerLeaveCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.LEAVE);\n\n    this.onPointerMoveOut(adaptedEvent);\n  };\n\n  private lostPointerCaptureCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.CANCEL);\n\n    if (this.trackedPointers.has(adaptedEvent.pointerId)) {\n      // In some cases the `pointerup` event is not fired, but `lostpointercapture` is.\n      // Here we simulate the `pointercancel` event to make sure the gesture handler stops tracking it.\n      this.onPointerCancel(adaptedEvent);\n\n      this.activePointersCounter = 0;\n      this.trackedPointers.clear();\n    }\n  };\n\n  public registerListeners(): void {\n    this.view.addEventListener('pointerdown', this.pointerDownCallback);\n    this.view.addEventListener('pointerup', this.pointerUpCallback);\n    this.view.addEventListener('pointermove', this.pointerMoveCallback);\n    this.view.addEventListener('pointercancel', this.pointerCancelCallback);\n\n    // onPointerEnter and onPointerLeave are triggered by a custom logic responsible for\n    // handling shouldCancelWhenOutside flag, and are unreliable unless the pointer is down.\n    // We therefore use pointerenter and pointerleave events to handle the hover gesture,\n    // mapping them to onPointerMoveOver and onPointerMoveOut respectively.\n    this.view.addEventListener('pointerenter', this.pointerEnterCallback);\n    this.view.addEventListener('pointerleave', this.pointerLeaveCallback);\n    this.view.addEventListener(\n      'lostpointercapture',\n      this.lostPointerCaptureCallback\n    );\n  }\n\n  public unregisterListeners(): void {\n    this.view.removeEventListener('pointerdown', this.pointerDownCallback);\n    this.view.removeEventListener('pointerup', this.pointerUpCallback);\n    this.view.removeEventListener('pointermove', this.pointerMoveCallback);\n    this.view.removeEventListener('pointercancel', this.pointerCancelCallback);\n    this.view.removeEventListener('pointerenter', this.pointerEnterCallback);\n    this.view.removeEventListener('pointerleave', this.pointerLeaveCallback);\n    this.view.removeEventListener(\n      'lostpointercapture',\n      this.lostPointerCaptureCallback\n    );\n  }\n\n  protected mapEvent(event: PointerEvent, eventType: EventTypes): AdaptedEvent {\n    const rect = this.view.getBoundingClientRect();\n    const { scaleX, scaleY } = calculateViewScale(this.view);\n\n    return {\n      x: event.clientX,\n      y: event.clientY,\n      offsetX: (event.clientX - rect.left) / scaleX,\n      offsetY: (event.clientY - rect.top) / scaleY,\n      pointerId: event.pointerId,\n      eventType: eventType,\n      pointerType:\n        PointerTypeMapping.get(event.pointerType) ?? PointerType.OTHER,\n      button: this.mouseButtonsMapper.get(event.button),\n      time: event.timeStamp,\n      stylusData: tryExtractStylusData(event),\n    };\n  }\n\n  public resetManager(): void {\n    super.resetManager();\n    this.trackedPointers.clear();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
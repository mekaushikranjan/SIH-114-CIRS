{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\App.tsx\";\nimport 'react-native-gesture-handler';\nimport React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Provider, useSelector } from 'react-redux';\nimport Constants from 'expo-constants';\nimport { store } from './src/store/store';\nimport AppNavigator from './src/navigation/AppNavigator';\nimport { useAuthInitialization } from './src/hooks/useAuthInitialization';\nimport i18n from './src/i18n';\nimport { StatusBar } from 'expo-status-bar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log('Expo Constants initialized:', Constants.expoVersion);\nfunction AppContent() {\n  useAuthInitialization();\n  const preferences = useSelector(state => state.user.preferences);\n  useEffect(() => {\n    if (preferences.language) {\n      i18n.changeLanguage(preferences.language);\n    }\n  }, [preferences.language]);\n  return _jsxDEV(NavigationContainer, {\n    children: [_jsxDEV(StatusBar, {\n      style: \"light\",\n      backgroundColor: \"#FF6B35\",\n      translucent: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), _jsxDEV(AppNavigator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\nexport default function App() {\n  return _jsxDEV(Provider, {\n    store: store,\n    children: _jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","NavigationContainer","Provider","useSelector","Constants","store","AppNavigator","useAuthInitialization","i18n","StatusBar","jsxDEV","_jsxDEV","console","log","expoVersion","AppContent","preferences","state","user","language","changeLanguage","children","style","backgroundColor","translucent","fileName","_jsxFileName","lineNumber","columnNumber","App"],"sources":["C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/App.tsx"],"sourcesContent":["import 'react-native-gesture-handler';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { Provider, useSelector } from 'react-redux';\r\nimport Constants from 'expo-constants';\r\nimport { View, Text, Platform } from 'react-native';\r\nimport { store } from './src/store/store';\r\nimport { RootState } from './src/store/store';\r\nimport AppNavigator from './src/navigation/AppNavigator';\r\nimport { useAuthInitialization } from './src/hooks/useAuthInitialization';\r\nimport i18n from './src/i18n';\r\nimport { StatusBar } from 'expo-status-bar';\r\n\r\n// Firebase disabled - using database auth only\r\n// import './src/services/firebase';\r\n\r\n// Initialize Constants to prevent PlatformConstants error\r\nconsole.log('Expo Constants initialized:', Constants.expoVersion);\r\n\r\nfunction AppContent() {\r\n  useAuthInitialization();\r\n  const preferences = useSelector((state: RootState) => state.user.preferences);\r\n\r\n  // Update i18n language when preference changes\r\n  useEffect(() => {\r\n    if (preferences.language) {\r\n      i18n.changeLanguage(preferences.language);\r\n    }\r\n  }, [preferences.language]);\r\n  \r\n  return (\r\n    <NavigationContainer>\r\n      <StatusBar \r\n        style=\"light\" \r\n        backgroundColor=\"#FF6B35\" \r\n        translucent={false}\r\n      />\r\n      <AppNavigator />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppContent />\r\n    </Provider>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAO,8BAA8B;AACrC,OAAOA,KAAK,IAAIC,SAAS,QAAkB,OAAO;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,QAAQ,EAAEC,WAAW,QAAQ,aAAa;AACnD,OAAOC,SAAS,MAAM,gBAAgB;AAEtC,SAASC,KAAK,QAAQ,mBAAmB;AAEzC,OAAOC,YAAY,MAAM,+BAA+B;AACxD,SAASC,qBAAqB,QAAQ,mCAAmC;AACzE,OAAOC,IAAI,MAAM,YAAY;AAC7B,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM5CC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAET,SAAS,CAACU,WAAW,CAAC;AAEjE,SAASC,UAAUA,CAAA,EAAG;EACpBR,qBAAqB,CAAC,CAAC;EACvB,MAAMS,WAAW,GAAGb,WAAW,CAAEc,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,WAAW,CAAC;EAG7EhB,SAAS,CAAC,MAAM;IACd,IAAIgB,WAAW,CAACG,QAAQ,EAAE;MACxBX,IAAI,CAACY,cAAc,CAACJ,WAAW,CAACG,QAAQ,CAAC;IAC3C;EACF,CAAC,EAAE,CAACH,WAAW,CAACG,QAAQ,CAAC,CAAC;EAE1B,OACER,OAAA,CAACV,mBAAmB;IAAAoB,QAAA,GAClBV,OAAA,CAACF,SAAS;MACRa,KAAK,EAAC,OAAO;MACbC,eAAe,EAAC,SAAS;MACzBC,WAAW,EAAE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EACFjB,OAAA,CAACL,YAAY;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE1B;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,OACElB,OAAA,CAACT,QAAQ;IAACG,KAAK,EAAEA,KAAM;IAAAgB,QAAA,EACrBV,OAAA,CAACI,UAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEf","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nimport { ReanimatedError } from \"../../../../common/index.js\";\nimport { FONT_WEIGHT_MAPPINGS } from \"../../../constants/index.js\";\nconst ERROR_MESSAGES = {\n  invalidFontWeight: weight => `Invalid font weight value: ${weight}`\n};\nexport const processFontWeight = value => {\n  if (typeof value === 'number' || !isNaN(+value)) {\n    return value.toString();\n  }\n  if (value in FONT_WEIGHT_MAPPINGS) {\n    return FONT_WEIGHT_MAPPINGS[value];\n  }\n  throw new ReanimatedError(ERROR_MESSAGES.invalidFontWeight(value));\n};","map":{"version":3,"names":["ReanimatedError","FONT_WEIGHT_MAPPINGS","ERROR_MESSAGES","invalidFontWeight","weight","processFontWeight","value","isNaN","toString"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\css\\native\\style\\processors\\font.ts"],"sourcesContent":["'use strict';\nimport { ReanimatedError } from '../../../../common';\nimport { FONT_WEIGHT_MAPPINGS } from '../../../constants';\nimport type { ValueProcessor } from '../types';\n\nconst ERROR_MESSAGES = {\n  invalidFontWeight: (weight: string | number) =>\n    `Invalid font weight value: ${weight}`,\n};\n\nexport const processFontWeight: ValueProcessor<string | number> = (value) => {\n  if (typeof value === 'number' || !isNaN(+value)) {\n    return value.toString();\n  }\n\n  if (value in FONT_WEIGHT_MAPPINGS) {\n    return FONT_WEIGHT_MAPPINGS[value as keyof typeof FONT_WEIGHT_MAPPINGS];\n  }\n\n  throw new ReanimatedError(ERROR_MESSAGES.invalidFontWeight(value));\n};\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,eAAe,QAAQ,6BAAoB;AACpD,SAASC,oBAAoB,QAAQ,6BAAoB;AAGzD,MAAMC,cAAc,GAAG;EACrBC,iBAAiB,EAAGC,MAAuB,IACzC,8BAA8BA,MAAM;AACxC,CAAC;AAED,OAAO,MAAMC,iBAAkD,GAAIC,KAAK,IAAK;EAC3E,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAACC,KAAK,CAAC,CAACD,KAAK,CAAC,EAAE;IAC/C,OAAOA,KAAK,CAACE,QAAQ,CAAC,CAAC;EACzB;EAEA,IAAIF,KAAK,IAAIL,oBAAoB,EAAE;IACjC,OAAOA,oBAAoB,CAACK,KAAK,CAAsC;EACzE;EAEA,MAAM,IAAIN,eAAe,CAACE,cAAc,CAACC,iBAAiB,CAACG,KAAK,CAAC,CAAC;AACpE,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nimport findNodeHandle from '../../findNodeHandle';\nimport PointerEventManager from './PointerEventManager';\nimport { State } from '../../State';\nimport { isPointerInBounds } from '../utils';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport KeyboardEventManager from './KeyboardEventManager';\nimport WheelEventManager from './WheelEventManager';\nexport class GestureHandlerWebDelegate {\n  isInitialized = false;\n  eventManagers = [];\n  defaultViewStyles = {\n    userSelect: '',\n    touchAction: ''\n  };\n  init(viewRef, handler) {\n    if (!viewRef) {\n      throw new Error(`Cannot find HTML Element for handler ${handler.handlerTag}`);\n    }\n    this.isInitialized = true;\n    this.gestureHandler = handler;\n    this.view = findNodeHandle(viewRef);\n    this.defaultViewStyles = {\n      userSelect: this.view.style.userSelect,\n      touchAction: this.view.style.touchAction\n    };\n    const config = handler.config;\n    this.setUserSelect(config.enabled);\n    this.setTouchAction(config.enabled);\n    this.setContextMenu(config.enabled);\n    this.eventManagers.push(new PointerEventManager(this.view));\n    this.eventManagers.push(new KeyboardEventManager(this.view));\n    this.eventManagers.push(new WheelEventManager(this.view));\n    this.eventManagers.forEach(manager => this.gestureHandler.attachEventManager(manager));\n  }\n  isPointerInBounds({\n    x,\n    y\n  }) {\n    return isPointerInBounds(this.view, {\n      x,\n      y\n    });\n  }\n  measureView() {\n    const rect = this.view.getBoundingClientRect();\n    return {\n      pageX: rect.left,\n      pageY: rect.top,\n      width: rect.width,\n      height: rect.height\n    };\n  }\n  reset() {\n    this.eventManagers.forEach(manager => manager.resetManager());\n  }\n  tryResetCursor() {\n    const config = this.gestureHandler.config;\n    if (config.activeCursor && config.activeCursor !== 'auto' && this.gestureHandler.state === State.ACTIVE) {\n      this.view.style.cursor = 'auto';\n    }\n  }\n  shouldDisableContextMenu(config) {\n    return config.enableContextMenu === undefined && this.gestureHandler.isButtonInConfig(MouseButton.RIGHT) || config.enableContextMenu === false;\n  }\n  addContextMenuListeners(config) {\n    if (this.shouldDisableContextMenu(config)) {\n      this.view.addEventListener('contextmenu', this.disableContextMenu);\n    } else if (config.enableContextMenu) {\n      this.view.addEventListener('contextmenu', this.enableContextMenu);\n    }\n  }\n  removeContextMenuListeners(config) {\n    if (this.shouldDisableContextMenu(config)) {\n      this.view.removeEventListener('contextmenu', this.disableContextMenu);\n    } else if (config.enableContextMenu) {\n      this.view.removeEventListener('contextmenu', this.enableContextMenu);\n    }\n  }\n  disableContextMenu(e) {\n    e.preventDefault();\n  }\n  enableContextMenu(e) {\n    e.stopPropagation();\n  }\n  setUserSelect(isHandlerEnabled) {\n    const {\n      userSelect\n    } = this.gestureHandler.config;\n    this.view.style['userSelect'] = isHandlerEnabled ? userSelect ?? 'none' : this.defaultViewStyles.userSelect;\n    this.view.style['webkitUserSelect'] = isHandlerEnabled ? userSelect ?? 'none' : this.defaultViewStyles.userSelect;\n  }\n  setTouchAction(isHandlerEnabled) {\n    const {\n      touchAction\n    } = this.gestureHandler.config;\n    this.view.style['touchAction'] = isHandlerEnabled ? touchAction ?? 'none' : this.defaultViewStyles.touchAction;\n    this.view.style['WebkitTouchCallout'] = isHandlerEnabled ? touchAction ?? 'none' : this.defaultViewStyles.touchAction;\n  }\n  setContextMenu(isHandlerEnabled) {\n    const config = this.gestureHandler.config;\n    if (isHandlerEnabled) {\n      this.addContextMenuListeners(config);\n    } else {\n      this.removeContextMenuListeners(config);\n    }\n  }\n  onEnabledChange(enabled) {\n    if (!this.isInitialized) {\n      return;\n    }\n    this.setUserSelect(enabled);\n    this.setTouchAction(enabled);\n    this.setContextMenu(enabled);\n    if (enabled) {\n      this.eventManagers.forEach(manager => {\n        manager.registerListeners();\n      });\n    } else {\n      this.eventManagers.forEach(manager => {\n        manager.unregisterListeners();\n      });\n    }\n  }\n  onBegin() {}\n  onActivate() {\n    const config = this.gestureHandler.config;\n    if ((!this.view.style.cursor || this.view.style.cursor === 'auto') && config.activeCursor) {\n      this.view.style.cursor = config.activeCursor;\n    }\n  }\n  onEnd() {\n    this.tryResetCursor();\n  }\n  onCancel() {\n    this.tryResetCursor();\n  }\n  onFail() {\n    this.tryResetCursor();\n  }\n  destroy(config) {\n    this.removeContextMenuListeners(config);\n    this.eventManagers.forEach(manager => {\n      manager.unregisterListeners();\n    });\n  }\n  get view() {\n    return this._view;\n  }\n  set view(value) {\n    this._view = value;\n  }\n}","map":{"version":3,"names":["findNodeHandle","PointerEventManager","State","isPointerInBounds","MouseButton","KeyboardEventManager","WheelEventManager","GestureHandlerWebDelegate","isInitialized","eventManagers","defaultViewStyles","userSelect","touchAction","init","viewRef","handler","Error","handlerTag","gestureHandler","view","style","config","setUserSelect","enabled","setTouchAction","setContextMenu","push","forEach","manager","attachEventManager","x","y","measureView","rect","getBoundingClientRect","pageX","left","pageY","top","width","height","reset","resetManager","tryResetCursor","activeCursor","state","ACTIVE","cursor","shouldDisableContextMenu","enableContextMenu","undefined","isButtonInConfig","RIGHT","addContextMenuListeners","addEventListener","disableContextMenu","removeContextMenuListeners","removeEventListener","e","preventDefault","stopPropagation","isHandlerEnabled","onEnabledChange","registerListeners","unregisterListeners","onBegin","onActivate","onEnd","onCancel","onFail","destroy","_view","value"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-gesture-handler\\src\\web\\tools\\GestureHandlerWebDelegate.ts"],"sourcesContent":["import findNodeHandle from '../../findNodeHandle';\nimport type IGestureHandler from '../handlers/IGestureHandler';\nimport {\n  GestureHandlerDelegate,\n  MeasureResult,\n} from './GestureHandlerDelegate';\nimport PointerEventManager from './PointerEventManager';\nimport { State } from '../../State';\nimport { isPointerInBounds } from '../utils';\nimport EventManager from './EventManager';\nimport { Config } from '../interfaces';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport KeyboardEventManager from './KeyboardEventManager';\nimport WheelEventManager from './WheelEventManager';\n\ninterface DefaultViewStyles {\n  userSelect: string;\n  touchAction: string;\n}\n\nexport class GestureHandlerWebDelegate\n  implements GestureHandlerDelegate<HTMLElement, IGestureHandler>\n{\n  private isInitialized = false;\n  private _view!: HTMLElement;\n\n  private gestureHandler!: IGestureHandler;\n  private eventManagers: EventManager<unknown>[] = [];\n  private defaultViewStyles: DefaultViewStyles = {\n    userSelect: '',\n    touchAction: '',\n  };\n\n  init(viewRef: number, handler: IGestureHandler): void {\n    if (!viewRef) {\n      throw new Error(\n        `Cannot find HTML Element for handler ${handler.handlerTag}`\n      );\n    }\n\n    this.isInitialized = true;\n\n    this.gestureHandler = handler;\n    this.view = findNodeHandle(viewRef) as unknown as HTMLElement;\n\n    this.defaultViewStyles = {\n      userSelect: this.view.style.userSelect,\n      touchAction: this.view.style.touchAction,\n    };\n\n    const config = handler.config;\n\n    this.setUserSelect(config.enabled);\n    this.setTouchAction(config.enabled);\n    this.setContextMenu(config.enabled);\n\n    this.eventManagers.push(new PointerEventManager(this.view));\n    this.eventManagers.push(new KeyboardEventManager(this.view));\n    this.eventManagers.push(new WheelEventManager(this.view));\n\n    this.eventManagers.forEach((manager) =>\n      this.gestureHandler.attachEventManager(manager)\n    );\n  }\n\n  isPointerInBounds({ x, y }: { x: number; y: number }): boolean {\n    return isPointerInBounds(this.view, { x, y });\n  }\n\n  measureView(): MeasureResult {\n    const rect = this.view.getBoundingClientRect();\n\n    return {\n      pageX: rect.left,\n      pageY: rect.top,\n      width: rect.width,\n      height: rect.height,\n    };\n  }\n\n  reset(): void {\n    this.eventManagers.forEach((manager: EventManager<unknown>) =>\n      manager.resetManager()\n    );\n  }\n\n  tryResetCursor() {\n    const config = this.gestureHandler.config;\n\n    if (\n      config.activeCursor &&\n      config.activeCursor !== 'auto' &&\n      this.gestureHandler.state === State.ACTIVE\n    ) {\n      this.view.style.cursor = 'auto';\n    }\n  }\n\n  private shouldDisableContextMenu(config: Config) {\n    return (\n      (config.enableContextMenu === undefined &&\n        this.gestureHandler.isButtonInConfig(MouseButton.RIGHT)) ||\n      config.enableContextMenu === false\n    );\n  }\n\n  private addContextMenuListeners(config: Config): void {\n    if (this.shouldDisableContextMenu(config)) {\n      this.view.addEventListener('contextmenu', this.disableContextMenu);\n    } else if (config.enableContextMenu) {\n      this.view.addEventListener('contextmenu', this.enableContextMenu);\n    }\n  }\n\n  private removeContextMenuListeners(config: Config): void {\n    if (this.shouldDisableContextMenu(config)) {\n      this.view.removeEventListener('contextmenu', this.disableContextMenu);\n    } else if (config.enableContextMenu) {\n      this.view.removeEventListener('contextmenu', this.enableContextMenu);\n    }\n  }\n\n  private disableContextMenu(this: void, e: MouseEvent): void {\n    e.preventDefault();\n  }\n\n  private enableContextMenu(this: void, e: MouseEvent): void {\n    e.stopPropagation();\n  }\n\n  private setUserSelect(isHandlerEnabled: boolean) {\n    const { userSelect } = this.gestureHandler.config;\n\n    this.view.style['userSelect'] = isHandlerEnabled\n      ? (userSelect ?? 'none')\n      : this.defaultViewStyles.userSelect;\n\n    this.view.style['webkitUserSelect'] = isHandlerEnabled\n      ? (userSelect ?? 'none')\n      : this.defaultViewStyles.userSelect;\n  }\n\n  private setTouchAction(isHandlerEnabled: boolean) {\n    const { touchAction } = this.gestureHandler.config;\n\n    this.view.style['touchAction'] = isHandlerEnabled\n      ? (touchAction ?? 'none')\n      : this.defaultViewStyles.touchAction;\n\n    // @ts-ignore This one disables default events on Safari\n    this.view.style['WebkitTouchCallout'] = isHandlerEnabled\n      ? (touchAction ?? 'none')\n      : this.defaultViewStyles.touchAction;\n  }\n\n  private setContextMenu(isHandlerEnabled: boolean) {\n    const config = this.gestureHandler.config;\n\n    if (isHandlerEnabled) {\n      this.addContextMenuListeners(config);\n    } else {\n      this.removeContextMenuListeners(config);\n    }\n  }\n\n  onEnabledChange(enabled: boolean): void {\n    if (!this.isInitialized) {\n      return;\n    }\n\n    this.setUserSelect(enabled);\n    this.setTouchAction(enabled);\n    this.setContextMenu(enabled);\n\n    if (enabled) {\n      this.eventManagers.forEach((manager) => {\n        manager.registerListeners();\n      });\n    } else {\n      this.eventManagers.forEach((manager) => {\n        manager.unregisterListeners();\n      });\n    }\n  }\n\n  onBegin(): void {\n    // no-op for now\n  }\n\n  onActivate(): void {\n    const config = this.gestureHandler.config;\n\n    if (\n      (!this.view.style.cursor || this.view.style.cursor === 'auto') &&\n      config.activeCursor\n    ) {\n      this.view.style.cursor = config.activeCursor;\n    }\n  }\n\n  onEnd(): void {\n    this.tryResetCursor();\n  }\n\n  onCancel(): void {\n    this.tryResetCursor();\n  }\n\n  onFail(): void {\n    this.tryResetCursor();\n  }\n\n  public destroy(config: Config): void {\n    this.removeContextMenuListeners(config);\n\n    this.eventManagers.forEach((manager) => {\n      manager.unregisterListeners();\n    });\n  }\n\n  public get view() {\n    return this._view;\n  }\n  public set view(value: HTMLElement) {\n    this._view = value;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
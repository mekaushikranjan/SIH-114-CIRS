{"ast":null,"code":"\"use strict\";\n\nimport * as React from 'react';\nimport RNFlatList from \"react-native-web/dist/exports/FlatList\";\nimport RNSwitch from \"react-native-web/dist/exports/Switch\";\nimport RNTextInput from \"react-native-web/dist/exports/TextInput\";\nimport RNScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport createNativeWrapper from '../handlers/createNativeWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: false\n});\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = () => {\n  console.warn('DrawerLayoutAndroid is not supported on web!');\n  return _jsx(View, {});\n};\nexport const RefreshControl = createNativeWrapper(View);\nexport const FlatList = React.forwardRef((props, ref) => _jsx(RNFlatList, Object.assign({\n  ref: ref\n}, props, {\n  renderScrollComponent: scrollProps => _jsx(ScrollView, Object.assign({}, scrollProps))\n})));","map":{"version":3,"names":["React","RNFlatList","RNSwitch","RNTextInput","RNScrollView","View","createNativeWrapper","jsx","_jsx","ScrollView","disallowInterruption","Switch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","DrawerLayoutAndroid","console","warn","RefreshControl","FlatList","forwardRef","props","ref","Object","assign","renderScrollComponent","scrollProps"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-gesture-handler\\src\\components\\GestureComponents.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n  View,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: false,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = () => {\n  console.warn('DrawerLayoutAndroid is not supported on web!');\n  return <View />;\n};\n\n// RefreshControl is implemented as a functional component, rendering a View\n// NativeViewGestureHandler needs to set a ref on its child, which cannot be done\n// on functional components\nexport const RefreshControl = createNativeWrapper(View);\n\nexport const FlatList = React.forwardRef(\n  <ItemT,>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,WAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,IAAA;AAU9B,OAAOC,mBAAmB,MAAM,iCAAiC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAElE,OAAO,MAAMC,UAAU,GAAGH,mBAAmB,CAACF,YAAY,EAAE;EAC1DM,oBAAoB,EAAE;AACxB,CAAC,CAAC;AAEF,OAAO,MAAMC,MAAM,GAAGL,mBAAmB,CAACJ,QAAQ,EAAE;EAClDU,uBAAuB,EAAE,KAAK;EAC9BC,qBAAqB,EAAE,IAAI;EAC3BH,oBAAoB,EAAE;AACxB,CAAC,CAAC;AACF,OAAO,MAAMI,SAAS,GAAGR,mBAAmB,CAACH,WAAW,CAAC;AACzD,OAAO,MAAMY,mBAAmB,GAAGA,CAAA,KAAM;EACvCC,OAAO,CAACC,IAAI,CAAC,8CAA8C,CAAC;EAC5D,OAAOT,IAAA,CAACH,IAAI,IAAE,CAAC;AACjB,CAAC;AAKD,OAAO,MAAMa,cAAc,GAAGZ,mBAAmB,CAACD,IAAI,CAAC;AAEvD,OAAO,MAAMc,QAAQ,GAAGnB,KAAK,CAACoB,UAAU,CACtC,CAASC,KAA2B,EAAEC,GAAQ,KAC5Cd,IAAA,CAACP,UAAU,EAAAsB,MAAA,CAAAC,MAAA;EACTF,GAAG,EAAEA;AAAI,GACLD,KAAK;EACTI,qBAAqB,EAAGC,WAAW,IAAKlB,IAAA,CAACC,UAAU,EAAAc,MAAA,CAAAC,MAAA,KAAKE,WAAA,CAAc;AAAA,EACvE,CAEL,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
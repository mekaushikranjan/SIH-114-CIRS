{"ast":null,"code":"'use strict';\n\nimport { kebabizeCamelCase } from \"../../utils/index.js\";\nimport { normalizeCSSTransitionProperties } from \"../normalization/index.js\";\nimport { maybeAddSuffixes, parseTimingFunction } from \"../utils.js\";\nexport default class CSSTransitionsManager {\n  isAttached = false;\n  constructor(element) {\n    this.element = element;\n  }\n  update(transitionProperties) {\n    if (!transitionProperties) {\n      this.detach();\n      return;\n    }\n    this.setElementTransition(transitionProperties);\n    this.isAttached = true;\n  }\n  unmountCleanup() {}\n  detach() {\n    if (!this.isAttached) {\n      return;\n    }\n    this.element.style.transition = '';\n    this.element.style.transitionProperty = '';\n    this.element.style.transitionDuration = '';\n    this.element.style.transitionDelay = '';\n    this.element.style.transitionTimingFunction = '';\n    this.element.style.transitionBehavior = '';\n    this.isAttached = false;\n  }\n  setElementTransition(transitionProperties) {\n    const normalizedProps = normalizeCSSTransitionProperties(transitionProperties);\n    this.element.style.transitionProperty = normalizedProps.transitionProperty.map(kebabizeCamelCase).join(',');\n    this.element.style.transitionDuration = maybeAddSuffixes(normalizedProps, 'transitionDuration', 'ms').join(',');\n    this.element.style.transitionDelay = maybeAddSuffixes(normalizedProps, 'transitionDelay', 'ms').join(',');\n    this.element.style.transitionTimingFunction = parseTimingFunction(normalizedProps.transitionTimingFunction);\n    this.element.style.transitionBehavior = normalizedProps.transitionBehavior.map(kebabizeCamelCase).join(',');\n  }\n}","map":{"version":3,"names":["kebabizeCamelCase","normalizeCSSTransitionProperties","maybeAddSuffixes","parseTimingFunction","CSSTransitionsManager","isAttached","constructor","element","update","transitionProperties","detach","setElementTransition","unmountCleanup","style","transition","transitionProperty","transitionDuration","transitionDelay","transitionTimingFunction","transitionBehavior","normalizedProps","map","join"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\css\\web\\managers\\CSSTransitionsManager.ts"],"sourcesContent":["'use strict';\nimport type { ReanimatedHTMLElement } from '../../../ReanimatedModule/js-reanimated';\nimport type {\n  CSSTransitionProperties,\n  ICSSTransitionsManager,\n} from '../../types';\nimport { kebabizeCamelCase } from '../../utils';\nimport { normalizeCSSTransitionProperties } from '../normalization';\nimport { maybeAddSuffixes, parseTimingFunction } from '../utils';\n\nexport default class CSSTransitionsManager implements ICSSTransitionsManager {\n  private readonly element: ReanimatedHTMLElement;\n  private isAttached = false;\n\n  constructor(element: ReanimatedHTMLElement) {\n    this.element = element;\n  }\n\n  update(transitionProperties: CSSTransitionProperties | null) {\n    if (!transitionProperties) {\n      this.detach();\n      return;\n    }\n\n    this.setElementTransition(transitionProperties);\n    this.isAttached = true;\n  }\n\n  unmountCleanup() {\n    // noop\n  }\n\n  private detach() {\n    if (!this.isAttached) {\n      return;\n    }\n\n    this.element.style.transition = '';\n    this.element.style.transitionProperty = '';\n    this.element.style.transitionDuration = '';\n    this.element.style.transitionDelay = '';\n    this.element.style.transitionTimingFunction = '';\n    // @ts-ignore this is correct\n    this.element.style.transitionBehavior = '';\n\n    this.isAttached = false;\n  }\n\n  private setElementTransition(transitionProperties: CSSTransitionProperties) {\n    const normalizedProps =\n      normalizeCSSTransitionProperties(transitionProperties);\n\n    this.element.style.transitionProperty = normalizedProps.transitionProperty\n      .map(kebabizeCamelCase)\n      .join(',');\n\n    this.element.style.transitionDuration = maybeAddSuffixes(\n      normalizedProps,\n      'transitionDuration',\n      'ms'\n    ).join(',');\n\n    this.element.style.transitionDelay = maybeAddSuffixes(\n      normalizedProps,\n      'transitionDelay',\n      'ms'\n    ).join(',');\n\n    this.element.style.transitionTimingFunction = parseTimingFunction(\n      normalizedProps.transitionTimingFunction\n    );\n\n    // @ts-ignore this is correct\n    this.element.style.transitionBehavior = normalizedProps.transitionBehavior\n      .map(kebabizeCamelCase)\n      .join(',');\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAMZ,SAASA,iBAAiB,QAAQ,sBAAa;AAC/C,SAASC,gCAAgC,QAAQ,2BAAkB;AACnE,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,aAAU;AAEhE,eAAe,MAAMC,qBAAqB,CAAmC;EAEnEC,UAAU,GAAG,KAAK;EAE1BC,WAAWA,CAACC,OAA8B,EAAE;IAC1C,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EAEAC,MAAMA,CAACC,oBAAoD,EAAE;IAC3D,IAAI,CAACA,oBAAoB,EAAE;MACzB,IAAI,CAACC,MAAM,CAAC,CAAC;MACb;IACF;IAEA,IAAI,CAACC,oBAAoB,CAACF,oBAAoB,CAAC;IAC/C,IAAI,CAACJ,UAAU,GAAG,IAAI;EACxB;EAEAO,cAAcA,CAAA,EAAG,CACf;EAGMF,MAAMA,CAAA,EAAG;IACf,IAAI,CAAC,IAAI,CAACL,UAAU,EAAE;MACpB;IACF;IAEA,IAAI,CAACE,OAAO,CAACM,KAAK,CAACC,UAAU,GAAG,EAAE;IAClC,IAAI,CAACP,OAAO,CAACM,KAAK,CAACE,kBAAkB,GAAG,EAAE;IAC1C,IAAI,CAACR,OAAO,CAACM,KAAK,CAACG,kBAAkB,GAAG,EAAE;IAC1C,IAAI,CAACT,OAAO,CAACM,KAAK,CAACI,eAAe,GAAG,EAAE;IACvC,IAAI,CAACV,OAAO,CAACM,KAAK,CAACK,wBAAwB,GAAG,EAAE;IAEhD,IAAI,CAACX,OAAO,CAACM,KAAK,CAACM,kBAAkB,GAAG,EAAE;IAE1C,IAAI,CAACd,UAAU,GAAG,KAAK;EACzB;EAEQM,oBAAoBA,CAACF,oBAA6C,EAAE;IAC1E,MAAMW,eAAe,GACnBnB,gCAAgC,CAACQ,oBAAoB,CAAC;IAExD,IAAI,CAACF,OAAO,CAACM,KAAK,CAACE,kBAAkB,GAAGK,eAAe,CAACL,kBAAkB,CACvEM,GAAG,CAACrB,iBAAiB,CAAC,CACtBsB,IAAI,CAAC,GAAG,CAAC;IAEZ,IAAI,CAACf,OAAO,CAACM,KAAK,CAACG,kBAAkB,GAAGd,gBAAgB,CACtDkB,eAAe,EACf,oBAAoB,EACpB,IACF,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC;IAEX,IAAI,CAACf,OAAO,CAACM,KAAK,CAACI,eAAe,GAAGf,gBAAgB,CACnDkB,eAAe,EACf,iBAAiB,EACjB,IACF,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC;IAEX,IAAI,CAACf,OAAO,CAACM,KAAK,CAACK,wBAAwB,GAAGf,mBAAmB,CAC/DiB,eAAe,CAACF,wBAClB,CAAC;IAGD,IAAI,CAACX,OAAO,CAACM,KAAK,CAACM,kBAAkB,GAAGC,eAAe,CAACD,kBAAkB,CACvEE,GAAG,CAACrB,iBAAiB,CAAC,CACtBsB,IAAI,CAAC,GAAG,CAAC;EACd;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nimport { convertPropertiesToArrays } from \"../../../utils/index.js\";\nexport function createSingleCSSAnimationProperties(properties) {\n  const {\n    animationName: animationNames,\n    animationDuration,\n    animationTimingFunction,\n    animationDelay,\n    animationIterationCount,\n    animationDirection,\n    animationFillMode,\n    animationPlayState\n  } = convertPropertiesToArrays(properties);\n  return animationNames.map((animationName, index) => {\n    return {\n      animationName,\n      animationDuration: animationDuration?.[index % animationDuration.length],\n      animationTimingFunction: animationTimingFunction?.[index % animationTimingFunction.length],\n      animationDelay: animationDelay?.[index % animationDelay.length],\n      animationIterationCount: animationIterationCount?.[index % animationIterationCount.length],\n      animationDirection: animationDirection?.[index % animationDirection.length],\n      animationFillMode: animationFillMode?.[index % animationFillMode.length],\n      animationPlayState: animationPlayState?.[index % animationPlayState.length]\n    };\n  });\n}","map":{"version":3,"names":["convertPropertiesToArrays","createSingleCSSAnimationProperties","properties","animationName","animationNames","animationDuration","animationTimingFunction","animationDelay","animationIterationCount","animationDirection","animationFillMode","animationPlayState","map","index","length"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\css\\native\\normalization\\animation\\properties.ts"],"sourcesContent":["'use strict';\nimport type {\n  ExistingCSSAnimationProperties,\n  SingleCSSAnimationProperties,\n} from '../../../types';\nimport { convertPropertiesToArrays } from '../../../utils';\n\nexport function createSingleCSSAnimationProperties(\n  properties: ExistingCSSAnimationProperties\n): SingleCSSAnimationProperties[] {\n  const {\n    animationName: animationNames,\n    animationDuration,\n    animationTimingFunction,\n    animationDelay,\n    animationIterationCount,\n    animationDirection,\n    animationFillMode,\n    animationPlayState,\n  } = convertPropertiesToArrays(properties);\n\n  return animationNames.map((animationName, index) => {\n    return {\n      animationName,\n      animationDuration: animationDuration?.[index % animationDuration.length],\n      animationTimingFunction:\n        animationTimingFunction?.[index % animationTimingFunction.length],\n      animationDelay: animationDelay?.[index % animationDelay.length],\n      animationIterationCount:\n        animationIterationCount?.[index % animationIterationCount.length],\n      animationDirection:\n        animationDirection?.[index % animationDirection.length],\n      animationFillMode: animationFillMode?.[index % animationFillMode.length],\n      animationPlayState:\n        animationPlayState?.[index % animationPlayState.length],\n    };\n  });\n}\n"],"mappings":"AAAA,YAAY;;AAKZ,SAASA,yBAAyB,QAAQ,yBAAgB;AAE1D,OAAO,SAASC,kCAAkCA,CAChDC,UAA0C,EACV;EAChC,MAAM;IACJC,aAAa,EAAEC,cAAc;IAC7BC,iBAAiB;IACjBC,uBAAuB;IACvBC,cAAc;IACdC,uBAAuB;IACvBC,kBAAkB;IAClBC,iBAAiB;IACjBC;EACF,CAAC,GAAGX,yBAAyB,CAACE,UAAU,CAAC;EAEzC,OAAOE,cAAc,CAACQ,GAAG,CAAC,CAACT,aAAa,EAAEU,KAAK,KAAK;IAClD,OAAO;MACLV,aAAa;MACbE,iBAAiB,EAAEA,iBAAiB,GAAGQ,KAAK,GAAGR,iBAAiB,CAACS,MAAM,CAAC;MACxER,uBAAuB,EACrBA,uBAAuB,GAAGO,KAAK,GAAGP,uBAAuB,CAACQ,MAAM,CAAC;MACnEP,cAAc,EAAEA,cAAc,GAAGM,KAAK,GAAGN,cAAc,CAACO,MAAM,CAAC;MAC/DN,uBAAuB,EACrBA,uBAAuB,GAAGK,KAAK,GAAGL,uBAAuB,CAACM,MAAM,CAAC;MACnEL,kBAAkB,EAChBA,kBAAkB,GAAGI,KAAK,GAAGJ,kBAAkB,CAACK,MAAM,CAAC;MACzDJ,iBAAiB,EAAEA,iBAAiB,GAAGG,KAAK,GAAGH,iBAAiB,CAACI,MAAM,CAAC;MACxEH,kBAAkB,EAChBA,kBAAkB,GAAGE,KAAK,GAAGF,kBAAkB,CAACG,MAAM;IAC1D,CAAC;EACH,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
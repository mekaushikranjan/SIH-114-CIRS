{"ast":null,"code":"'use strict';\n\nimport { ReanimatedError } from \"../../../common/index.js\";\nimport { filterCSSAndStyleProperties } from \"../../utils/index.js\";\nimport { setViewStyle } from \"../proxy.js\";\nimport { getStyleBuilder, hasStyleBuilder } from \"../registry.js\";\nimport CSSAnimationsManager from \"./CSSAnimationsManager.js\";\nimport CSSTransitionsManager from \"./CSSTransitionsManager.js\";\nexport default class CSSManager {\n  styleBuilder = null;\n  isFirstUpdate = true;\n  constructor({\n    shadowNodeWrapper,\n    viewTag,\n    viewName = 'RCTView'\n  }) {\n    const tag = this.viewTag = viewTag;\n    const wrapper = shadowNodeWrapper;\n    this.viewName = viewName;\n    this.styleBuilder = hasStyleBuilder(viewName) ? getStyleBuilder(viewName) : null;\n    this.cssAnimationsManager = new CSSAnimationsManager(wrapper, viewName, tag);\n    this.cssTransitionsManager = new CSSTransitionsManager(wrapper, tag);\n  }\n  update(style) {\n    const [animationProperties, transitionProperties, filteredStyle] = filterCSSAndStyleProperties(style);\n    if (!this.styleBuilder && (animationProperties || transitionProperties)) {\n      throw new ReanimatedError(`Tried to apply CSS animations to ${this.viewName} which is not supported`);\n    }\n    const normalizedStyle = this.styleBuilder?.buildFrom(filteredStyle);\n    if (this.isFirstUpdate && normalizedStyle) {\n      setViewStyle(this.viewTag, normalizedStyle);\n    }\n    this.cssTransitionsManager.update(transitionProperties);\n    this.cssAnimationsManager.update(animationProperties);\n    if (!this.isFirstUpdate && normalizedStyle) {\n      setViewStyle(this.viewTag, normalizedStyle);\n    }\n    this.isFirstUpdate = false;\n  }\n  unmountCleanup() {\n    this.cssAnimationsManager.unmountCleanup();\n    this.cssTransitionsManager.unmountCleanup();\n  }\n}","map":{"version":3,"names":["ReanimatedError","filterCSSAndStyleProperties","setViewStyle","getStyleBuilder","hasStyleBuilder","CSSAnimationsManager","CSSTransitionsManager","CSSManager","styleBuilder","isFirstUpdate","constructor","shadowNodeWrapper","viewTag","viewName","tag","wrapper","cssAnimationsManager","cssTransitionsManager","update","style","animationProperties","transitionProperties","filteredStyle","normalizedStyle","buildFrom","unmountCleanup"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\css\\native\\managers\\CSSManager.ts"],"sourcesContent":["'use strict';\nimport { ReanimatedError } from '../../../common';\nimport type { ShadowNodeWrapper } from '../../../commonTypes';\nimport type { ViewInfo } from '../../../createAnimatedComponent/commonTypes';\nimport type { AnyRecord, CSSStyle } from '../../types';\nimport type { ICSSManager } from '../../types/interfaces';\nimport { filterCSSAndStyleProperties } from '../../utils';\nimport { setViewStyle } from '../proxy';\nimport { getStyleBuilder, hasStyleBuilder } from '../registry';\nimport type { StyleBuilder } from '../style';\nimport CSSAnimationsManager from './CSSAnimationsManager';\nimport CSSTransitionsManager from './CSSTransitionsManager';\n\nexport default class CSSManager implements ICSSManager {\n  private readonly cssAnimationsManager: CSSAnimationsManager;\n  private readonly cssTransitionsManager: CSSTransitionsManager;\n  private readonly viewTag: number;\n  private readonly viewName: string;\n  private readonly styleBuilder: StyleBuilder<AnyRecord> | null = null;\n  private isFirstUpdate: boolean = true;\n\n  constructor({ shadowNodeWrapper, viewTag, viewName = 'RCTView' }: ViewInfo) {\n    const tag = (this.viewTag = viewTag as number);\n    const wrapper = shadowNodeWrapper as ShadowNodeWrapper;\n\n    this.viewName = viewName;\n    this.styleBuilder = hasStyleBuilder(viewName)\n      ? getStyleBuilder(viewName)\n      : null;\n    this.cssAnimationsManager = new CSSAnimationsManager(\n      wrapper,\n      viewName,\n      tag\n    );\n    this.cssTransitionsManager = new CSSTransitionsManager(wrapper, tag);\n  }\n\n  update(style: CSSStyle): void {\n    const [animationProperties, transitionProperties, filteredStyle] =\n      filterCSSAndStyleProperties(style);\n\n    if (!this.styleBuilder && (animationProperties || transitionProperties)) {\n      throw new ReanimatedError(\n        `Tried to apply CSS animations to ${this.viewName} which is not supported`\n      );\n    }\n\n    const normalizedStyle = this.styleBuilder?.buildFrom(filteredStyle);\n\n    // If the update is called during the first css style update, we won't\n    // trigger CSS transitions and set styles before attaching CSS transitions\n    if (this.isFirstUpdate && normalizedStyle) {\n      setViewStyle(this.viewTag, normalizedStyle);\n    }\n\n    this.cssTransitionsManager.update(transitionProperties);\n    this.cssAnimationsManager.update(animationProperties);\n\n    // If the current update is not the fist one, we want to update CSS\n    // animations and transitions first and update the style then to make\n    // sure that the new transition is fired with new settings (like duration)\n    if (!this.isFirstUpdate && normalizedStyle) {\n      setViewStyle(this.viewTag, normalizedStyle);\n    }\n\n    this.isFirstUpdate = false;\n  }\n\n  unmountCleanup(): void {\n    this.cssAnimationsManager.unmountCleanup();\n    this.cssTransitionsManager.unmountCleanup();\n  }\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,eAAe,QAAQ,0BAAiB;AAKjD,SAASC,2BAA2B,QAAQ,sBAAa;AACzD,SAASC,YAAY,QAAQ,aAAU;AACvC,SAASC,eAAe,EAAEC,eAAe,QAAQ,gBAAa;AAE9D,OAAOC,oBAAoB,MAAM,2BAAwB;AACzD,OAAOC,qBAAqB,MAAM,4BAAyB;AAE3D,eAAe,MAAMC,UAAU,CAAwB;EAKpCC,YAAY,GAAmC,IAAI;EAC5DC,aAAa,GAAY,IAAI;EAErCC,WAAWA,CAAC;IAAEC,iBAAiB;IAAEC,OAAO;IAAEC,QAAQ,GAAG;EAAoB,CAAC,EAAE;IAC1E,MAAMC,GAAG,GAAI,IAAI,CAACF,OAAO,GAAGA,OAAkB;IAC9C,MAAMG,OAAO,GAAGJ,iBAAsC;IAEtD,IAAI,CAACE,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACL,YAAY,GAAGJ,eAAe,CAACS,QAAQ,CAAC,GACzCV,eAAe,CAACU,QAAQ,CAAC,GACzB,IAAI;IACR,IAAI,CAACG,oBAAoB,GAAG,IAAIX,oBAAoB,CAClDU,OAAO,EACPF,QAAQ,EACRC,GACF,CAAC;IACD,IAAI,CAACG,qBAAqB,GAAG,IAAIX,qBAAqB,CAACS,OAAO,EAAED,GAAG,CAAC;EACtE;EAEAI,MAAMA,CAACC,KAAe,EAAQ;IAC5B,MAAM,CAACC,mBAAmB,EAAEC,oBAAoB,EAAEC,aAAa,CAAC,GAC9DrB,2BAA2B,CAACkB,KAAK,CAAC;IAEpC,IAAI,CAAC,IAAI,CAACX,YAAY,KAAKY,mBAAmB,IAAIC,oBAAoB,CAAC,EAAE;MACvE,MAAM,IAAIrB,eAAe,CACvB,oCAAoC,IAAI,CAACa,QAAQ,yBACnD,CAAC;IACH;IAEA,MAAMU,eAAe,GAAG,IAAI,CAACf,YAAY,EAAEgB,SAAS,CAACF,aAAa,CAAC;IAInE,IAAI,IAAI,CAACb,aAAa,IAAIc,eAAe,EAAE;MACzCrB,YAAY,CAAC,IAAI,CAACU,OAAO,EAAEW,eAAe,CAAC;IAC7C;IAEA,IAAI,CAACN,qBAAqB,CAACC,MAAM,CAACG,oBAAoB,CAAC;IACvD,IAAI,CAACL,oBAAoB,CAACE,MAAM,CAACE,mBAAmB,CAAC;IAKrD,IAAI,CAAC,IAAI,CAACX,aAAa,IAAIc,eAAe,EAAE;MAC1CrB,YAAY,CAAC,IAAI,CAACU,OAAO,EAAEW,eAAe,CAAC;IAC7C;IAEA,IAAI,CAACd,aAAa,GAAG,KAAK;EAC5B;EAEAgB,cAAcA,CAAA,EAAS;IACrB,IAAI,CAACT,oBAAoB,CAACS,cAAc,CAAC,CAAC;IAC1C,IAAI,CAACR,qBAAqB,CAACQ,cAAc,CAAC,CAAC;EAC7C;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
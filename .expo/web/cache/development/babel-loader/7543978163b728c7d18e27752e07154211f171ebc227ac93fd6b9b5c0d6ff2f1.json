{"ast":null,"code":"'use strict';\nexport const WebEasings = {\n  linear: [0, 0, 1, 1],\n  ease: [0.42, 0, 1, 1],\n  quad: [0.11, 0, 0.5, 0],\n  cubic: [0.32, 0, 0.67, 0],\n  sin: [0.12, 0, 0.39, 0],\n  circle: [0.55, 0, 1, 0.45],\n  exp: [0.7, 0, 0.84, 0]\n};\nexport function getEasingByName(easingName) {\n  return `cubic-bezier(${WebEasings[easingName].toString()})`;\n}\nexport function maybeGetBezierEasing(easing) {\n  if (!('factory' in easing)) {\n    return null;\n  }\n  const easingFactory = easing.factory;\n  if (!('__closure' in easingFactory)) {\n    return null;\n  }\n  const closure = easingFactory.__closure;\n  if (!('Bezier' in closure)) {\n    return null;\n  }\n  return `cubic-bezier(${closure.x1}, ${closure.y1}, ${closure.x2}, ${closure.y2})`;\n}","map":{"version":3,"names":["WebEasings","linear","ease","quad","cubic","sin","circle","exp","getEasingByName","easingName","toString","maybeGetBezierEasing","easing","easingFactory","factory","closure","__closure","x1","y1","x2","y2"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\web\\Easing.web.ts"],"sourcesContent":["'use strict';\n\nimport type { EasingFunctionFactory } from '../../Easing';\n\ntype BezierClosure = {\n  x1: number;\n  y1: number;\n  x2: number;\n  y2: number;\n  Bezier: () => void;\n};\n\n// Those are the easings that can be implemented using Bezier curves.\n// Others should be done as CSS animations\nexport const WebEasings = {\n  linear: [0, 0, 1, 1],\n  ease: [0.42, 0, 1, 1],\n  quad: [0.11, 0, 0.5, 0],\n  cubic: [0.32, 0, 0.67, 0],\n  sin: [0.12, 0, 0.39, 0],\n  circle: [0.55, 0, 1, 0.45],\n  exp: [0.7, 0, 0.84, 0],\n};\n\nexport function getEasingByName(easingName: WebEasingsNames) {\n  return `cubic-bezier(${WebEasings[easingName].toString()})`;\n}\n\nexport function maybeGetBezierEasing(\n  easing: EasingFunctionFactory\n): null | string {\n  if (!('factory' in easing)) {\n    return null;\n  }\n\n  const easingFactory = easing.factory;\n\n  if (!('__closure' in easingFactory)) {\n    return null;\n  }\n\n  const closure = easingFactory.__closure as BezierClosure;\n\n  if (!('Bezier' in closure)) {\n    return null;\n  }\n\n  return `cubic-bezier(${closure.x1}, ${closure.y1}, ${closure.x2}, ${closure.y2})`;\n}\n\nexport type WebEasingsNames = keyof typeof WebEasings;\n"],"mappings":"AAAA,YAAY;AAcZ,OAAO,MAAMA,UAAU,GAAG;EACxBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACpBC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrBC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;EACvBC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;EACzBC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;EACvBC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;EAC1BC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;AACvB,CAAC;AAED,OAAO,SAASC,eAAeA,CAACC,UAA2B,EAAE;EAC3D,OAAO,gBAAgBT,UAAU,CAACS,UAAU,CAAC,CAACC,QAAQ,CAAC,CAAC,GAAG;AAC7D;AAEA,OAAO,SAASC,oBAAoBA,CAClCC,MAA6B,EACd;EACf,IAAI,EAAE,SAAS,IAAIA,MAAM,CAAC,EAAE;IAC1B,OAAO,IAAI;EACb;EAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,OAAO;EAEpC,IAAI,EAAE,WAAW,IAAID,aAAa,CAAC,EAAE;IACnC,OAAO,IAAI;EACb;EAEA,MAAME,OAAO,GAAGF,aAAa,CAACG,SAA0B;EAExD,IAAI,EAAE,QAAQ,IAAID,OAAO,CAAC,EAAE;IAC1B,OAAO,IAAI;EACb;EAEA,OAAO,gBAAgBA,OAAO,CAACE,EAAE,KAAKF,OAAO,CAACG,EAAE,KAAKH,OAAO,CAACI,EAAE,KAAKJ,OAAO,CAACK,EAAE,GAAG;AACnF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
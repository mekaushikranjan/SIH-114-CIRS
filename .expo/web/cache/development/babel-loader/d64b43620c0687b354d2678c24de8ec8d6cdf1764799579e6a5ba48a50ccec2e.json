{"ast":null,"code":"\"use strict\";\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { tagMessage } from './utils';\nlet useNewWebImplementation = true;\nlet getWasCalled = false;\nexport function enableExperimentalWebImplementation(_shouldEnable = true) {\n  console.warn(tagMessage('New web implementation is enabled by default. This function will be removed in Gesture Handler 3.'));\n}\nexport function enableLegacyWebImplementation(shouldUseLegacyImplementation = true) {\n  console.warn(tagMessage('Legacy web implementation is deprecated. This function will be removed in Gesture Handler 3.'));\n  if (Platform.OS !== 'web' || useNewWebImplementation === !shouldUseLegacyImplementation) {\n    return;\n  }\n  if (getWasCalled) {\n    console.error('Some parts of this application have already started using the new gesture handler implementation. No changes will be applied. You can try enabling legacy implementation earlier.');\n    return;\n  }\n  useNewWebImplementation = !shouldUseLegacyImplementation;\n}\nexport function isNewWebImplementationEnabled() {\n  getWasCalled = true;\n  return useNewWebImplementation;\n}","map":{"version":3,"names":["tagMessage","useNewWebImplementation","getWasCalled","enableExperimentalWebImplementation","_shouldEnable","console","warn","enableLegacyWebImplementation","shouldUseLegacyImplementation","Platform","OS","error","isNewWebImplementationEnabled"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-gesture-handler\\src\\EnableNewWebImplementation.ts"],"sourcesContent":["import { Platform } from 'react-native';\nimport { tagMessage } from './utils';\n\nlet useNewWebImplementation = true;\nlet getWasCalled = false;\n\n/**\n * @deprecated new web implementation is enabled by default. This function will be removed in Gesture Handler 3\n */\nexport function enableExperimentalWebImplementation(\n  _shouldEnable = true\n): void {\n  // NO-OP since the new implementation is now the default\n  console.warn(\n    tagMessage(\n      'New web implementation is enabled by default. This function will be removed in Gesture Handler 3.'\n    )\n  );\n}\n\n/**\n * @deprecated legacy implementation is no longer supported. This function will be removed in Gesture Handler 3\n */\nexport function enableLegacyWebImplementation(\n  shouldUseLegacyImplementation = true\n): void {\n  console.warn(\n    tagMessage(\n      'Legacy web implementation is deprecated. This function will be removed in Gesture Handler 3.'\n    )\n  );\n\n  if (\n    Platform.OS !== 'web' ||\n    useNewWebImplementation === !shouldUseLegacyImplementation\n  ) {\n    return;\n  }\n\n  if (getWasCalled) {\n    console.error(\n      'Some parts of this application have already started using the new gesture handler implementation. No changes will be applied. You can try enabling legacy implementation earlier.'\n    );\n    return;\n  }\n\n  useNewWebImplementation = !shouldUseLegacyImplementation;\n}\n\nexport function isNewWebImplementationEnabled(): boolean {\n  getWasCalled = true;\n  return useNewWebImplementation;\n}\n"],"mappings":";;;AACA,SAASA,UAAU,QAAQ,SAAS;AAEpC,IAAIC,uBAAuB,GAAG,IAAI;AAClC,IAAIC,YAAY,GAAG,KAAK;AAKxB,OAAO,SAASC,mCAAmCA,CACjDC,aAAa,GAAG,IAAI,EACd;EAENC,OAAO,CAACC,IAAI,CACVN,UAAU,CACR,mGACF,CACF,CAAC;AACH;AAKA,OAAO,SAASO,6BAA6BA,CAC3CC,6BAA6B,GAAG,IAAI,EAC9B;EACNH,OAAO,CAACC,IAAI,CACVN,UAAU,CACR,8FACF,CACF,CAAC;EAED,IACES,QAAQ,CAACC,EAAE,KAAK,KAAK,IACrBT,uBAAuB,KAAK,CAACO,6BAA6B,EAC1D;IACA;EACF;EAEA,IAAIN,YAAY,EAAE;IAChBG,OAAO,CAACM,KAAK,CACX,mLACF,CAAC;IACD;EACF;EAEAV,uBAAuB,GAAG,CAACO,6BAA6B;AAC1D;AAEA,OAAO,SAASI,6BAA6BA,CAAA,EAAY;EACvDV,YAAY,GAAG,IAAI;EACnB,OAAOD,uBAAuB;AAChC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
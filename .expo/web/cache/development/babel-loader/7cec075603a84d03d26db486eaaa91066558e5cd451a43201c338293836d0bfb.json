{"ast":null,"code":"'use strict';\n\nimport { logger } from \"../../common/index.js\";\nimport { isSharedValue } from \"../../isSharedValue.js\";\nimport { isAnimationProp, isCSSKeyframesObject, isCSSKeyframesRule, isTransitionProp } from \"./guards.js\";\nexport function filterCSSAndStyleProperties(style) {\n  const animationProperties = {};\n  let transitionProperties = {};\n  const filteredStyle = {};\n  for (const [prop, value] of Object.entries(style)) {\n    if (isAnimationProp(prop)) {\n      animationProperties[prop] = value;\n    } else if (isTransitionProp(prop)) {\n      if (prop === 'transition') {\n        transitionProperties = {\n          transition: value\n        };\n      } else {\n        transitionProperties[prop] = value;\n      }\n    } else if (!isSharedValue(value)) {\n      filteredStyle[prop] = value;\n    }\n  }\n  const animationName = animationProperties.animationName;\n  const hasAnimationName = animationName && (Array.isArray(animationName) ? animationName : [animationName]).every(keyframes => keyframes === 'none' ? false : isCSSKeyframesRule(keyframes) || isCSSKeyframesObject(keyframes));\n  const finalAnimationConfig = hasAnimationName ? Object.assign({}, animationProperties, {\n    animationName\n  }) : null;\n  const hasTransitionConfig = Object.keys(transitionProperties).length > 0;\n  const finalTransitionConfig = hasTransitionConfig ? transitionProperties : null;\n  if (__DEV__) {\n    validateCSSAnimationProps(animationProperties);\n    validateCSSTransitionProps(transitionProperties);\n  }\n  return [finalAnimationConfig, finalTransitionConfig, filteredStyle];\n}\nfunction validateCSSAnimationProps(props) {\n  if (!('animationName' in props) && Object.keys(props).length > 0) {\n    logger.warn('CSS animation properties were provided without specifying animationName.\\n' + 'If unintended, add animationName or remove unnecessary animation properties.');\n  }\n  if (!('animationDuration' in props) && 'animationName' in props) {\n    logger.warn('animationDuration was not specified for CSS animation. The default duration is 0s.\\n' + 'Have you forgotten to pass the animationDuration?');\n  }\n}\nfunction validateCSSTransitionProps(props) {\n  if (!('transitionDuration' in props) && 'transitionProperty' in props) {\n    logger.warn('transitionDuration was not specified for CSS transition. The default duration is 0s.\\n' + 'Have you forgotten to pass the transitionDuration?');\n  }\n}","map":{"version":3,"names":["logger","isSharedValue","isAnimationProp","isCSSKeyframesObject","isCSSKeyframesRule","isTransitionProp","filterCSSAndStyleProperties","style","animationProperties","transitionProperties","filteredStyle","prop","value","Object","entries","transition","animationName","hasAnimationName","Array","isArray","every","keyframes","finalAnimationConfig","assign","hasTransitionConfig","keys","length","finalTransitionConfig","__DEV__","validateCSSAnimationProps","validateCSSTransitionProps","props","warn"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\css\\utils\\props.ts"],"sourcesContent":["'use strict';\nimport { logger } from '../../common';\nimport { isSharedValue } from '../../isSharedValue';\nimport type {\n  AnyRecord,\n  CSSAnimationProperties,\n  CSSStyle,\n  CSSTransitionProperties,\n  ExistingCSSAnimationProperties,\n  PlainStyle,\n} from '../types';\nimport {\n  isAnimationProp,\n  isCSSKeyframesObject,\n  isCSSKeyframesRule,\n  isTransitionProp,\n} from './guards';\n\nexport function filterCSSAndStyleProperties<S extends AnyRecord>(\n  style: CSSStyle<S>\n): [\n  ExistingCSSAnimationProperties | null,\n  CSSTransitionProperties | null,\n  PlainStyle,\n] {\n  const animationProperties: Partial<CSSAnimationProperties> = {};\n  let transitionProperties: Partial<CSSTransitionProperties> = {};\n  const filteredStyle: AnyRecord = {};\n\n  for (const [prop, value] of Object.entries(style)) {\n    if (isAnimationProp(prop)) {\n      // TODO - add support for animation shorthand\n      animationProperties[prop] = value;\n    } else if (isTransitionProp(prop)) {\n      // If there is a shorthand `transition` property, all properties specified\n      // before are ignored and only these specified later are taken into account\n      // and override ones from the shorthand\n      if (prop === 'transition') {\n        transitionProperties = { transition: value };\n      } else {\n        transitionProperties[prop] = value;\n      }\n    } else if (!isSharedValue(value)) {\n      filteredStyle[prop] = value;\n    }\n  }\n\n  // Return animationProperties only if at least one animationName contains\n  // valid keyframes\n  const animationName = animationProperties.animationName;\n  const hasAnimationName =\n    animationName &&\n    (Array.isArray(animationName) ? animationName : [animationName]).every(\n      (keyframes) =>\n        keyframes === 'none'\n          ? false\n          : isCSSKeyframesRule(keyframes) || isCSSKeyframesObject(keyframes)\n    );\n  const finalAnimationConfig = hasAnimationName\n    ? ({\n        ...animationProperties,\n        animationName,\n      } as ExistingCSSAnimationProperties)\n    : null;\n\n  // Return transitionProperties only if the transitionProperty is present\n  const hasTransitionConfig = Object.keys(transitionProperties).length > 0;\n  const finalTransitionConfig = hasTransitionConfig\n    ? transitionProperties\n    : null;\n\n  if (__DEV__) {\n    validateCSSAnimationProps(animationProperties);\n    validateCSSTransitionProps(transitionProperties);\n  }\n\n  return [finalAnimationConfig, finalTransitionConfig, filteredStyle];\n}\n\nfunction validateCSSAnimationProps(props: Partial<CSSAnimationProperties>) {\n  // Check if any animation properties are present but animationName is missing\n  if (!('animationName' in props) && Object.keys(props).length > 0) {\n    logger.warn(\n      'CSS animation properties were provided without specifying animationName.\\n' +\n        'If unintended, add animationName or remove unnecessary animation properties.'\n    );\n  }\n\n  // Check if animationDuration is missing when animationName is present\n  if (!('animationDuration' in props) && 'animationName' in props) {\n    logger.warn(\n      'animationDuration was not specified for CSS animation. The default duration is 0s.\\n' +\n        'Have you forgotten to pass the animationDuration?'\n    );\n  }\n}\n\nfunction validateCSSTransitionProps(props: Partial<CSSTransitionProperties>) {\n  // Check if transitionDuration is missing when transitionProperty is present\n  if (!('transitionDuration' in props) && 'transitionProperty' in props) {\n    logger.warn(\n      'transitionDuration was not specified for CSS transition. The default duration is 0s.\\n' +\n        'Have you forgotten to pass the transitionDuration?'\n    );\n  }\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,MAAM,QAAQ,uBAAc;AACrC,SAASC,aAAa,QAAQ,wBAAqB;AASnD,SACEC,eAAe,EACfC,oBAAoB,EACpBC,kBAAkB,EAClBC,gBAAgB,QACX,aAAU;AAEjB,OAAO,SAASC,2BAA2BA,CACzCC,KAAkB,EAKlB;EACA,MAAMC,mBAAoD,GAAG,CAAC,CAAC;EAC/D,IAAIC,oBAAsD,GAAG,CAAC,CAAC;EAC/D,MAAMC,aAAwB,GAAG,CAAC,CAAC;EAEnC,KAAK,MAAM,CAACC,IAAI,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACP,KAAK,CAAC,EAAE;IACjD,IAAIL,eAAe,CAACS,IAAI,CAAC,EAAE;MAEzBH,mBAAmB,CAACG,IAAI,CAAC,GAAGC,KAAK;IACnC,CAAC,MAAM,IAAIP,gBAAgB,CAACM,IAAI,CAAC,EAAE;MAIjC,IAAIA,IAAI,KAAK,YAAY,EAAE;QACzBF,oBAAoB,GAAG;UAAEM,UAAU,EAAEH;QAAM,CAAC;MAC9C,CAAC,MAAM;QACLH,oBAAoB,CAACE,IAAI,CAAC,GAAGC,KAAK;MACpC;IACF,CAAC,MAAM,IAAI,CAACX,aAAa,CAACW,KAAK,CAAC,EAAE;MAChCF,aAAa,CAACC,IAAI,CAAC,GAAGC,KAAK;IAC7B;EACF;EAIA,MAAMI,aAAa,GAAGR,mBAAmB,CAACQ,aAAa;EACvD,MAAMC,gBAAgB,GACpBD,aAAa,IACb,CAACE,KAAK,CAACC,OAAO,CAACH,aAAa,CAAC,GAAGA,aAAa,GAAG,CAACA,aAAa,CAAC,EAAEI,KAAK,CACnEC,SAAS,IACRA,SAAS,KAAK,MAAM,GAChB,KAAK,GACLjB,kBAAkB,CAACiB,SAAS,CAAC,IAAIlB,oBAAoB,CAACkB,SAAS,CACvE,CAAC;EACH,MAAMC,oBAAoB,GAAGL,gBAAgB,GAAAJ,MAAA,CAAAU,MAAA,KAEpCf,mBAAmB;IACtBQ;EAAA,KAEF,IAAI;EAGR,MAAMQ,mBAAmB,GAAGX,MAAM,CAACY,IAAI,CAAChB,oBAAoB,CAAC,CAACiB,MAAM,GAAG,CAAC;EACxE,MAAMC,qBAAqB,GAAGH,mBAAmB,GAC7Cf,oBAAoB,GACpB,IAAI;EAER,IAAImB,OAAO,EAAE;IACXC,yBAAyB,CAACrB,mBAAmB,CAAC;IAC9CsB,0BAA0B,CAACrB,oBAAoB,CAAC;EAClD;EAEA,OAAO,CAACa,oBAAoB,EAAEK,qBAAqB,EAAEjB,aAAa,CAAC;AACrE;AAEA,SAASmB,yBAAyBA,CAACE,KAAsC,EAAE;EAEzE,IAAI,EAAE,eAAe,IAAIA,KAAK,CAAC,IAAIlB,MAAM,CAACY,IAAI,CAACM,KAAK,CAAC,CAACL,MAAM,GAAG,CAAC,EAAE;IAChE1B,MAAM,CAACgC,IAAI,CACT,4EAA4E,GAC1E,8EACJ,CAAC;EACH;EAGA,IAAI,EAAE,mBAAmB,IAAID,KAAK,CAAC,IAAI,eAAe,IAAIA,KAAK,EAAE;IAC/D/B,MAAM,CAACgC,IAAI,CACT,sFAAsF,GACpF,mDACJ,CAAC;EACH;AACF;AAEA,SAASF,0BAA0BA,CAACC,KAAuC,EAAE;EAE3E,IAAI,EAAE,oBAAoB,IAAIA,KAAK,CAAC,IAAI,oBAAoB,IAAIA,KAAK,EAAE;IACrE/B,MAAM,CAACgC,IAAI,CACT,wFAAwF,GACtF,oDACJ,CAAC;EACH;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nimport { convertPropertyToArray, parseSingleTransitionShorthand, splitByComma } from \"../../utils/index.js\";\nconst createEmptyTransitionConfig = () => ({\n  transitionProperty: [],\n  transitionDuration: [],\n  transitionTimingFunction: [],\n  transitionDelay: [],\n  transitionBehavior: []\n});\nfunction parseTransitionShorthand(value) {\n  return splitByComma(value).reduce((acc, part) => {\n    const result = parseSingleTransitionShorthand(part);\n    acc.transitionProperty.push(result.transitionProperty ?? 'all');\n    acc.transitionDuration.push(result.transitionDuration ? String(result.transitionDuration) : '0s');\n    acc.transitionTimingFunction.push(result.transitionTimingFunction ?? 'ease');\n    acc.transitionDelay.push(result.transitionDelay ? String(result.transitionDelay) : '0s');\n    acc.transitionBehavior.push(result.transitionBehavior ?? 'normal');\n    return acc;\n  }, createEmptyTransitionConfig());\n}\nexport function normalizeCSSTransitionProperties(config) {\n  const result = config.transition ? parseTransitionShorthand(config.transition) : createEmptyTransitionConfig();\n  for (const [key, value] of Object.entries(config)) {\n    result[key] = convertPropertyToArray(value);\n  }\n  return result;\n}","map":{"version":3,"names":["convertPropertyToArray","parseSingleTransitionShorthand","splitByComma","createEmptyTransitionConfig","transitionProperty","transitionDuration","transitionTimingFunction","transitionDelay","transitionBehavior","parseTransitionShorthand","value","reduce","acc","part","result","push","String","normalizeCSSTransitionProperties","config","transition","key","Object","entries"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\css\\web\\normalization\\transition.ts"],"sourcesContent":["'use strict';\nimport type {\n  AnyRecord,\n  CSSTransitionProp,\n  CSSTransitionProperties,\n} from '../../types';\nimport {\n  convertPropertyToArray,\n  parseSingleTransitionShorthand,\n  splitByComma,\n} from '../../utils';\n\ntype ExpandedCSSTransitionConfigProperties = Record<\n  Exclude<CSSTransitionProp, 'transition'>,\n  string[]\n>;\n\nconst createEmptyTransitionConfig =\n  (): ExpandedCSSTransitionConfigProperties => ({\n    transitionProperty: [],\n    transitionDuration: [],\n    transitionTimingFunction: [],\n    transitionDelay: [],\n    transitionBehavior: [],\n  });\n\nfunction parseTransitionShorthand(value: string) {\n  return splitByComma(value).reduce<ExpandedCSSTransitionConfigProperties>(\n    (acc, part) => {\n      const result = parseSingleTransitionShorthand(part);\n      acc.transitionProperty.push(result.transitionProperty ?? 'all');\n      acc.transitionDuration.push(\n        result.transitionDuration ? String(result.transitionDuration) : '0s'\n      );\n      acc.transitionTimingFunction.push(\n        result.transitionTimingFunction ?? 'ease'\n      );\n      acc.transitionDelay.push(\n        result.transitionDelay ? String(result.transitionDelay) : '0s'\n      );\n      acc.transitionBehavior.push(result.transitionBehavior ?? 'normal');\n      return acc;\n    },\n    createEmptyTransitionConfig()\n  );\n}\n\nexport function normalizeCSSTransitionProperties(\n  config: CSSTransitionProperties\n): ExpandedCSSTransitionConfigProperties {\n  const result: AnyRecord = config.transition\n    ? parseTransitionShorthand(config.transition)\n    : createEmptyTransitionConfig();\n\n  for (const [key, value] of Object.entries(config)) {\n    result[key] = convertPropertyToArray(value);\n  }\n\n  return result as ExpandedCSSTransitionConfigProperties;\n}\n"],"mappings":"AAAA,YAAY;;AAMZ,SACEA,sBAAsB,EACtBC,8BAA8B,EAC9BC,YAAY,QACP,sBAAa;AAOpB,MAAMC,2BAA2B,GAC/BA,CAAA,MAA8C;EAC5CC,kBAAkB,EAAE,EAAE;EACtBC,kBAAkB,EAAE,EAAE;EACtBC,wBAAwB,EAAE,EAAE;EAC5BC,eAAe,EAAE,EAAE;EACnBC,kBAAkB,EAAE;AACtB,CAAC,CAAC;AAEJ,SAASC,wBAAwBA,CAACC,KAAa,EAAE;EAC/C,OAAOR,YAAY,CAACQ,KAAK,CAAC,CAACC,MAAM,CAC/B,CAACC,GAAG,EAAEC,IAAI,KAAK;IACb,MAAMC,MAAM,GAAGb,8BAA8B,CAACY,IAAI,CAAC;IACnDD,GAAG,CAACR,kBAAkB,CAACW,IAAI,CAACD,MAAM,CAACV,kBAAkB,IAAI,KAAK,CAAC;IAC/DQ,GAAG,CAACP,kBAAkB,CAACU,IAAI,CACzBD,MAAM,CAACT,kBAAkB,GAAGW,MAAM,CAACF,MAAM,CAACT,kBAAkB,CAAC,GAAG,IAClE,CAAC;IACDO,GAAG,CAACN,wBAAwB,CAACS,IAAI,CAC/BD,MAAM,CAACR,wBAAwB,IAAI,MACrC,CAAC;IACDM,GAAG,CAACL,eAAe,CAACQ,IAAI,CACtBD,MAAM,CAACP,eAAe,GAAGS,MAAM,CAACF,MAAM,CAACP,eAAe,CAAC,GAAG,IAC5D,CAAC;IACDK,GAAG,CAACJ,kBAAkB,CAACO,IAAI,CAACD,MAAM,CAACN,kBAAkB,IAAI,QAAQ,CAAC;IAClE,OAAOI,GAAG;EACZ,CAAC,EACDT,2BAA2B,CAAC,CAC9B,CAAC;AACH;AAEA,OAAO,SAASc,gCAAgCA,CAC9CC,MAA+B,EACQ;EACvC,MAAMJ,MAAiB,GAAGI,MAAM,CAACC,UAAU,GACvCV,wBAAwB,CAACS,MAAM,CAACC,UAAU,CAAC,GAC3ChB,2BAA2B,CAAC,CAAC;EAEjC,KAAK,MAAM,CAACiB,GAAG,EAAEV,KAAK,CAAC,IAAIW,MAAM,CAACC,OAAO,CAACJ,MAAM,CAAC,EAAE;IACjDJ,MAAM,CAACM,GAAG,CAAC,GAAGpB,sBAAsB,CAACU,KAAK,CAAC;EAC7C;EAEA,OAAOI,MAAM;AACf","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"itemLayoutAnimation\", \"skipEnteringExitingAnimations\", \"CellRendererComponentStyle\"];\nvar _jsxFileName = \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\component\\\\FlatList.js\";\nimport { useMemo, useRef } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { createAnimatedComponent } from \"../createAnimatedComponent/index.js\";\nimport { LayoutAnimationConfig } from \"./LayoutAnimationConfig.js\";\nimport { AnimatedView } from \"./View.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedFlatList = createAnimatedComponent(FlatList);\nconst createCellRendererComponent = (itemLayoutAnimationRef, cellRendererComponentStyleRef) => {\n  const CellRendererComponent = props => {\n    return _jsxDEV(AnimatedView, {\n      layout: itemLayoutAnimationRef?.current,\n      onLayout: props.onLayout,\n      style: [props.style, typeof cellRendererComponentStyleRef?.current === 'function' ? cellRendererComponentStyleRef?.current({\n        index: props.index,\n        item: props.item\n      }) : cellRendererComponentStyleRef?.current],\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  };\n  return CellRendererComponent;\n};\nconst FlatListRender = function (props, ref) {\n  const {\n      itemLayoutAnimation,\n      skipEnteringExitingAnimations,\n      CellRendererComponentStyle\n    } = props,\n    restProps = _objectWithoutPropertiesLoose(props, _excluded);\n  if (!('scrollEventThrottle' in restProps)) {\n    restProps.scrollEventThrottle = 1;\n  }\n  const itemLayoutAnimationRef = useRef(itemLayoutAnimation);\n  itemLayoutAnimationRef.current = itemLayoutAnimation;\n  const cellRendererComponentStyleRef = useRef(CellRendererComponentStyle);\n  cellRendererComponentStyleRef.current = CellRendererComponentStyle;\n  const CellRendererComponent = useMemo(() => createCellRendererComponent(itemLayoutAnimationRef, cellRendererComponentStyleRef), []);\n  const animatedFlatList = _jsxDEV(AnimatedFlatList, Object.assign({\n    ref: ref\n  }, restProps, {\n    CellRendererComponent: CellRendererComponent\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n  if (skipEnteringExitingAnimations === undefined) {\n    return animatedFlatList;\n  }\n  return _jsxDEV(LayoutAnimationConfig, {\n    skipEntering: true,\n    skipExiting: true,\n    children: animatedFlatList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\nexport const ReanimatedFlatList = FlatListRender;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_excluded","_jsxFileName","useMemo","useRef","FlatList","createAnimatedComponent","LayoutAnimationConfig","AnimatedView","jsxDEV","_jsxDEV","AnimatedFlatList","createCellRendererComponent","itemLayoutAnimationRef","cellRendererComponentStyleRef","CellRendererComponent","props","layout","current","onLayout","style","index","item","children","fileName","lineNumber","columnNumber","FlatListRender","ref","itemLayoutAnimation","skipEnteringExitingAnimations","CellRendererComponentStyle","restProps","scrollEventThrottle","animatedFlatList","Object","assign","undefined","skipEntering","skipExiting","ReanimatedFlatList"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\component\\FlatList.tsx"],"sourcesContent":["'use strict';\nimport type { RefObject } from 'react';\nimport { useMemo, useRef } from 'react';\nimport type {\n  FlatListProps,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport { FlatList } from 'react-native';\n\nimport type { AnimatedStyle, ILayoutAnimationBuilder } from '../commonTypes';\nimport { createAnimatedComponent } from '../createAnimatedComponent';\nimport type { AnimatedProps } from '../helperTypes';\nimport { LayoutAnimationConfig } from './LayoutAnimationConfig';\nimport { AnimatedView } from './View';\n\nconst AnimatedFlatList = createAnimatedComponent(FlatList);\n\ninterface CellRendererComponentProps<ItemT = any> {\n  index: number;\n  item: ItemT;\n  onLayout?: ((event: LayoutChangeEvent) => void) | undefined;\n  children: React.ReactNode;\n  style?: StyleProp<AnimatedStyle<ViewStyle>>;\n}\n\nconst createCellRendererComponent = (\n  itemLayoutAnimationRef?: RefObject<ILayoutAnimationBuilder | undefined>,\n  cellRendererComponentStyleRef?: RefObject<\n    ReanimatedFlatListPropsWithLayout<any>['CellRendererComponentStyle']\n  >\n) => {\n  const CellRendererComponent = (props: CellRendererComponentProps) => {\n    return (\n      <AnimatedView\n        // TODO TYPESCRIPT This is temporary cast is to get rid of .d.ts file.\n        layout={itemLayoutAnimationRef?.current as any}\n        onLayout={props.onLayout}\n        style={[\n          props.style,\n          typeof cellRendererComponentStyleRef?.current === 'function'\n            ? cellRendererComponentStyleRef?.current({\n                index: props.index,\n                item: props.item,\n              })\n            : cellRendererComponentStyleRef?.current,\n        ]}>\n        {props.children}\n      </AnimatedView>\n    );\n  };\n\n  return CellRendererComponent;\n};\n\ninterface ReanimatedFlatListPropsWithLayout<T>\n  extends AnimatedProps<FlatListProps<T>> {\n  /**\n   * Lets you pass layout animation directly to the FlatList item. Works only\n   * with a single-column `Animated.FlatList`, `numColumns` property cannot be\n   * greater than 1.\n   */\n  itemLayoutAnimation?: ILayoutAnimationBuilder;\n  /**\n   * Lets you skip entering and exiting animations of FlatList items when on\n   * FlatList mount or unmount.\n   */\n  skipEnteringExitingAnimations?: boolean;\n  /** Property `CellRendererComponent` is not supported in `Animated.FlatList`. */\n  CellRendererComponent?: never;\n  /**\n   * Either animated view styles or a function that receives the item to be\n   * rendered and its index and returns animated view styles.\n   */\n  CellRendererComponentStyle?:\n    | StyleProp<AnimatedStyle<StyleProp<ViewStyle>>>\n    | (({\n        item,\n        index,\n      }: {\n        item: T;\n        index: number;\n      }) => StyleProp<AnimatedStyle<StyleProp<ViewStyle>>>)\n    | undefined;\n}\n\nexport type FlatListPropsWithLayout<T> = ReanimatedFlatListPropsWithLayout<T>;\n\n// Since createAnimatedComponent return type is ComponentClass that has the props of the argument,\n// but not things like NativeMethods, etc. we need to add them manually by extending the type.\ninterface AnimatedFlatListComplement<T> extends FlatList<T> {\n  getNode(): FlatList<T>;\n}\n\n// We need explicit any here, because this is the exact same type that is used in React Native types.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst FlatListRender = function <Item = any>(\n  props: ReanimatedFlatListPropsWithLayout<Item>,\n  ref: React.Ref<FlatList>\n) {\n  const {\n    itemLayoutAnimation,\n    skipEnteringExitingAnimations,\n    CellRendererComponentStyle,\n    ...restProps\n  } = props;\n\n  // Set default scrollEventThrottle, because user expects\n  // to have continuous scroll events and\n  // react-native defaults it to 50 for FlatLists.\n  // We set it to 1, so we have peace until\n  // there are 960 fps screens.\n  if (!('scrollEventThrottle' in restProps)) {\n    restProps.scrollEventThrottle = 1;\n  }\n\n  const itemLayoutAnimationRef = useRef(itemLayoutAnimation);\n  itemLayoutAnimationRef.current = itemLayoutAnimation;\n\n  const cellRendererComponentStyleRef = useRef(CellRendererComponentStyle);\n  cellRendererComponentStyleRef.current = CellRendererComponentStyle;\n\n  const CellRendererComponent = useMemo(\n    () =>\n      createCellRendererComponent(\n        itemLayoutAnimationRef,\n        cellRendererComponentStyleRef\n      ),\n    []\n  );\n\n  const animatedFlatList = (\n    // @ts-expect-error In its current type state, createAnimatedComponent cannot create generic components.\n    <AnimatedFlatList\n      ref={ref}\n      {...restProps}\n      CellRendererComponent={CellRendererComponent}\n    />\n  );\n\n  if (skipEnteringExitingAnimations === undefined) {\n    return animatedFlatList;\n  }\n\n  return (\n    <LayoutAnimationConfig skipEntering skipExiting>\n      {animatedFlatList}\n    </LayoutAnimationConfig>\n  );\n};\n\nexport const ReanimatedFlatList = FlatListRender as <\n  // We need explicit any here, because this is the exact same type that is used in React Native types.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ItemT = any,\n>(\n  props: ReanimatedFlatListPropsWithLayout<ItemT> & {\n    ref?: React.Ref<FlatList>;\n  }\n) => React.ReactElement;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ReanimatedFlatList<T = any> = typeof AnimatedFlatList &\n  AnimatedFlatListComplement<T>;\n"],"mappings":"AAAA,YAAY;;AAAA,OAAAA,6BAAA;AAAA,MAAAC,SAAA;AAAA,IAAAC,YAAA;AAEZ,SAASC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AAAA,OAAAC,QAAA;AAUvC,SAASC,uBAAuB,QAAQ,qCAA4B;AAEpE,SAASC,qBAAqB,QAAQ,4BAAyB;AAC/D,SAASC,YAAY,QAAQ,WAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,gBAAgB,GAAGL,uBAAuB,CAACD,QAAQ,CAAC;AAU1D,MAAMO,2BAA2B,GAAGA,CAClCC,sBAAuE,EACvEC,6BAEC,KACE;EACH,MAAMC,qBAAqB,GAAIC,KAAiC,IAAK;IACnE,OACEN,OAAA,CAACF,YAAA;MAECS,MAAM,EAAEJ,sBAAsB,EAAEK,OAAe;MAC/CC,QAAQ,EAAEH,KAAK,CAACG,QAAS;MACzBC,KAAK,EAAE,CACLJ,KAAK,CAACI,KAAK,EACX,OAAON,6BAA6B,EAAEI,OAAO,KAAK,UAAU,GACxDJ,6BAA6B,EAAEI,OAAO,CAAC;QACrCG,KAAK,EAAEL,KAAK,CAACK,KAAK;QAClBC,IAAI,EAAEN,KAAK,CAACM;MACd,CAAC,CAAC,GACFR,6BAA6B,EAAEI,OAAO,CAC1C;MAAAK,QAAA,EACDP,KAAK,CAACO;IAAQ;MAAAC,QAAA,EAAAtB,YAAA;MAAAuB,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEnB,CAAC;EAED,OAAOX,qBAAqB;AAC9B,CAAC;AA2CD,MAAMY,cAAc,GAAG,SAAAA,CACrBX,KAA8C,EAC9CY,GAAwB,EACxB;EACA,MAAM;MACJC,mBAAmB;MACnBC,6BAA6B;MAC7BC;IAEF,CAAC,GAAGf,KAAK;IADJgB,SAAA,GAAAhC,6BAAA,CACDgB,KAAK,EAAAf,SAAA;EAOT,IAAI,EAAE,qBAAqB,IAAI+B,SAAS,CAAC,EAAE;IACzCA,SAAS,CAACC,mBAAmB,GAAG,CAAC;EACnC;EAEA,MAAMpB,sBAAsB,GAAGT,MAAM,CAACyB,mBAAmB,CAAC;EAC1DhB,sBAAsB,CAACK,OAAO,GAAGW,mBAAmB;EAEpD,MAAMf,6BAA6B,GAAGV,MAAM,CAAC2B,0BAA0B,CAAC;EACxEjB,6BAA6B,CAACI,OAAO,GAAGa,0BAA0B;EAElE,MAAMhB,qBAAqB,GAAGZ,OAAO,CACnC,MACES,2BAA2B,CACzBC,sBAAsB,EACtBC,6BACF,CAAC,EACH,EACF,CAAC;EAED,MAAMoB,gBAAgB,GAEpBxB,OAAA,CAACC,gBAAgB,EAAAwB,MAAA,CAAAC,MAAA;IACfR,GAAG,EAAEA;EAAI,GACLI,SAAS;IACbjB,qBAAqB,EAAEA;EAAsB;IAAAS,QAAA,EAAAtB,YAAA;IAAAuB,UAAA;IAAAC,YAAA;EAAA,QAEhD;EAED,IAAII,6BAA6B,KAAKO,SAAS,EAAE;IAC/C,OAAOH,gBAAgB;EACzB;EAEA,OACExB,OAAA,CAACH,qBAAqB;IAAC+B,YAAY;IAACC,WAAW;IAAAhB,QAAA,EAC5CW;EAAgB;IAAAV,QAAA,EAAAtB,YAAA;IAAAuB,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAE5B,CAAC;AAED,OAAO,MAAMc,kBAAkB,GAAGb,cAQX","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
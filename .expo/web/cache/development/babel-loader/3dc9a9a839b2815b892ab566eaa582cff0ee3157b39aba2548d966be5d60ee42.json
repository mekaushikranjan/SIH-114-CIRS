{"ast":null,"code":"'use strict';\n\nimport { SHOULD_BE_USE_WEB } from \"./PlatformChecker/index.js\";\nexport const serializableMappingFlag = Symbol('serializable flag');\nconst cache = SHOULD_BE_USE_WEB ? null : new WeakMap();\nexport const serializableMappingCache = SHOULD_BE_USE_WEB ? {\n  set() {},\n  get() {\n    return null;\n  }\n} : {\n  set(serializable, serializableRef) {\n    cache.set(serializable, serializableRef || serializableMappingFlag);\n  },\n  get: cache.get.bind(cache)\n};","map":{"version":3,"names":["SHOULD_BE_USE_WEB","serializableMappingFlag","Symbol","cache","WeakMap","serializableMappingCache","set","get","serializable","serializableRef","bind"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-worklets\\src\\serializableMappingCache.ts"],"sourcesContent":["'use strict';\nimport { SHOULD_BE_USE_WEB } from './PlatformChecker';\nimport type { SerializableRef } from './workletTypes';\n\n/**\n * This symbol is used to represent a mapping from the value to itself.\n *\n * It's used to prevent converting a serializable that's already converted - for\n * example a Shared Value that's in worklet's closure.\n */\nexport const serializableMappingFlag = Symbol('serializable flag');\n\n/*\nDuring a fast refresh, React holds the same instance of a Mutable\n(that's guaranteed by `useRef`) but `serializableCache` gets regenerated and thus\nbecoming empty. This happens when editing the file that contains the definition of this cache.\n\nBecause of it, `createSerializable` can't find given mapping\nin `serializableCache` for the Mutable and tries to clone it as if it was a regular JS object.\nDuring cloning we use `Object.entries` to iterate over the keys which throws an error on accessing `_value`.\nFor convenience we moved this cache to a separate file so it doesn't scare us with red squiggles.\n*/\n\nconst cache = SHOULD_BE_USE_WEB\n  ? null\n  : new WeakMap<object, SerializableRef | symbol>();\n\nexport const serializableMappingCache = SHOULD_BE_USE_WEB\n  ? {\n      set() {\n        // NOOP\n      },\n      get() {\n        return null;\n      },\n    }\n  : {\n      set(serializable: object, serializableRef?: SerializableRef): void {\n        cache!.set(serializable, serializableRef || serializableMappingFlag);\n      },\n      get: cache!.get.bind(cache),\n    };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,iBAAiB,QAAQ,4BAAmB;AASrD,OAAO,MAAMC,uBAAuB,GAAGC,MAAM,CAAC,mBAAmB,CAAC;AAalE,MAAMC,KAAK,GAAGH,iBAAiB,GAC3B,IAAI,GACJ,IAAII,OAAO,CAAmC,CAAC;AAEnD,OAAO,MAAMC,wBAAwB,GAAGL,iBAAiB,GACrD;EACEM,GAAGA,CAAA,EAAG,CACJ,CACD;EACDC,GAAGA,CAAA,EAAG;IACJ,OAAO,IAAI;EACb;AACF,CAAC,GACD;EACED,GAAGA,CAACE,YAAoB,EAAEC,eAAiC,EAAQ;IACjEN,KAAK,CAAEG,GAAG,CAACE,YAAY,EAAEC,eAAe,IAAIR,uBAAuB,CAAC;EACtE,CAAC;EACDM,GAAG,EAAEJ,KAAK,CAAEI,GAAG,CAACG,IAAI,CAACP,KAAK;AAC5B,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  issues: [],\n  userIssues: [],\n  departmentIssues: [],\n  popularIssues: [],\n  loading: false,\n  categories: ['Potholes', 'Garbage', 'Trash Bins', 'Sanitation', 'Street Lights', 'Water Supply', 'Drainage']\n};\nconst issuesSlice = createSlice({\n  name: 'issues',\n  initialState,\n  reducers: {\n    setLoading: (state, action) => {\n      state.loading = action.payload;\n    },\n    setIssues: (state, action) => {\n      state.issues = action.payload;\n    },\n    addIssue: (state, action) => {\n      state.issues.push(action.payload);\n      state.userIssues.push(action.payload);\n    },\n    updateIssue: (state, action) => {\n      const index = state.issues.findIndex(issue => issue.id === action.payload.id);\n      if (index !== -1) {\n        state.issues[index] = action.payload;\n      }\n    },\n    upvoteIssue: (state, action) => {\n      const issue = state.issues.find(issue => issue.id === action.payload);\n      if (issue) {\n        issue.upvotes += 1;\n      }\n    },\n    setUserIssues: (state, action) => {\n      state.userIssues = action.payload;\n    },\n    setDepartmentIssues: (state, action) => {\n      state.departmentIssues = action.payload;\n    },\n    setPopularIssues: (state, action) => {\n      state.popularIssues = action.payload;\n    }\n  }\n});\nexport const {\n  setLoading,\n  setIssues,\n  addIssue,\n  updateIssue,\n  upvoteIssue,\n  setUserIssues,\n  setDepartmentIssues,\n  setPopularIssues\n} = issuesSlice.actions;\nexport default issuesSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","issues","userIssues","departmentIssues","popularIssues","loading","categories","issuesSlice","name","reducers","setLoading","state","action","payload","setIssues","addIssue","push","updateIssue","index","findIndex","issue","id","upvoteIssue","find","upvotes","setUserIssues","setDepartmentIssues","setPopularIssues","actions","reducer"],"sources":["C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/src/store/slices/issuesSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Issue } from '../../types';\n\ninterface IssuesState {\n  issues: Issue[];\n  userIssues: Issue[];\n  departmentIssues: Issue[];\n  popularIssues: Issue[];\n  loading: boolean;\n  categories: string[];\n}\n\nconst initialState: IssuesState = {\n  issues: [],\n  userIssues: [],\n  departmentIssues: [],\n  popularIssues: [],\n  loading: false,\n  categories: ['Potholes', 'Garbage', 'Trash Bins', 'Sanitation', 'Street Lights', 'Water Supply', 'Drainage'],\n};\n\nconst issuesSlice = createSlice({\n  name: 'issues',\n  initialState,\n  reducers: {\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.loading = action.payload;\n    },\n    setIssues: (state, action: PayloadAction<Issue[]>) => {\n      state.issues = action.payload;\n    },\n    addIssue: (state, action: PayloadAction<Issue>) => {\n      state.issues.push(action.payload);\n      state.userIssues.push(action.payload);\n    },\n    updateIssue: (state, action: PayloadAction<Issue>) => {\n      const index = state.issues.findIndex(issue => issue.id === action.payload.id);\n      if (index !== -1) {\n        state.issues[index] = action.payload;\n      }\n    },\n    upvoteIssue: (state, action: PayloadAction<string>) => {\n      const issue = state.issues.find(issue => issue.id === action.payload);\n      if (issue) {\n        issue.upvotes += 1;\n      }\n    },\n    setUserIssues: (state, action: PayloadAction<Issue[]>) => {\n      state.userIssues = action.payload;\n    },\n    setDepartmentIssues: (state, action: PayloadAction<Issue[]>) => {\n      state.departmentIssues = action.payload;\n    },\n    setPopularIssues: (state, action: PayloadAction<Issue[]>) => {\n      state.popularIssues = action.payload;\n    },\n  },\n});\n\nexport const {\n  setLoading,\n  setIssues,\n  addIssue,\n  updateIssue,\n  upvoteIssue,\n  setUserIssues,\n  setDepartmentIssues,\n  setPopularIssues,\n} = issuesSlice.actions;\n\nexport default issuesSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAY7D,MAAMC,YAAyB,GAAG;EAChCC,MAAM,EAAE,EAAE;EACVC,UAAU,EAAE,EAAE;EACdC,gBAAgB,EAAE,EAAE;EACpBC,aAAa,EAAE,EAAE;EACjBC,OAAO,EAAE,KAAK;EACdC,UAAU,EAAE,CAAC,UAAU,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,EAAE,eAAe,EAAE,cAAc,EAAE,UAAU;AAC7G,CAAC;AAED,MAAMC,WAAW,GAAGR,WAAW,CAAC;EAC9BS,IAAI,EAAE,QAAQ;EACdR,YAAY;EACZS,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAACN,OAAO,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC;IACDC,SAAS,EAAEA,CAACH,KAAK,EAAEC,MAA8B,KAAK;MACpDD,KAAK,CAACV,MAAM,GAAGW,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDE,QAAQ,EAAEA,CAACJ,KAAK,EAAEC,MAA4B,KAAK;MACjDD,KAAK,CAACV,MAAM,CAACe,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;MACjCF,KAAK,CAACT,UAAU,CAACc,IAAI,CAACJ,MAAM,CAACC,OAAO,CAAC;IACvC,CAAC;IACDI,WAAW,EAAEA,CAACN,KAAK,EAAEC,MAA4B,KAAK;MACpD,MAAMM,KAAK,GAAGP,KAAK,CAACV,MAAM,CAACkB,SAAS,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKT,MAAM,CAACC,OAAO,CAACQ,EAAE,CAAC;MAC7E,IAAIH,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBP,KAAK,CAACV,MAAM,CAACiB,KAAK,CAAC,GAAGN,MAAM,CAACC,OAAO;MACtC;IACF,CAAC;IACDS,WAAW,EAAEA,CAACX,KAAK,EAAEC,MAA6B,KAAK;MACrD,MAAMQ,KAAK,GAAGT,KAAK,CAACV,MAAM,CAACsB,IAAI,CAACH,KAAK,IAAIA,KAAK,CAACC,EAAE,KAAKT,MAAM,CAACC,OAAO,CAAC;MACrE,IAAIO,KAAK,EAAE;QACTA,KAAK,CAACI,OAAO,IAAI,CAAC;MACpB;IACF,CAAC;IACDC,aAAa,EAAEA,CAACd,KAAK,EAAEC,MAA8B,KAAK;MACxDD,KAAK,CAACT,UAAU,GAAGU,MAAM,CAACC,OAAO;IACnC,CAAC;IACDa,mBAAmB,EAAEA,CAACf,KAAK,EAAEC,MAA8B,KAAK;MAC9DD,KAAK,CAACR,gBAAgB,GAAGS,MAAM,CAACC,OAAO;IACzC,CAAC;IACDc,gBAAgB,EAAEA,CAAChB,KAAK,EAAEC,MAA8B,KAAK;MAC3DD,KAAK,CAACP,aAAa,GAAGQ,MAAM,CAACC,OAAO;IACtC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXH,UAAU;EACVI,SAAS;EACTC,QAAQ;EACRE,WAAW;EACXK,WAAW;EACXG,aAAa;EACbC,mBAAmB;EACnBC;AACF,CAAC,GAAGpB,WAAW,CAACqB,OAAO;AAEvB,eAAerB,WAAW,CAACsB,OAAO","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
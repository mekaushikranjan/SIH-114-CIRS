{"ast":null,"code":"\"use strict\";\n\nimport { DiagonalDirections, Directions } from '../../Directions';\nimport { MINIMAL_RECOGNIZABLE_MAGNITUDE } from '../constants';\nexport default class Vector {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this._magnitude = Math.hypot(this.x, this.y);\n    const isMagnitudeSufficient = this._magnitude > MINIMAL_RECOGNIZABLE_MAGNITUDE;\n    this.unitX = isMagnitudeSufficient ? this.x / this._magnitude : 0;\n    this.unitY = isMagnitudeSufficient ? this.y / this._magnitude : 0;\n  }\n  static fromDirection(direction) {\n    return DirectionToVectorMappings.get(direction) ?? new Vector(0, 0);\n  }\n  static fromVelocity(tracker, pointerId) {\n    const velocity = tracker.getVelocity(pointerId);\n    return velocity ? new Vector(velocity.x, velocity.y) : null;\n  }\n  get magnitude() {\n    return this._magnitude;\n  }\n  computeSimilarity(vector) {\n    return this.unitX * vector.unitX + this.unitY * vector.unitY;\n  }\n  isSimilar(vector, threshold) {\n    return this.computeSimilarity(vector) > threshold;\n  }\n}\nconst DirectionToVectorMappings = new Map([[Directions.LEFT, new Vector(-1, 0)], [Directions.RIGHT, new Vector(1, 0)], [Directions.UP, new Vector(0, -1)], [Directions.DOWN, new Vector(0, 1)], [DiagonalDirections.UP_RIGHT, new Vector(1, -1)], [DiagonalDirections.DOWN_RIGHT, new Vector(1, 1)], [DiagonalDirections.UP_LEFT, new Vector(-1, -1)], [DiagonalDirections.DOWN_LEFT, new Vector(-1, 1)]]);","map":{"version":3,"names":["DiagonalDirections","Directions","MINIMAL_RECOGNIZABLE_MAGNITUDE","Vector","constructor","x","y","_magnitude","Math","hypot","isMagnitudeSufficient","unitX","unitY","fromDirection","direction","DirectionToVectorMappings","get","fromVelocity","tracker","pointerId","velocity","getVelocity","magnitude","computeSimilarity","vector","isSimilar","threshold","Map","LEFT","RIGHT","UP","DOWN","UP_RIGHT","DOWN_RIGHT","UP_LEFT","DOWN_LEFT"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-gesture-handler\\src\\web\\tools\\Vector.ts"],"sourcesContent":["import { DiagonalDirections, Directions } from '../../Directions';\nimport { MINIMAL_RECOGNIZABLE_MAGNITUDE } from '../constants';\nimport PointerTracker from './PointerTracker';\n\nexport default class Vector {\n  private readonly x;\n  private readonly y;\n  private readonly unitX;\n  private readonly unitY;\n  private readonly _magnitude;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n\n    this._magnitude = Math.hypot(this.x, this.y);\n    const isMagnitudeSufficient =\n      this._magnitude > MINIMAL_RECOGNIZABLE_MAGNITUDE;\n\n    this.unitX = isMagnitudeSufficient ? this.x / this._magnitude : 0;\n    this.unitY = isMagnitudeSufficient ? this.y / this._magnitude : 0;\n  }\n\n  static fromDirection(direction: Directions | DiagonalDirections): Vector {\n    return DirectionToVectorMappings.get(direction) ?? new Vector(0, 0);\n  }\n\n  static fromVelocity(tracker: PointerTracker, pointerId: number) {\n    const velocity = tracker.getVelocity(pointerId);\n    return velocity ? new Vector(velocity.x, velocity.y) : null;\n  }\n\n  public get magnitude() {\n    return this._magnitude;\n  }\n\n  computeSimilarity(vector: Vector) {\n    return this.unitX * vector.unitX + this.unitY * vector.unitY;\n  }\n\n  isSimilar(vector: Vector, threshold: number) {\n    return this.computeSimilarity(vector) > threshold;\n  }\n}\n\nconst DirectionToVectorMappings = new Map<\n  Directions | DiagonalDirections,\n  Vector\n>([\n  [Directions.LEFT, new Vector(-1, 0)],\n  [Directions.RIGHT, new Vector(1, 0)],\n  [Directions.UP, new Vector(0, -1)],\n  [Directions.DOWN, new Vector(0, 1)],\n\n  [DiagonalDirections.UP_RIGHT, new Vector(1, -1)],\n  [DiagonalDirections.DOWN_RIGHT, new Vector(1, 1)],\n  [DiagonalDirections.UP_LEFT, new Vector(-1, -1)],\n  [DiagonalDirections.DOWN_LEFT, new Vector(-1, 1)],\n]);\n"],"mappings":";;AAAA,SAASA,kBAAkB,EAAEC,UAAU,QAAQ,kBAAkB;AACjE,SAASC,8BAA8B,QAAQ,cAAc;AAG7D,eAAe,MAAMC,MAAM,CAAC;EAO1BC,WAAWA,CAACC,CAAS,EAAEC,CAAS,EAAE;IAChC,IAAI,CAACD,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IAEV,IAAI,CAACC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACJ,CAAC,EAAE,IAAI,CAACC,CAAC,CAAC;IAC5C,MAAMI,qBAAqB,GACzB,IAAI,CAACH,UAAU,GAAGL,8BAA8B;IAElD,IAAI,CAACS,KAAK,GAAGD,qBAAqB,GAAG,IAAI,CAACL,CAAC,GAAG,IAAI,CAACE,UAAU,GAAG,CAAC;IACjE,IAAI,CAACK,KAAK,GAAGF,qBAAqB,GAAG,IAAI,CAACJ,CAAC,GAAG,IAAI,CAACC,UAAU,GAAG,CAAC;EACnE;EAEA,OAAOM,aAAaA,CAACC,SAA0C,EAAU;IACvE,OAAOC,yBAAyB,CAACC,GAAG,CAACF,SAAS,CAAC,IAAI,IAAIX,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EACrE;EAEA,OAAOc,YAAYA,CAACC,OAAuB,EAAEC,SAAiB,EAAE;IAC9D,MAAMC,QAAQ,GAAGF,OAAO,CAACG,WAAW,CAACF,SAAS,CAAC;IAC/C,OAAOC,QAAQ,GAAG,IAAIjB,MAAM,CAACiB,QAAQ,CAACf,CAAC,EAAEe,QAAQ,CAACd,CAAC,CAAC,GAAG,IAAI;EAC7D;EAEA,IAAWgB,SAASA,CAAA,EAAG;IACrB,OAAO,IAAI,CAACf,UAAU;EACxB;EAEAgB,iBAAiBA,CAACC,MAAc,EAAE;IAChC,OAAO,IAAI,CAACb,KAAK,GAAGa,MAAM,CAACb,KAAK,GAAG,IAAI,CAACC,KAAK,GAAGY,MAAM,CAACZ,KAAK;EAC9D;EAEAa,SAASA,CAACD,MAAc,EAAEE,SAAiB,EAAE;IAC3C,OAAO,IAAI,CAACH,iBAAiB,CAACC,MAAM,CAAC,GAAGE,SAAS;EACnD;AACF;AAEA,MAAMX,yBAAyB,GAAG,IAAIY,GAAG,CAGvC,CACA,CAAC1B,UAAU,CAAC2B,IAAI,EAAE,IAAIzB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACpC,CAACF,UAAU,CAAC4B,KAAK,EAAE,IAAI1B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACpC,CAACF,UAAU,CAAC6B,EAAE,EAAE,IAAI3B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAClC,CAACF,UAAU,CAAC8B,IAAI,EAAE,IAAI5B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAEnC,CAACH,kBAAkB,CAACgC,QAAQ,EAAE,IAAI7B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAChD,CAACH,kBAAkB,CAACiC,UAAU,EAAE,IAAI9B,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EACjD,CAACH,kBAAkB,CAACkC,OAAO,EAAE,IAAI/B,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAChD,CAACH,kBAAkB,CAACmC,SAAS,EAAE,IAAIhC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAClD,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\src\\\\screens\\\\auth\\\\OTPVerificationScreen.tsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useDispatch } from 'react-redux';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { useTranslation } from 'react-i18next';\nimport { loginSuccess } from '../../store/slices/authSlice';\nimport { apiService } from '../../services/apiService';\nimport { phoneSendCode, phoneConfirmCode, useEmailVerificationHandler, checkEmailVerified, sendEmailVerificationLink } from '../../services/firebaseAuth';\nimport { FirebaseRecaptchaVerifierModal } from 'expo-firebase-recaptcha';\nimport { firebaseApp } from '../../services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OTPVerificationScreen = () => {\n  const [otp, setOtp] = useState(['', '', '', '', '', '']);\n  const [loading, setLoading] = useState(false);\n  const [resendLoading, setResendLoading] = useState(false);\n  const [timer, setTimer] = useState(60);\n  const [canResend, setCanResend] = useState(false);\n  const [phoneConfirmation, setPhoneConfirmation] = useState(null);\n  const [emailVerified, setEmailVerified] = useState(false);\n  const dispatch = useDispatch();\n  const navigation = useNavigation();\n  const route = useRoute();\n  const {\n    t\n  } = useTranslation();\n  const {\n    handleEmailVerification: handleEmailLink\n  } = useEmailVerificationHandler();\n  const {\n    userData\n  } = route.params || {};\n  const registrationType = userData?.registrationType || 'email';\n  const recaptchaVerifier = useRef(null);\n  const {\n    width: screenWidth,\n    height: screenHeight\n  } = Dimensions.get('window');\n  const isTablet = screenWidth >= 768;\n  const isSmallPhone = screenWidth < 350;\n  const isLandscape = screenWidth > screenHeight;\n  const otpRefs = useRef([]);\n  useEffect(() => {\n    const initializeVerification = async () => {\n      if (registrationType === 'phone' && userData?.phone) {\n        try {\n          const confirmation = await phoneSendCode(userData.phone, recaptchaVerifier.current);\n          setPhoneConfirmation(confirmation);\n        } catch (error) {\n          console.error('Error sending phone OTP:', error);\n          Alert.alert('Error', 'Failed to send OTP to your phone number');\n        }\n      } else if (registrationType === 'email') {\n        try {\n          const verified = await checkEmailVerified(userData?.tempUser);\n          setEmailVerified(verified);\n        } catch (error) {\n          console.error('Error checking email verification:', error);\n        }\n      }\n    };\n    initializeVerification();\n    if (registrationType === 'phone') {\n      const interval = setInterval(() => {\n        setTimer(prev => {\n          if (prev <= 1) {\n            setCanResend(true);\n            clearInterval(interval);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [registrationType, userData]);\n  const handleOtpChange = (value, index) => {\n    const newOtp = [...otp];\n    newOtp[index] = value;\n    setOtp(newOtp);\n    if (value && index < 5) {\n      otpRefs.current[index + 1]?.focus();\n    }\n  };\n  const handleKeyPress = (e, index) => {\n    if (e.nativeEvent.key === 'Backspace' && !otp[index] && index > 0) {\n      otpRefs.current[index - 1]?.focus();\n    }\n  };\n  const handleVerifyOTP = async () => {\n    if (registrationType === 'phone') {\n      await handlePhoneVerification();\n    } else if (registrationType === 'email') {\n      await handleEmailVerification();\n    }\n  };\n  const handlePhoneVerification = async () => {\n    const otpCode = otp.join('');\n    if (otpCode.length !== 6) {\n      Alert.alert(t('common.error'), t('auth.enterValidOTP'));\n      return;\n    }\n    if (!phoneConfirmation) {\n      Alert.alert(t('common.error'), 'Phone verification not initialized');\n      return;\n    }\n    setLoading(true);\n    try {\n      const user = await phoneConfirmCode(phoneConfirmation, otpCode);\n      if (userData?.name && userData.name !== user.displayName) {\n        await user.updateProfile({\n          displayName: userData.name\n        });\n      }\n      if (userData?.email && userData.email !== user.email) {\n        await user.updateEmail(userData.email);\n      }\n      const res = await apiService.firebaseLoginUpsert();\n      if (res.success && res.data) {\n        const verifiedUserData = {\n          id: res.data.user.id,\n          name: res.data.user.name,\n          email: res.data.user.email,\n          phone: res.data.user.phone,\n          role: 'citizen'\n        };\n        dispatch(loginSuccess({\n          user: verifiedUserData,\n          token: await user.getIdToken()\n        }));\n        Alert.alert(t('common.success'), 'Phone number verified successfully!');\n        return;\n      }\n    } catch (error) {\n      console.error('Phone verification error:', error);\n      Alert.alert(t('common.error'), error.message || 'Phone verification failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEmailVerification = async () => {\n    setLoading(true);\n    try {\n      const verified = await checkEmailVerified(userData?.tempUser);\n      if (verified) {\n        setEmailVerified(true);\n        const res = await apiService.firebaseLoginUpsert();\n        if (res.success && res.data) {\n          const verifiedUserData = {\n            id: res.data.user.id,\n            name: res.data.user.name,\n            email: res.data.user.email,\n            phone: res.data.user.phone,\n            role: 'citizen'\n          };\n          dispatch(loginSuccess({\n            user: verifiedUserData,\n            token: await userData?.tempUser?.getIdToken()\n          }));\n          Alert.alert(t('common.success'), 'Email verified successfully!');\n          return;\n        }\n      } else {\n        Alert.alert(t('common.error'), 'Please check your email and click the verification link');\n      }\n    } catch (error) {\n      console.error('Email verification error:', error);\n      Alert.alert(t('common.error'), error.message || 'Email verification failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleResendOTP = async () => {\n    if (!canResend) return;\n    setResendLoading(true);\n    try {\n      if (registrationType === 'phone' && userData?.phone) {\n        const confirmation = await phoneSendCode(userData.phone, recaptchaVerifier.current);\n        setPhoneConfirmation(confirmation);\n        setTimer(60);\n        setCanResend(false);\n        setOtp(['', '', '', '', '', '']);\n        const interval = setInterval(() => {\n          setTimer(prev => {\n            if (prev <= 1) {\n              setCanResend(true);\n              clearInterval(interval);\n              return 0;\n            }\n            return prev - 1;\n          });\n        }, 1000);\n        Alert.alert(t('common.success'), 'OTP resent to your phone number');\n      } else if (registrationType === 'email') {\n        await sendEmailVerificationLink(userData?.tempUser);\n        Alert.alert(t('common.success'), 'Verification link resent to your email');\n      }\n    } catch (error) {\n      console.error('Resend error:', error);\n      Alert.alert(t('common.error'), error.message || 'Failed to resend verification');\n    } finally {\n      setResendLoading(false);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  return _jsxDEV(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxDEV(KeyboardAvoidingView, {\n      behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n      style: styles.keyboardView,\n      keyboardVerticalOffset: Platform.OS === 'ios' ? 0 : 20,\n      children: _jsxDEV(ScrollView, {\n        contentContainerStyle: [styles.scrollContent, {\n          paddingHorizontal: isTablet ? screenWidth * 0.15 : isSmallPhone ? 15 : 20,\n          paddingTop: isLandscape ? 10 : 20,\n          paddingBottom: isLandscape ? 10 : 20\n        }],\n        keyboardShouldPersistTaps: \"handled\",\n        showsVerticalScrollIndicator: false,\n        showsHorizontalScrollIndicator: false,\n        contentInsetAdjustmentBehavior: \"never\",\n        children: [_jsxDEV(View, {\n          style: styles.header,\n          accessible: true,\n          accessibilityRole: \"header\",\n          children: [_jsxDEV(Image, {\n            source: require('../../../assets/Jharkhand_Rajakiya_Chihna.png'),\n            style: styles.logo,\n            resizeMode: \"contain\",\n            accessible: true,\n            accessibilityLabel: \"Government of Jharkhand official emblem\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: [styles.title, {\n              fontSize: isTablet ? 28 : isSmallPhone ? 20 : 24\n            }],\n            accessible: true,\n            accessibilityRole: \"header\",\n            accessibilityLabel: \"Civic Issue Reporter - Main application title\",\n            children: \"Civic Issue Reporter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: [styles.subtitle, {\n              fontSize: isTablet ? 18 : isSmallPhone ? 14 : 16\n            }],\n            accessible: true,\n            accessibilityLabel: \"Government of Jharkhand\",\n            children: \"Government of Jharkhand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: [styles.form, {\n            maxWidth: isTablet ? 400 : '100%',\n            alignSelf: 'center',\n            padding: isSmallPhone ? 15 : 20,\n            marginHorizontal: isTablet ? 0 : 5\n          }],\n          children: [_jsxDEV(Text, {\n            style: [styles.formTitle, {\n              fontSize: isTablet ? 22 : isSmallPhone ? 18 : 20\n            }],\n            accessible: true,\n            accessibilityRole: \"header\",\n            accessibilityLabel: `Verify Your ${registrationType === 'phone' ? 'Phone' : 'Email'} - Verification form`,\n            children: registrationType === 'phone' ? 'Verify Your Phone Number' : 'Verify Your Email'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), _jsxDEV(Text, {\n            style: styles.description,\n            children: registrationType === 'phone' ? `We've sent an OTP to ${userData?.phone}` : `We've sent a verification link to ${userData?.email}. Please check your email and click the link to verify.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), registrationType === 'phone' && _jsxDEV(View, {\n            style: styles.otpContainer,\n            children: otp.map((digit, index) => _jsxDEV(TextInput, {\n              ref: ref => {\n                otpRefs.current[index] = ref;\n              },\n              style: [styles.otpInput, digit ? styles.otpInputFilled : null],\n              value: digit,\n              onChangeText: value => handleOtpChange(value, index),\n              onKeyPress: e => handleKeyPress(e, index),\n              keyboardType: \"numeric\",\n              maxLength: 1,\n              textAlign: \"center\",\n              accessible: true,\n              accessibilityLabel: `OTP digit ${index + 1}`,\n              accessibilityHint: \"Enter one digit of the OTP code\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 15\n          }, this), registrationType === 'email' && _jsxDEV(View, {\n            style: styles.emailVerificationContainer,\n            children: _jsxDEV(Text, {\n              style: styles.emailVerificationText,\n              children: emailVerified ? '✅ Email verified successfully!' : '📧 Please check your email and click the verification link'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: [styles.verifyButton, loading && styles.verifyButtonDisabled],\n            onPress: handleVerifyOTP,\n            disabled: loading,\n            accessible: true,\n            accessibilityRole: \"button\",\n            accessibilityLabel: loading ? \"Verifying, please wait\" : `Verify ${registrationType}`,\n            accessibilityHint: `Tap to verify your ${registrationType}`,\n            accessibilityState: {\n              disabled: loading\n            },\n            children: _jsxDEV(Text, {\n              style: styles.verifyButtonText,\n              children: loading ? t('common.loading') : `Verify ${registrationType === 'phone' ? 'OTP' : 'Email'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.resendContainer,\n            children: [_jsxDEV(Text, {\n              style: styles.resendText,\n              children: registrationType === 'phone' ? \"Didn't receive OTP?\" : \"Didn't receive email?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this), registrationType === 'phone' ? canResend ? _jsxDEV(TouchableOpacity, {\n              onPress: handleResendOTP,\n              disabled: resendLoading,\n              accessible: true,\n              accessibilityRole: \"button\",\n              accessibilityLabel: \"Resend OTP\",\n              accessibilityHint: \"Tap to resend the OTP code to your phone\",\n              children: _jsxDEV(Text, {\n                style: styles.resendLink,\n                children: resendLoading ? t('common.loading') : 'Resend OTP'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this) : _jsxDEV(Text, {\n              style: styles.timerText,\n              children: [\"Resend in \", formatTime(timer)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 19\n            }, this) : _jsxDEV(TouchableOpacity, {\n              onPress: handleResendOTP,\n              disabled: resendLoading,\n              accessible: true,\n              accessibilityRole: \"button\",\n              accessibilityLabel: \"Resend email\",\n              accessibilityHint: \"Tap to resend the verification link to your email\",\n              children: _jsxDEV(Text, {\n                style: styles.resendLink,\n                children: resendLoading ? t('common.loading') : 'Resend Email'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), _jsxDEV(View, {\n            style: styles.backContainer,\n            accessible: true,\n            accessibilityRole: \"text\",\n            accessibilityLabel: `Wrong ${registrationType}? Go back to registration`,\n            children: [_jsxDEV(Text, {\n              style: styles.backText,\n              children: [\"Wrong \", registrationType, \"? \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this), _jsxDEV(TouchableOpacity, {\n              onPress: () => navigation.goBack(),\n              accessible: true,\n              accessibilityRole: \"button\",\n              accessibilityLabel: \"Go back to registration\",\n              accessibilityHint: \"Tap to go back to the registration screen\",\n              children: _jsxDEV(Text, {\n                style: styles.backLink,\n                children: \"Go Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), registrationType === 'phone' && _jsxDEV(FirebaseRecaptchaVerifierModal, {\n      ref: recaptchaVerifier,\n      firebaseConfig: firebaseApp.options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f0f7f0'\n  },\n  keyboardView: {\n    flex: 1\n  },\n  scrollContent: {\n    flexGrow: 1,\n    justifyContent: 'center'\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: 15,\n    marginTop: 15\n  },\n  logo: {\n    width: 80,\n    height: 80,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#2E7D32',\n    marginTop: 10\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#666',\n    marginTop: 5\n  },\n  form: {\n    backgroundColor: 'white',\n    borderRadius: 24,\n    elevation: 12,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 6\n    },\n    shadowOpacity: 0.12,\n    shadowRadius: 16\n  },\n  formTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#333',\n    textAlign: 'center',\n    marginBottom: 15\n  },\n  description: {\n    fontSize: 14,\n    color: '#666',\n    textAlign: 'center',\n    marginBottom: 25,\n    lineHeight: 20\n  },\n  otpContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 25,\n    paddingHorizontal: 10\n  },\n  otpInput: {\n    width: 45,\n    height: 45,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 12,\n    backgroundColor: '#f9f9f9',\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  otpInputFilled: {\n    borderColor: '#2E7D32',\n    backgroundColor: '#f0f7f0'\n  },\n  verifyButton: {\n    backgroundColor: '#2E7D32',\n    paddingVertical: 12,\n    borderRadius: 12,\n    alignItems: 'center',\n    marginBottom: 15,\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    minHeight: 42\n  },\n  verifyButtonDisabled: {\n    backgroundColor: '#A5D6A7'\n  },\n  verifyButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  resendContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 15,\n    flexWrap: 'wrap'\n  },\n  resendText: {\n    color: '#424242',\n    fontSize: 14\n  },\n  resendLink: {\n    color: '#1B5E20',\n    fontWeight: 'bold',\n    fontSize: 14\n  },\n  timerText: {\n    color: '#666',\n    fontSize: 14,\n    fontWeight: '500'\n  },\n  backContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 10\n  },\n  backText: {\n    color: '#424242',\n    fontSize: 14\n  },\n  backLink: {\n    color: '#1B5E20',\n    fontWeight: 'bold'\n  },\n  emailVerificationContainer: {\n    backgroundColor: '#f0f7f0',\n    borderRadius: 8,\n    padding: 15,\n    marginBottom: 20,\n    borderWidth: 1,\n    borderColor: '#c8e6c9'\n  },\n  emailVerificationText: {\n    fontSize: 14,\n    color: '#2E7D32',\n    textAlign: 'center',\n    fontWeight: '500'\n  }\n});\nexport default OTPVerificationScreen;","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","StyleSheet","TextInput","TouchableOpacity","SafeAreaView","Alert","KeyboardAvoidingView","Platform","Image","ScrollView","Dimensions","useDispatch","useNavigation","useRoute","useTranslation","loginSuccess","apiService","phoneSendCode","phoneConfirmCode","useEmailVerificationHandler","checkEmailVerified","sendEmailVerificationLink","FirebaseRecaptchaVerifierModal","firebaseApp","jsxDEV","_jsxDEV","OTPVerificationScreen","otp","setOtp","loading","setLoading","resendLoading","setResendLoading","timer","setTimer","canResend","setCanResend","phoneConfirmation","setPhoneConfirmation","emailVerified","setEmailVerified","dispatch","navigation","route","t","handleEmailVerification","handleEmailLink","userData","params","registrationType","recaptchaVerifier","width","screenWidth","height","screenHeight","get","isTablet","isSmallPhone","isLandscape","otpRefs","initializeVerification","phone","confirmation","current","error","console","alert","verified","tempUser","interval","setInterval","prev","clearInterval","handleOtpChange","value","index","newOtp","focus","handleKeyPress","e","nativeEvent","key","handleVerifyOTP","handlePhoneVerification","otpCode","join","length","user","name","displayName","updateProfile","email","updateEmail","res","firebaseLoginUpsert","success","data","verifiedUserData","id","role","token","getIdToken","message","handleResendOTP","formatTime","seconds","mins","Math","floor","secs","toString","padStart","style","styles","container","children","behavior","OS","keyboardView","keyboardVerticalOffset","contentContainerStyle","scrollContent","paddingHorizontal","paddingTop","paddingBottom","keyboardShouldPersistTaps","showsVerticalScrollIndicator","showsHorizontalScrollIndicator","contentInsetAdjustmentBehavior","header","accessible","accessibilityRole","source","require","logo","resizeMode","accessibilityLabel","fileName","_jsxFileName","lineNumber","columnNumber","title","fontSize","subtitle","form","maxWidth","alignSelf","padding","marginHorizontal","formTitle","description","otpContainer","map","digit","ref","otpInput","otpInputFilled","onChangeText","onKeyPress","keyboardType","maxLength","textAlign","accessibilityHint","emailVerificationContainer","emailVerificationText","verifyButton","verifyButtonDisabled","onPress","disabled","accessibilityState","verifyButtonText","resendContainer","resendText","resendLink","timerText","backContainer","backText","goBack","backLink","firebaseConfig","options","create","flex","backgroundColor","flexGrow","justifyContent","alignItems","marginBottom","marginTop","fontWeight","color","borderRadius","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","lineHeight","flexDirection","borderWidth","borderColor","paddingVertical","minHeight","flexWrap"],"sources":["C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/src/screens/auth/OTPVerificationScreen.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  Alert,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  Image,\r\n  ScrollView,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigation, useRoute } from '@react-navigation/native';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { loginSuccess } from '../../store/slices/authSlice';\r\nimport { tokenStorage } from '../../utils/tokenStorage';\r\nimport { apiService } from '../../services/apiService';\r\nimport { \r\n  phoneSendCode, \r\n  phoneConfirmCode, \r\n  useEmailVerificationHandler, \r\n  checkEmailVerified,\r\n  signOutFirebase,\r\n  sendEmailVerificationLink\r\n} from '../../services/firebaseAuth';\r\nimport { FirebaseRecaptchaVerifierModal } from 'expo-firebase-recaptcha';\r\nimport { firebaseApp } from '../../services/firebase';\r\n\r\nconst OTPVerificationScreen = () => {\r\n  const [otp, setOtp] = useState(['', '', '', '', '', '']);\r\n  const [loading, setLoading] = useState(false);\r\n  const [resendLoading, setResendLoading] = useState(false);\r\n  const [timer, setTimer] = useState(60);\r\n  const [canResend, setCanResend] = useState(false);\r\n  const [phoneConfirmation, setPhoneConfirmation] = useState<any>(null);\r\n  const [emailVerified, setEmailVerified] = useState(false);\r\n  \r\n  const dispatch = useDispatch();\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n  const { t } = useTranslation();\r\n  const { handleEmailVerification: handleEmailLink } = useEmailVerificationHandler();\r\n\r\n  // Get user data from registration\r\n  const { userData } = (route.params as any) || {};\r\n  const registrationType = userData?.registrationType || 'email';\r\n  const recaptchaVerifier = useRef<any>(null);\r\n\r\n  // Get screen dimensions for responsive design\r\n  const { width: screenWidth, height: screenHeight } = Dimensions.get('window');\r\n  const isTablet = screenWidth >= 768;\r\n  const isSmallPhone = screenWidth < 350;\r\n  const isLandscape = screenWidth > screenHeight;\r\n\r\n  // Refs for OTP inputs\r\n  const otpRefs = useRef<(TextInput | null)[]>([]);\r\n\r\n  useEffect(() => {\r\n    // Initialize verification based on registration type\r\n    const initializeVerification = async () => {\r\n      if (registrationType === 'phone' && userData?.phone) {\r\n        try {\r\n          const confirmation = await phoneSendCode(userData.phone, recaptchaVerifier.current);\r\n          setPhoneConfirmation(confirmation);\r\n        } catch (error) {\r\n          console.error('Error sending phone OTP:', error);\r\n          Alert.alert('Error', 'Failed to send OTP to your phone number');\r\n        }\r\n      } else if (registrationType === 'email') {\r\n        // For email, check if already verified\r\n        try {\r\n          const verified = await checkEmailVerified(userData?.tempUser);\r\n          setEmailVerified(verified);\r\n        } catch (error) {\r\n          console.error('Error checking email verification:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    initializeVerification();\r\n\r\n    // Start countdown timer for phone OTP\r\n    if (registrationType === 'phone') {\r\n      const interval = setInterval(() => {\r\n        setTimer((prev) => {\r\n          if (prev <= 1) {\r\n            setCanResend(true);\r\n            clearInterval(interval);\r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [registrationType, userData]);\r\n\r\n  const handleOtpChange = (value: string, index: number) => {\r\n    const newOtp = [...otp];\r\n    newOtp[index] = value;\r\n    setOtp(newOtp);\r\n\r\n    // Auto-focus next input\r\n    if (value && index < 5) {\r\n      otpRefs.current[index + 1]?.focus();\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: any, index: number) => {\r\n    // Handle backspace\r\n    if (e.nativeEvent.key === 'Backspace' && !otp[index] && index > 0) {\r\n      otpRefs.current[index - 1]?.focus();\r\n    }\r\n  };\r\n\r\n  const handleVerifyOTP = async () => {\r\n    if (registrationType === 'phone') {\r\n      await handlePhoneVerification();\r\n    } else if (registrationType === 'email') {\r\n      await handleEmailVerification();\r\n    }\r\n  };\r\n\r\n  const handlePhoneVerification = async () => {\r\n    const otpCode = otp.join('');\r\n    \r\n    if (otpCode.length !== 6) {\r\n      Alert.alert(t('common.error'), t('auth.enterValidOTP'));\r\n      return;\r\n    }\r\n\r\n    if (!phoneConfirmation) {\r\n      Alert.alert(t('common.error'), 'Phone verification not initialized');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const user = await phoneConfirmCode(phoneConfirmation, otpCode);\r\n      \r\n      // Update user profile with real email if provided\r\n      // Firebase's updateProfile does not support updating email, must use updateEmail separately\r\n      if (userData?.name && userData.name !== user.displayName) {\r\n        await user.updateProfile({ displayName: userData.name });\r\n      }\r\n      if (userData?.email && userData.email !== user.email) {\r\n        await user.updateEmail(userData.email);\r\n      }\r\n\r\n      // Upsert user in backend\r\n      const res = await apiService.firebaseLoginUpsert();\r\n      \r\n      if (res.success && res.data) {\r\n        const verifiedUserData = {\r\n          id: res.data.user.id,\r\n          name: res.data.user.name,\r\n          email: res.data.user.email,\r\n          phone: res.data.user.phone,\r\n          role: 'citizen' as const,\r\n        };\r\n\r\n        dispatch(loginSuccess({\r\n          user: verifiedUserData,\r\n          token: await user.getIdToken(),\r\n        }));\r\n        \r\n        Alert.alert(t('common.success'), 'Phone number verified successfully!');\r\n        return;\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Phone verification error:', error);\r\n      Alert.alert(t('common.error'), error.message || 'Phone verification failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEmailVerification = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Check if email is verified\r\n      const verified = await checkEmailVerified(userData?.tempUser);\r\n      \r\n      if (verified) {\r\n        setEmailVerified(true);\r\n        \r\n        // Upsert user in backend\r\n        const res = await apiService.firebaseLoginUpsert();\r\n        \r\n        if (res.success && res.data) {\r\n          const verifiedUserData = {\r\n            id: res.data.user.id,\r\n            name: res.data.user.name,\r\n            email: res.data.user.email,\r\n            phone: res.data.user.phone,\r\n            role: 'citizen' as const,\r\n          };\r\n\r\n          dispatch(loginSuccess({\r\n            user: verifiedUserData,\r\n            token: await userData?.tempUser?.getIdToken(),\r\n          }));\r\n          \r\n          Alert.alert(t('common.success'), 'Email verified successfully!');\r\n          return;\r\n        }\r\n      } else {\r\n        Alert.alert(t('common.error'), 'Please check your email and click the verification link');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Email verification error:', error);\r\n      Alert.alert(t('common.error'), error.message || 'Email verification failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResendOTP = async () => {\r\n    if (!canResend) return;\r\n\r\n    setResendLoading(true);\r\n    \r\n    try {\r\n      if (registrationType === 'phone' && userData?.phone) {\r\n        // Resend phone OTP\r\n        const confirmation = await phoneSendCode(userData.phone, recaptchaVerifier.current);\r\n        setPhoneConfirmation(confirmation);\r\n        \r\n        // Reset timer and disable resend\r\n        setTimer(60);\r\n        setCanResend(false);\r\n        setOtp(['', '', '', '', '', '']);\r\n        \r\n        // Restart countdown\r\n        const interval = setInterval(() => {\r\n          setTimer((prev) => {\r\n            if (prev <= 1) {\r\n              setCanResend(true);\r\n              clearInterval(interval);\r\n              return 0;\r\n            }\r\n            return prev - 1;\r\n          });\r\n        }, 1000);\r\n\r\n        Alert.alert(t('common.success'), 'OTP resent to your phone number');\r\n      } else if (registrationType === 'email') {\r\n        // Resend email verification link\r\n        await sendEmailVerificationLink(userData?.tempUser);\r\n        Alert.alert(t('common.success'), 'Verification link resent to your email');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Resend error:', error);\r\n      Alert.alert(t('common.error'), error.message || 'Failed to resend verification');\r\n    } finally {\r\n      setResendLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds: number) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <KeyboardAvoidingView \r\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n        style={styles.keyboardView}\r\n        keyboardVerticalOffset={Platform.OS === 'ios' ? 0 : 20}\r\n      >\r\n        <ScrollView \r\n          contentContainerStyle={[\r\n            styles.scrollContent,\r\n            {\r\n              paddingHorizontal: isTablet ? screenWidth * 0.15 : isSmallPhone ? 15 : 20,\r\n              paddingTop: isLandscape ? 10 : 20,\r\n              paddingBottom: isLandscape ? 10 : 20,\r\n            }\r\n          ]}\r\n          keyboardShouldPersistTaps=\"handled\"\r\n          showsVerticalScrollIndicator={false}\r\n          showsHorizontalScrollIndicator={false}\r\n          contentInsetAdjustmentBehavior=\"never\"\r\n        >\r\n          {/* Header */}\r\n          <View style={styles.header} accessible={true} accessibilityRole=\"header\">\r\n            <Image \r\n              source={require('../../../assets/Jharkhand_Rajakiya_Chihna.png')} \r\n              style={styles.logo}\r\n              resizeMode=\"contain\"\r\n              accessible={true}\r\n              accessibilityLabel=\"Government of Jharkhand official emblem\"\r\n            />\r\n            <Text \r\n              style={[\r\n                styles.title,\r\n                {\r\n                  fontSize: isTablet ? 28 : isSmallPhone ? 20 : 24,\r\n                }\r\n              ]}\r\n              accessible={true}\r\n              accessibilityRole=\"header\"\r\n              accessibilityLabel=\"Civic Issue Reporter - Main application title\"\r\n            >\r\n              Civic Issue Reporter\r\n            </Text>\r\n            <Text \r\n              style={[\r\n                styles.subtitle,\r\n                {\r\n                  fontSize: isTablet ? 18 : isSmallPhone ? 14 : 16,\r\n                }\r\n              ]}\r\n              accessible={true}\r\n              accessibilityLabel=\"Government of Jharkhand\"\r\n            >\r\n              Government of Jharkhand\r\n            </Text>\r\n          </View>\r\n\r\n          {/* OTP Verification Form */}\r\n          <View style={[\r\n            styles.form,\r\n            {\r\n              maxWidth: isTablet ? 400 : '100%',\r\n              alignSelf: 'center',\r\n              padding: isSmallPhone ? 15 : 20,\r\n              marginHorizontal: isTablet ? 0 : 5,\r\n            }\r\n          ]}>\r\n            <Text \r\n              style={[\r\n                styles.formTitle,\r\n                {\r\n                  fontSize: isTablet ? 22 : isSmallPhone ? 18 : 20,\r\n                }\r\n              ]}\r\n              accessible={true}\r\n              accessibilityRole=\"header\"\r\n              accessibilityLabel={`Verify Your ${registrationType === 'phone' ? 'Phone' : 'Email'} - Verification form`}\r\n            >\r\n              {registrationType === 'phone' ? 'Verify Your Phone Number' : 'Verify Your Email'}\r\n            </Text>\r\n\r\n            <Text style={styles.description}>\r\n              {registrationType === 'phone' \r\n                ? `We've sent an OTP to ${userData?.phone}` \r\n                : `We've sent a verification link to ${userData?.email}. Please check your email and click the link to verify.`\r\n              }\r\n            </Text>\r\n\r\n            {/* OTP Input Fields - Only show for phone verification */}\r\n            {registrationType === 'phone' && (\r\n              <View style={styles.otpContainer}>\r\n                {otp.map((digit, index) => (\r\n                  <TextInput\r\n                    key={index}\r\n                    ref={(ref) => { otpRefs.current[index] = ref; }}\r\n                    style={[\r\n                      styles.otpInput,\r\n                      digit ? styles.otpInputFilled : null\r\n                    ]}\r\n                    value={digit}\r\n                    onChangeText={(value) => handleOtpChange(value, index)}\r\n                    onKeyPress={(e) => handleKeyPress(e, index)}\r\n                    keyboardType=\"numeric\"\r\n                    maxLength={1}\r\n                    textAlign=\"center\"\r\n                    accessible={true}\r\n                    accessibilityLabel={`OTP digit ${index + 1}`}\r\n                    accessibilityHint=\"Enter one digit of the OTP code\"\r\n                  />\r\n                ))}\r\n              </View>\r\n            )}\r\n\r\n            {/* Email verification status */}\r\n            {registrationType === 'email' && (\r\n              <View style={styles.emailVerificationContainer}>\r\n                <Text style={styles.emailVerificationText}>\r\n                  {emailVerified \r\n                    ? '✅ Email verified successfully!' \r\n                    : '📧 Please check your email and click the verification link'\r\n                  }\r\n                </Text>\r\n              </View>\r\n            )}\r\n\r\n            <TouchableOpacity \r\n              style={[styles.verifyButton, loading && styles.verifyButtonDisabled]}\r\n              onPress={handleVerifyOTP}\r\n              disabled={loading}\r\n              accessible={true}\r\n              accessibilityRole=\"button\"\r\n              accessibilityLabel={loading ? \"Verifying, please wait\" : `Verify ${registrationType}`}\r\n              accessibilityHint={`Tap to verify your ${registrationType}`}\r\n              accessibilityState={{ disabled: loading }}\r\n            >\r\n              <Text style={styles.verifyButtonText}>\r\n                {loading ? t('common.loading') : `Verify ${registrationType === 'phone' ? 'OTP' : 'Email'}`}\r\n              </Text>\r\n            </TouchableOpacity>\r\n\r\n            {/* Resend verification */}\r\n            <View style={styles.resendContainer}>\r\n              <Text style={styles.resendText}>\r\n                {registrationType === 'phone' ? \"Didn't receive OTP?\" : \"Didn't receive email?\"} \r\n              </Text>\r\n              {registrationType === 'phone' ? (\r\n                canResend ? (\r\n                  <TouchableOpacity \r\n                    onPress={handleResendOTP}\r\n                    disabled={resendLoading}\r\n                    accessible={true}\r\n                    accessibilityRole=\"button\"\r\n                    accessibilityLabel=\"Resend OTP\"\r\n                    accessibilityHint=\"Tap to resend the OTP code to your phone\"\r\n                  >\r\n                    <Text style={styles.resendLink}>\r\n                      {resendLoading ? t('common.loading') : 'Resend OTP'}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                ) : (\r\n                  <Text style={styles.timerText}>\r\n                    Resend in {formatTime(timer)}\r\n                  </Text>\r\n                )\r\n              ) : (\r\n                <TouchableOpacity \r\n                  onPress={handleResendOTP}\r\n                  disabled={resendLoading}\r\n                  accessible={true}\r\n                  accessibilityRole=\"button\"\r\n                  accessibilityLabel=\"Resend email\"\r\n                  accessibilityHint=\"Tap to resend the verification link to your email\"\r\n                >\r\n                  <Text style={styles.resendLink}>\r\n                    {resendLoading ? t('common.loading') : 'Resend Email'}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n\r\n            {/* Back to Register Link */}\r\n            <View \r\n              style={styles.backContainer}\r\n              accessible={true}\r\n              accessibilityRole=\"text\"\r\n              accessibilityLabel={`Wrong ${registrationType}? Go back to registration`}\r\n            >\r\n              <Text style={styles.backText}>Wrong {registrationType}? </Text>\r\n              <TouchableOpacity \r\n                onPress={() => navigation.goBack()}\r\n                accessible={true}\r\n                accessibilityRole=\"button\"\r\n                accessibilityLabel=\"Go back to registration\"\r\n                accessibilityHint=\"Tap to go back to the registration screen\"\r\n              >\r\n                <Text style={styles.backLink}>Go Back</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </KeyboardAvoidingView>\r\n\r\n      {/* Firebase reCAPTCHA Modal for phone verification */}\r\n      {registrationType === 'phone' && (\r\n        <FirebaseRecaptchaVerifierModal\r\n          ref={recaptchaVerifier}\r\n          firebaseConfig={firebaseApp.options as any}\r\n        />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f0f7f0',\r\n  },\r\n  keyboardView: {\r\n    flex: 1,\r\n  },\r\n  scrollContent: {\r\n    flexGrow: 1,\r\n    justifyContent: 'center',\r\n  },\r\n  header: {\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    marginTop: 15,\r\n  },\r\n  logo: {\r\n    width: 80,\r\n    height: 80,\r\n    marginBottom: 10,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#2E7D32',\r\n    marginTop: 10,\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    color: '#666',\r\n    marginTop: 5,\r\n  },\r\n  form: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 24,\r\n    elevation: 12,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 6 },\r\n    shadowOpacity: 0.12,\r\n    shadowRadius: 16,\r\n  },\r\n  formTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n    textAlign: 'center',\r\n    marginBottom: 15,\r\n  },\r\n  description: {\r\n    fontSize: 14,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n    marginBottom: 25,\r\n    lineHeight: 20,\r\n  },\r\n  otpContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 25,\r\n    paddingHorizontal: 10,\r\n  },\r\n  otpInput: {\r\n    width: 45,\r\n    height: 45,\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderRadius: 12,\r\n    backgroundColor: '#f9f9f9',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#333',\r\n  },\r\n  otpInputFilled: {\r\n    borderColor: '#2E7D32',\r\n    backgroundColor: '#f0f7f0',\r\n  },\r\n  verifyButton: {\r\n    backgroundColor: '#2E7D32',\r\n    paddingVertical: 12,\r\n    borderRadius: 12,\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    elevation: 3,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    minHeight: 42,\r\n  },\r\n  verifyButtonDisabled: {\r\n    backgroundColor: '#A5D6A7',\r\n  },\r\n  verifyButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  resendContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n    flexWrap: 'wrap',\r\n  },\r\n  resendText: {\r\n    color: '#424242',\r\n    fontSize: 14,\r\n  },\r\n  resendLink: {\r\n    color: '#1B5E20',\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n  },\r\n  timerText: {\r\n    color: '#666',\r\n    fontSize: 14,\r\n    fontWeight: '500',\r\n  },\r\n  backContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  backText: {\r\n    color: '#424242',\r\n    fontSize: 14,\r\n  },\r\n  backLink: {\r\n    color: '#1B5E20',\r\n    fontWeight: 'bold',\r\n  },\r\n  // Email verification styles\r\n  emailVerificationContainer: {\r\n    backgroundColor: '#f0f7f0',\r\n    borderRadius: 8,\r\n    padding: 15,\r\n    marginBottom: 20,\r\n    borderWidth: 1,\r\n    borderColor: '#c8e6c9',\r\n  },\r\n  emailVerificationText: {\r\n    fontSize: 14,\r\n    color: '#2E7D32',\r\n    textAlign: 'center',\r\n    fontWeight: '500',\r\n  },\r\n});\r\n\r\nexport default OTPVerificationScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
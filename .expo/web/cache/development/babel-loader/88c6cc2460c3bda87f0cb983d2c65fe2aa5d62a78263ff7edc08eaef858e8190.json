{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\component\\\\LayoutAnimationConfig.js\";\nimport { Children, Component, createContext, useEffect, useRef } from 'react';\nimport { setShouldAnimateExitingForTag } from \"../core.js\";\nimport { findNodeHandle } from '../platformFunctions/findNodeHandle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SkipEnteringContext = createContext(null);\nfunction SkipEntering(props) {\n  const skipValueRef = useRef(props.shouldSkip);\n  useEffect(() => {\n    skipValueRef.current = false;\n  }, [skipValueRef]);\n  return _jsxDEV(SkipEnteringContext, {\n    value: skipValueRef,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n}\nexport class LayoutAnimationConfig extends Component {\n  getMaybeWrappedChildren() {\n    return Children.count(this.props.children) > 1 && this.props.skipExiting ? Children.map(this.props.children, child => _jsxDEV(LayoutAnimationConfig, {\n      skipExiting: true,\n      children: child\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 123\n    }, this)) : this.props.children;\n  }\n  setShouldAnimateExiting() {\n    if (Children.count(this.props.children) === 1) {\n      const tag = findNodeHandle(this);\n      if (tag) {\n        setShouldAnimateExitingForTag(tag, !this.props.skipExiting);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (this.props.skipExiting !== undefined) {\n      this.setShouldAnimateExiting();\n    }\n  }\n  render() {\n    const children = this.getMaybeWrappedChildren();\n    if (this.props.skipEntering === undefined) {\n      return children;\n    }\n    return _jsxDEV(SkipEntering, {\n      shouldSkip: this.props.skipEntering,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n}","map":{"version":3,"names":["_jsxFileName","Children","Component","createContext","useEffect","useRef","setShouldAnimateExitingForTag","findNodeHandle","jsxDEV","_jsxDEV","SkipEnteringContext","SkipEntering","props","skipValueRef","shouldSkip","current","value","children","fileName","lineNumber","columnNumber","LayoutAnimationConfig","getMaybeWrappedChildren","count","skipExiting","map","child","setShouldAnimateExiting","tag","componentWillUnmount","undefined","render","skipEntering"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\component\\LayoutAnimationConfig.tsx"],"sourcesContent":["'use strict';\nimport type { ReactNode } from 'react';\nimport { Children, Component, createContext, useEffect, useRef } from 'react';\n\nimport { setShouldAnimateExitingForTag } from '../core';\nimport { findNodeHandle } from '../platformFunctions/findNodeHandle';\n\nexport const SkipEnteringContext =\n  createContext<React.RefObject<boolean> | null>(null);\n\n// skipEntering - don't animate entering of children on wrapper mount\n// skipExiting - don't animate exiting of children on wrapper unmount\ninterface LayoutAnimationConfigProps {\n  skipEntering?: boolean;\n  skipExiting?: boolean;\n  children: ReactNode;\n}\n\nfunction SkipEntering(props: { shouldSkip: boolean; children: ReactNode }) {\n  const skipValueRef = useRef(props.shouldSkip);\n\n  useEffect(() => {\n    skipValueRef.current = false;\n  }, [skipValueRef]);\n\n  return (\n    <SkipEnteringContext value={skipValueRef}>\n      {props.children}\n    </SkipEnteringContext>\n  );\n}\n\n// skipExiting (unlike skipEntering) cannot be done by conditionally\n// configuring the animation in `createAnimatedComponent`, since at this stage\n// we don't know if the wrapper is going to be unmounted or not.\n// That's why we need to pass the skipExiting flag to the native side\n// when the wrapper is unmounted to prevent the animation.\n// Since `ReactNode` can be a list of nodes, we wrap every child with our wrapper\n// so we are able to access its tag with `findNodeHandle`.\n/**\n * A component that lets you skip entering and exiting animations.\n *\n * @param skipEntering - A boolean indicating whether children's entering\n *   animations should be skipped when `LayoutAnimationConfig` is mounted.\n * @param skipExiting - A boolean indicating whether children's exiting\n *   animations should be skipped when LayoutAnimationConfig is unmounted.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/layout-animations/layout-animation-config/\n */\nexport class LayoutAnimationConfig extends Component<LayoutAnimationConfigProps> {\n  getMaybeWrappedChildren() {\n    return Children.count(this.props.children) > 1 && this.props.skipExiting\n      ? Children.map(this.props.children, (child) => (\n          <LayoutAnimationConfig skipExiting>{child}</LayoutAnimationConfig>\n        ))\n      : this.props.children;\n  }\n\n  setShouldAnimateExiting() {\n    if (Children.count(this.props.children) === 1) {\n      const tag = findNodeHandle(this);\n      if (tag) {\n        setShouldAnimateExitingForTag(tag, !this.props.skipExiting);\n      }\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.props.skipExiting !== undefined) {\n      this.setShouldAnimateExiting();\n    }\n  }\n\n  render(): ReactNode {\n    const children = this.getMaybeWrappedChildren();\n\n    if (this.props.skipEntering === undefined) {\n      return children;\n    }\n\n    return (\n      <SkipEntering shouldSkip={this.props.skipEntering}>\n        {children}\n      </SkipEntering>\n    );\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;AAEZ,SAASC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAE7E,SAASC,6BAA6B,QAAQ,YAAS;AACvD,SAASC,cAAc,QAAQ,qCAAqC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpE,OAAO,MAAMC,mBAAmB,GAC9BP,aAAa,CAAkC,IAAI,CAAC;AAUtD,SAASQ,YAAYA,CAACC,KAAmD,EAAE;EACzE,MAAMC,YAAY,GAAGR,MAAM,CAACO,KAAK,CAACE,UAAU,CAAC;EAE7CV,SAAS,CAAC,MAAM;IACdS,YAAY,CAACE,OAAO,GAAG,KAAK;EAC9B,CAAC,EAAE,CAACF,YAAY,CAAC,CAAC;EAElB,OACEJ,OAAA,CAACC,mBAAmB;IAACM,KAAK,EAAEH,YAAa;IAAAI,QAAA,EACtCL,KAAK,CAACK;EAAQ;IAAAC,QAAA,EAAAlB,YAAA;IAAAmB,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAE1B;AAkBA,OAAO,MAAMC,qBAAqB,SAASnB,SAAS,CAA6B;EAC/EoB,uBAAuBA,CAAA,EAAG;IACxB,OAAOrB,QAAQ,CAACsB,KAAK,CAAC,IAAI,CAACX,KAAK,CAACK,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI,CAACL,KAAK,CAACY,WAAW,GACpEvB,QAAQ,CAACwB,GAAG,CAAC,IAAI,CAACb,KAAK,CAACK,QAAQ,EAAGS,KAAK,IACtCjB,OAAA,CAACY,qBAAqB;MAACG,WAAW;MAAAP,QAAA,EAAES;IAAK;MAAAR,QAAA,EAAAlB,YAAA;MAAAmB,UAAA;MAAAC,YAAA;IAAA,OAAwB,CAClE,CAAC,GACF,IAAI,CAACR,KAAK,CAACK,QAAQ;EACzB;EAEAU,uBAAuBA,CAAA,EAAG;IACxB,IAAI1B,QAAQ,CAACsB,KAAK,CAAC,IAAI,CAACX,KAAK,CAACK,QAAQ,CAAC,KAAK,CAAC,EAAE;MAC7C,MAAMW,GAAG,GAAGrB,cAAc,CAAC,IAAI,CAAC;MAChC,IAAIqB,GAAG,EAAE;QACPtB,6BAA6B,CAACsB,GAAG,EAAE,CAAC,IAAI,CAAChB,KAAK,CAACY,WAAW,CAAC;MAC7D;IACF;EACF;EAEAK,oBAAoBA,CAAA,EAAS;IAC3B,IAAI,IAAI,CAACjB,KAAK,CAACY,WAAW,KAAKM,SAAS,EAAE;MACxC,IAAI,CAACH,uBAAuB,CAAC,CAAC;IAChC;EACF;EAEAI,MAAMA,CAAA,EAAc;IAClB,MAAMd,QAAQ,GAAG,IAAI,CAACK,uBAAuB,CAAC,CAAC;IAE/C,IAAI,IAAI,CAACV,KAAK,CAACoB,YAAY,KAAKF,SAAS,EAAE;MACzC,OAAOb,QAAQ;IACjB;IAEA,OACER,OAAA,CAACE,YAAY;MAACG,UAAU,EAAE,IAAI,CAACF,KAAK,CAACoB,YAAa;MAAAf,QAAA,EAC/CA;IAAQ;MAAAC,QAAA,EAAAlB,YAAA;MAAAmB,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEnB;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
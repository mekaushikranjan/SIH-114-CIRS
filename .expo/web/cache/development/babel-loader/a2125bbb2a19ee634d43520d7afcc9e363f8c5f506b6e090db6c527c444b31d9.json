{"ast":null,"code":"'use strict';\n\nimport { ReanimatedError } from \"../../../../common/index.js\";\nimport { MILLISECONDS_REGEX, SECONDS_REGEX, VALID_PREDEFINED_TIMING_FUNCTIONS } from \"../../../constants/index.js\";\nimport { isPredefinedTimingFunction } from \"../../../utils/index.js\";\nexport const ERROR_MESSAGES = {\n  invalidDelay: timeUnit => `Invalid delay \"${timeUnit}\". Expected a number, \"ms\", or \"s\".`,\n  invalidDuration: duration => `Invalid duration \"${duration}\". Expected a number, \"ms\", or \"s\".`,\n  negativeDuration: duration => `Duration cannot be negative, received \"${duration}\".`,\n  invalidPredefinedTimingFunction: timingFunction => `Invalid predefined timing function \"${timingFunction}\". Supported values are: ${VALID_PREDEFINED_TIMING_FUNCTIONS.join(', ')}.`,\n  invalidParametrizedTimingFunction: timingFunction => `Invalid parametrized timing function \"${timingFunction?.toString()}\".`\n};\nfunction normalizeTimeUnit(timeUnit) {\n  if (typeof timeUnit === 'number') {\n    return timeUnit;\n  } else if (MILLISECONDS_REGEX.test(timeUnit)) {\n    return parseInt(timeUnit, 10);\n  } else if (SECONDS_REGEX.test(timeUnit)) {\n    return parseFloat(timeUnit) * 1000;\n  }\n  return null;\n}\nexport function normalizeDelay(delay = 0) {\n  const delayMs = normalizeTimeUnit(delay);\n  if (delayMs === null) {\n    throw new ReanimatedError(ERROR_MESSAGES.invalidDelay(delay));\n  }\n  return delayMs;\n}\nexport function normalizeDuration(duration = 0) {\n  const durationMs = normalizeTimeUnit(duration);\n  if (durationMs === null) {\n    throw new ReanimatedError(ERROR_MESSAGES.invalidDuration(duration));\n  } else if (durationMs < 0) {\n    throw new ReanimatedError(ERROR_MESSAGES.negativeDuration(duration));\n  }\n  return durationMs;\n}\nexport function normalizeTimingFunction(timingFunction = 'ease') {\n  if (typeof timingFunction === 'string') {\n    if (!isPredefinedTimingFunction(timingFunction)) {\n      throw new ReanimatedError(ERROR_MESSAGES.invalidPredefinedTimingFunction(timingFunction));\n    }\n    return timingFunction;\n  }\n  if (!timingFunction.normalize || typeof timingFunction.normalize !== 'function') {\n    throw new ReanimatedError(ERROR_MESSAGES.invalidParametrizedTimingFunction(timingFunction));\n  }\n  return timingFunction.normalize();\n}","map":{"version":3,"names":["ReanimatedError","MILLISECONDS_REGEX","SECONDS_REGEX","VALID_PREDEFINED_TIMING_FUNCTIONS","isPredefinedTimingFunction","ERROR_MESSAGES","invalidDelay","timeUnit","invalidDuration","duration","negativeDuration","invalidPredefinedTimingFunction","timingFunction","join","invalidParametrizedTimingFunction","toString","normalizeTimeUnit","test","parseInt","parseFloat","normalizeDelay","delay","delayMs","normalizeDuration","durationMs","normalizeTimingFunction","normalize"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\css\\native\\normalization\\common\\settings.ts"],"sourcesContent":["'use strict';\nimport { ReanimatedError } from '../../../../common';\nimport {\n  MILLISECONDS_REGEX,\n  SECONDS_REGEX,\n  VALID_PREDEFINED_TIMING_FUNCTIONS,\n} from '../../../constants';\nimport type {\n  CSSTimingFunction,\n  NormalizedCSSTimingFunction,\n  PredefinedTimingFunction,\n} from '../../../easing';\nimport type { TimeUnit } from '../../../types';\nimport { isPredefinedTimingFunction } from '../../../utils';\n\nexport const ERROR_MESSAGES = {\n  invalidDelay: (timeUnit: TimeUnit) =>\n    `Invalid delay \"${timeUnit}\". Expected a number, \"ms\", or \"s\".`,\n  invalidDuration: (duration: TimeUnit) =>\n    `Invalid duration \"${duration}\". Expected a number, \"ms\", or \"s\".`,\n  negativeDuration: (duration: TimeUnit) =>\n    `Duration cannot be negative, received \"${duration}\".`,\n  invalidPredefinedTimingFunction: (timingFunction: PredefinedTimingFunction) =>\n    `Invalid predefined timing function \"${timingFunction}\". Supported values are: ${VALID_PREDEFINED_TIMING_FUNCTIONS.join(', ')}.`,\n  invalidParametrizedTimingFunction: (timingFunction: CSSTimingFunction) =>\n    `Invalid parametrized timing function \"${timingFunction?.toString()}\".`,\n};\n\nfunction normalizeTimeUnit(timeUnit: TimeUnit): number | null {\n  if (typeof timeUnit === 'number') {\n    return timeUnit;\n  } else if (MILLISECONDS_REGEX.test(timeUnit)) {\n    return parseInt(timeUnit, 10);\n  } else if (SECONDS_REGEX.test(timeUnit)) {\n    return parseFloat(timeUnit) * 1000;\n  }\n  return null;\n}\n\nexport function normalizeDelay(delay: TimeUnit = 0): number {\n  const delayMs = normalizeTimeUnit(delay);\n  if (delayMs === null) {\n    throw new ReanimatedError(ERROR_MESSAGES.invalidDelay(delay));\n  }\n  return delayMs;\n}\n\nexport function normalizeDuration(duration: TimeUnit = 0): number {\n  const durationMs = normalizeTimeUnit(duration);\n  if (durationMs === null) {\n    throw new ReanimatedError(ERROR_MESSAGES.invalidDuration(duration));\n  } else if (durationMs < 0) {\n    throw new ReanimatedError(ERROR_MESSAGES.negativeDuration(duration));\n  }\n  return durationMs;\n}\n\nexport function normalizeTimingFunction(\n  timingFunction: CSSTimingFunction = 'ease'\n): NormalizedCSSTimingFunction {\n  if (typeof timingFunction === 'string') {\n    if (!isPredefinedTimingFunction(timingFunction)) {\n      throw new ReanimatedError(\n        ERROR_MESSAGES.invalidPredefinedTimingFunction(timingFunction)\n      );\n    }\n    return timingFunction;\n  }\n  if (\n    !timingFunction.normalize ||\n    typeof timingFunction.normalize !== 'function'\n  ) {\n    throw new ReanimatedError(\n      ERROR_MESSAGES.invalidParametrizedTimingFunction(timingFunction)\n    );\n  }\n  return timingFunction.normalize();\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,eAAe,QAAQ,6BAAoB;AACpD,SACEC,kBAAkB,EAClBC,aAAa,EACbC,iCAAiC,QAC5B,6BAAoB;AAO3B,SAASC,0BAA0B,QAAQ,yBAAgB;AAE3D,OAAO,MAAMC,cAAc,GAAG;EAC5BC,YAAY,EAAGC,QAAkB,IAC/B,kBAAkBA,QAAQ,qCAAqC;EACjEC,eAAe,EAAGC,QAAkB,IAClC,qBAAqBA,QAAQ,qCAAqC;EACpEC,gBAAgB,EAAGD,QAAkB,IACnC,0CAA0CA,QAAQ,IAAI;EACxDE,+BAA+B,EAAGC,cAAwC,IACxE,uCAAuCA,cAAc,4BAA4BT,iCAAiC,CAACU,IAAI,CAAC,IAAI,CAAC,GAAG;EAClIC,iCAAiC,EAAGF,cAAiC,IACnE,yCAAyCA,cAAc,EAAEG,QAAQ,CAAC,CAAC;AACvE,CAAC;AAED,SAASC,iBAAiBA,CAACT,QAAkB,EAAiB;EAC5D,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,OAAOA,QAAQ;EACjB,CAAC,MAAM,IAAIN,kBAAkB,CAACgB,IAAI,CAACV,QAAQ,CAAC,EAAE;IAC5C,OAAOW,QAAQ,CAACX,QAAQ,EAAE,EAAE,CAAC;EAC/B,CAAC,MAAM,IAAIL,aAAa,CAACe,IAAI,CAACV,QAAQ,CAAC,EAAE;IACvC,OAAOY,UAAU,CAACZ,QAAQ,CAAC,GAAG,IAAI;EACpC;EACA,OAAO,IAAI;AACb;AAEA,OAAO,SAASa,cAAcA,CAACC,KAAe,GAAG,CAAC,EAAU;EAC1D,MAAMC,OAAO,GAAGN,iBAAiB,CAACK,KAAK,CAAC;EACxC,IAAIC,OAAO,KAAK,IAAI,EAAE;IACpB,MAAM,IAAItB,eAAe,CAACK,cAAc,CAACC,YAAY,CAACe,KAAK,CAAC,CAAC;EAC/D;EACA,OAAOC,OAAO;AAChB;AAEA,OAAO,SAASC,iBAAiBA,CAACd,QAAkB,GAAG,CAAC,EAAU;EAChE,MAAMe,UAAU,GAAGR,iBAAiB,CAACP,QAAQ,CAAC;EAC9C,IAAIe,UAAU,KAAK,IAAI,EAAE;IACvB,MAAM,IAAIxB,eAAe,CAACK,cAAc,CAACG,eAAe,CAACC,QAAQ,CAAC,CAAC;EACrE,CAAC,MAAM,IAAIe,UAAU,GAAG,CAAC,EAAE;IACzB,MAAM,IAAIxB,eAAe,CAACK,cAAc,CAACK,gBAAgB,CAACD,QAAQ,CAAC,CAAC;EACtE;EACA,OAAOe,UAAU;AACnB;AAEA,OAAO,SAASC,uBAAuBA,CACrCb,cAAiC,GAAG,MAAM,EACb;EAC7B,IAAI,OAAOA,cAAc,KAAK,QAAQ,EAAE;IACtC,IAAI,CAACR,0BAA0B,CAACQ,cAAc,CAAC,EAAE;MAC/C,MAAM,IAAIZ,eAAe,CACvBK,cAAc,CAACM,+BAA+B,CAACC,cAAc,CAC/D,CAAC;IACH;IACA,OAAOA,cAAc;EACvB;EACA,IACE,CAACA,cAAc,CAACc,SAAS,IACzB,OAAOd,cAAc,CAACc,SAAS,KAAK,UAAU,EAC9C;IACA,MAAM,IAAI1B,eAAe,CACvBK,cAAc,CAACS,iCAAiC,CAACF,cAAc,CACjE,CAAC;EACH;EACA,OAAOA,cAAc,CAACc,SAAS,CAAC,CAAC;AACnC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
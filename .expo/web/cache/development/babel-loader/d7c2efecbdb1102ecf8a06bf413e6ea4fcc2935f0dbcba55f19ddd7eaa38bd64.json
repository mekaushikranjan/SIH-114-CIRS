{"ast":null,"code":"\"use strict\";\n\nimport { BaseGesture } from './gesture';\nexport class LongPressGesture extends BaseGesture {\n  config = {};\n  constructor() {\n    super();\n    this.handlerName = 'LongPressGestureHandler';\n    this.shouldCancelWhenOutside(true);\n  }\n  minDuration(duration) {\n    this.config.minDurationMs = duration;\n    return this;\n  }\n  maxDistance(distance) {\n    this.config.maxDist = distance;\n    return this;\n  }\n  numberOfPointers(pointers) {\n    this.config.numberOfPointers = pointers;\n    return this;\n  }\n}","map":{"version":3,"names":["BaseGesture","LongPressGesture","config","constructor","handlerName","shouldCancelWhenOutside","minDuration","duration","minDurationMs","maxDistance","distance","maxDist","numberOfPointers","pointers"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-gesture-handler\\src\\handlers\\gestures\\longPressGesture.ts"],"sourcesContent":["import { BaseGesture, BaseGestureConfig } from './gesture';\nimport { LongPressGestureConfig } from '../LongPressGestureHandler';\nimport type { LongPressGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\n\nexport class LongPressGesture extends BaseGesture<LongPressGestureHandlerEventPayload> {\n  public config: BaseGestureConfig & LongPressGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'LongPressGestureHandler';\n    this.shouldCancelWhenOutside(true);\n  }\n\n  /**\n   * Minimum time, expressed in milliseconds, that a finger must remain pressed on the corresponding view.\n   * The default value is 500.\n   * @param duration\n   */\n  minDuration(duration: number) {\n    this.config.minDurationMs = duration;\n    return this;\n  }\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is allowed to travel during a long press gesture.\n   * @param distance\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/long-press-gesture#maxdistancevalue-number\n   */\n  maxDistance(distance: number) {\n    this.config.maxDist = distance;\n    return this;\n  }\n\n  /**\n   * Determine exact number of points required to handle the long press gesture.\n   * @param pointers\n   */\n  numberOfPointers(pointers: number) {\n    this.config.numberOfPointers = pointers;\n    return this;\n  }\n}\n\nexport type LongPressGestureType = InstanceType<typeof LongPressGesture>;\n"],"mappings":";;AAAA,SAASA,WAAW,QAA2B,WAAW;AAI1D,OAAO,MAAMC,gBAAgB,SAASD,WAAW,CAAsC;EAC9EE,MAAM,GAA+C,CAAC,CAAC;EAE9DC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,WAAW,GAAG,yBAAyB;IAC5C,IAAI,CAACC,uBAAuB,CAAC,IAAI,CAAC;EACpC;EAOAC,WAAWA,CAACC,QAAgB,EAAE;IAC5B,IAAI,CAACL,MAAM,CAACM,aAAa,GAAGD,QAAQ;IACpC,OAAO,IAAI;EACb;EAOAE,WAAWA,CAACC,QAAgB,EAAE;IAC5B,IAAI,CAACR,MAAM,CAACS,OAAO,GAAGD,QAAQ;IAC9B,OAAO,IAAI;EACb;EAMAE,gBAAgBA,CAACC,QAAgB,EAAE;IACjC,IAAI,CAACX,MAAM,CAACU,gBAAgB,GAAGC,QAAQ;IACvC,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
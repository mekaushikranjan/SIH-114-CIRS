{"ast":null,"code":"'use strict';\n\nimport { isConfigPropertyAlias, isDefined, isRecord } from \"../../utils/index.js\";\nclass StyleBuilderImpl {\n  processedProps = {};\n  constructor(config, options) {\n    this.config = config;\n    this.buildMiddleware = options?.buildMiddleware ?? (props => props);\n    this.separatelyInterpolatedArrayProperties_ = options?.separatelyInterpolatedArrayProperties ?? [];\n  }\n  isSeparatelyInterpolatedArrayProperty(property) {\n    return this.separatelyInterpolatedArrayProperties_.includes(property);\n  }\n  add(property, value) {\n    const configValue = this.config[property];\n    if (!configValue || !isDefined(value)) {\n      return;\n    }\n    if (configValue === true) {\n      this.maybeAssignProp(property, value);\n    } else if (isConfigPropertyAlias(configValue)) {\n      this.add(configValue.as, value);\n    } else {\n      const {\n        process\n      } = configValue;\n      const processedValue = process ? process(value) : value;\n      if (!isDefined(processedValue)) {\n        return;\n      }\n      if (isRecord(processedValue)) {\n        this.maybeAssignProps(processedValue);\n      } else {\n        this.maybeAssignProp(property, processedValue);\n      }\n    }\n  }\n  build() {\n    const result = this.buildMiddleware(this.processedProps);\n    this.cleanup();\n    if (Object.keys(result).length === 0) {\n      return null;\n    }\n    return result;\n  }\n  buildFrom(props) {\n    Object.entries(props).forEach(([key, value]) => this.add(key, value));\n    return this.build();\n  }\n  maybeAssignProp(property, value) {\n    this.processedProps[property] ??= value;\n  }\n  maybeAssignProps(props) {\n    Object.entries(props).forEach(([key, value]) => this.maybeAssignProp(key, value));\n  }\n  cleanup() {\n    this.processedProps = {};\n  }\n}\nexport default function createStyleBuilder(config, options) {\n  return new StyleBuilderImpl(config, options);\n}","map":{"version":3,"names":["isConfigPropertyAlias","isDefined","isRecord","StyleBuilderImpl","processedProps","constructor","config","options","buildMiddleware","props","separatelyInterpolatedArrayProperties_","separatelyInterpolatedArrayProperties","isSeparatelyInterpolatedArrayProperty","property","includes","add","value","configValue","maybeAssignProp","as","process","processedValue","maybeAssignProps","build","result","cleanup","Object","keys","length","buildFrom","entries","forEach","key","createStyleBuilder"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\css\\native\\style\\createStyleBuilder.ts"],"sourcesContent":["'use strict';\nimport type { AnyRecord } from '../../types';\nimport { isConfigPropertyAlias, isDefined, isRecord } from '../../utils';\nimport type {\n  StyleBuilder,\n  StyleBuilderConfig,\n  StyleBuildMiddleware,\n} from './types';\n\ntype StyleBuilderOptions<P extends AnyRecord> = {\n  buildMiddleware?: StyleBuildMiddleware<P>;\n  separatelyInterpolatedArrayProperties?: (keyof P)[];\n};\n\nclass StyleBuilderImpl<P extends AnyRecord> implements StyleBuilder<P> {\n  private readonly buildMiddleware: StyleBuildMiddleware<P>;\n  private readonly config: StyleBuilderConfig<P>;\n  private readonly separatelyInterpolatedArrayProperties_: (keyof P)[];\n\n  private processedProps = {} as P;\n\n  constructor(config: StyleBuilderConfig<P>, options?: StyleBuilderOptions<P>) {\n    this.config = config;\n    this.buildMiddleware = options?.buildMiddleware ?? ((props) => props);\n    this.separatelyInterpolatedArrayProperties_ =\n      options?.separatelyInterpolatedArrayProperties ?? [];\n  }\n\n  isSeparatelyInterpolatedArrayProperty(property: keyof P): boolean {\n    return this.separatelyInterpolatedArrayProperties_.includes(property);\n  }\n\n  add(property: keyof P, value: P[keyof P]): void {\n    const configValue = this.config[property];\n\n    if (!configValue || !isDefined(value)) {\n      return;\n    }\n\n    if (configValue === true) {\n      this.maybeAssignProp(property, value);\n    } else if (isConfigPropertyAlias<P>(configValue)) {\n      this.add(configValue.as, value);\n    } else {\n      const { process } = configValue;\n      const processedValue = process ? process(value) : value;\n\n      if (!isDefined(processedValue)) {\n        return;\n      }\n\n      if (isRecord<P>(processedValue)) {\n        this.maybeAssignProps(processedValue);\n      } else {\n        this.maybeAssignProp(property, processedValue);\n      }\n    }\n  }\n\n  build(): P | null {\n    const result = this.buildMiddleware(this.processedProps);\n    this.cleanup();\n\n    if (Object.keys(result).length === 0) {\n      return null;\n    }\n\n    return result;\n  }\n\n  buildFrom(props: P): P | null {\n    Object.entries(props).forEach(([key, value]) => this.add(key, value));\n    return this.build();\n  }\n\n  private maybeAssignProp(property: keyof P, value: P[keyof P]) {\n    this.processedProps[property] ??= value;\n  }\n\n  private maybeAssignProps(props: P) {\n    Object.entries(props).forEach(([key, value]) =>\n      this.maybeAssignProp(key, value)\n    );\n  }\n\n  private cleanup() {\n    this.processedProps = {} as P;\n  }\n}\n\nexport default function createStyleBuilder<P extends AnyRecord>(\n  config: StyleBuilderConfig<P>,\n  options?: StyleBuilderOptions<P>\n): StyleBuilder<Partial<P>> {\n  return new StyleBuilderImpl(config, options);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
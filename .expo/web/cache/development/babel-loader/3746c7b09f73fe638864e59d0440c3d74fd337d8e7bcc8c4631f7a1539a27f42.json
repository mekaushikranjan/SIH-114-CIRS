{"ast":null,"code":"\"use strict\";\n\nclass PressableStateMachine {\n  constructor() {\n    this.states = null;\n    this.currentStepIndex = 0;\n    this.eventPayload = null;\n  }\n  setStates(states) {\n    this.states = states;\n  }\n  reset() {\n    this.currentStepIndex = 0;\n    this.eventPayload = null;\n  }\n  handleEvent(eventName, eventPayload) {\n    if (!this.states) {\n      return;\n    }\n    const step = this.states[this.currentStepIndex];\n    this.eventPayload = eventPayload || this.eventPayload;\n    if (step.eventName !== eventName) {\n      if (this.currentStepIndex > 0) {\n        this.reset();\n        this.handleEvent(eventName, eventPayload);\n      }\n      return;\n    }\n    if (this.eventPayload && step.callback) {\n      step.callback(this.eventPayload);\n    }\n    this.currentStepIndex++;\n    if (this.currentStepIndex === this.states.length) {\n      this.reset();\n    }\n  }\n}\nexport { PressableStateMachine };","map":{"version":3,"names":["PressableStateMachine","constructor","states","currentStepIndex","eventPayload","setStates","reset","handleEvent","eventName","step","callback","length"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-gesture-handler\\src\\components\\Pressable\\StateMachine.tsx"],"sourcesContent":["import { PressableEvent } from './PressableProps';\n\nexport interface StateDefinition {\n  eventName: string;\n  callback?: (event: PressableEvent) => void;\n}\n\nclass PressableStateMachine {\n  private states: StateDefinition[] | null;\n  private currentStepIndex: number;\n  private eventPayload: PressableEvent | null;\n\n  constructor() {\n    this.states = null;\n    this.currentStepIndex = 0;\n    this.eventPayload = null;\n  }\n\n  public setStates(states: StateDefinition[]) {\n    this.states = states;\n  }\n\n  public reset() {\n    this.currentStepIndex = 0;\n    this.eventPayload = null;\n  }\n\n  public handleEvent(eventName: string, eventPayload?: PressableEvent) {\n    if (!this.states) {\n      return;\n    }\n\n    const step = this.states[this.currentStepIndex];\n    this.eventPayload = eventPayload || this.eventPayload;\n\n    if (step.eventName !== eventName) {\n      if (this.currentStepIndex > 0) {\n        // retry with position at index 0\n        this.reset();\n        this.handleEvent(eventName, eventPayload);\n      }\n      return;\n    }\n\n    if (this.eventPayload && step.callback) {\n      step.callback(this.eventPayload);\n    }\n\n    this.currentStepIndex++;\n\n    if (this.currentStepIndex === this.states.length) {\n      this.reset();\n    }\n  }\n}\n\nexport { PressableStateMachine };\n"],"mappings":";;AAOA,MAAMA,qBAAqB,CAAC;EAK1BC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACC,YAAY,GAAG,IAAI;EAC1B;EAEOC,SAASA,CAACH,MAAyB,EAAE;IAC1C,IAAI,CAACA,MAAM,GAAGA,MAAM;EACtB;EAEOI,KAAKA,CAAA,EAAG;IACb,IAAI,CAACH,gBAAgB,GAAG,CAAC;IACzB,IAAI,CAACC,YAAY,GAAG,IAAI;EAC1B;EAEOG,WAAWA,CAACC,SAAiB,EAAEJ,YAA6B,EAAE;IACnE,IAAI,CAAC,IAAI,CAACF,MAAM,EAAE;MAChB;IACF;IAEA,MAAMO,IAAI,GAAG,IAAI,CAACP,MAAM,CAAC,IAAI,CAACC,gBAAgB,CAAC;IAC/C,IAAI,CAACC,YAAY,GAAGA,YAAY,IAAI,IAAI,CAACA,YAAY;IAErD,IAAIK,IAAI,CAACD,SAAS,KAAKA,SAAS,EAAE;MAChC,IAAI,IAAI,CAACL,gBAAgB,GAAG,CAAC,EAAE;QAE7B,IAAI,CAACG,KAAK,CAAC,CAAC;QACZ,IAAI,CAACC,WAAW,CAACC,SAAS,EAAEJ,YAAY,CAAC;MAC3C;MACA;IACF;IAEA,IAAI,IAAI,CAACA,YAAY,IAAIK,IAAI,CAACC,QAAQ,EAAE;MACtCD,IAAI,CAACC,QAAQ,CAAC,IAAI,CAACN,YAAY,CAAC;IAClC;IAEA,IAAI,CAACD,gBAAgB,EAAE;IAEvB,IAAI,IAAI,CAACA,gBAAgB,KAAK,IAAI,CAACD,MAAM,CAACS,MAAM,EAAE;MAChD,IAAI,CAACL,KAAK,CAAC,CAAC;IACd;EACF;AACF;AAEA,SAASN,qBAAqB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
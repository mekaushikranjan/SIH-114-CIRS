{"ast":null,"code":"import { BaseGesture } from './gesture';\nexport class NativeGesture extends BaseGesture {\n  config = {};\n  constructor() {\n    super();\n    this.handlerName = 'NativeViewGestureHandler';\n  }\n  shouldActivateOnStart(value) {\n    this.config.shouldActivateOnStart = value;\n    return this;\n  }\n  disallowInterruption(value) {\n    this.config.disallowInterruption = value;\n    return this;\n  }\n}","map":{"version":3,"names":["BaseGesture","NativeGesture","config","constructor","handlerName","shouldActivateOnStart","value","disallowInterruption"],"sources":["C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/nativeGesture.ts"],"sourcesContent":["import { BaseGestureConfig, BaseGesture } from './gesture';\nimport { NativeViewGestureConfig } from '../NativeViewGestureHandler';\nimport type { NativeViewGestureHandlerPayload } from '../GestureHandlerEventPayload';\n\nexport class NativeGesture extends BaseGesture<NativeViewGestureHandlerPayload> {\n  public config: BaseGestureConfig & NativeViewGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'NativeViewGestureHandler';\n  }\n\n  /**\n   * When true, underlying handler will activate unconditionally when in `BEGAN` or `UNDETERMINED` state.\n   * @param value\n   */\n  shouldActivateOnStart(value: boolean) {\n    this.config.shouldActivateOnStart = value;\n    return this;\n  }\n\n  /**\n   * When true, cancels all other gesture handlers when this `NativeViewGestureHandler` receives an `ACTIVE` state event.\n   * @param value\n   */\n  disallowInterruption(value: boolean) {\n    this.config.disallowInterruption = value;\n    return this;\n  }\n}\n\nexport type NativeGestureType = InstanceType<typeof NativeGesture>;\n"],"mappings":"AAAA,SAA4BA,WAAW,QAAQ,WAAW;AAI1D,OAAO,MAAMC,aAAa,SAASD,WAAW,CAAkC;EACvEE,MAAM,GAAgD,CAAC,CAAC;EAE/DC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,WAAW,GAAG,0BAA0B;EAC/C;EAMAC,qBAAqBA,CAACC,KAAc,EAAE;IACpC,IAAI,CAACJ,MAAM,CAACG,qBAAqB,GAAGC,KAAK;IACzC,OAAO,IAAI;EACb;EAMAC,oBAAoBA,CAACD,KAAc,EAAE;IACnC,IAAI,CAACJ,MAAM,CAACK,oBAAoB,GAAGD,KAAK;IACxC,OAAO,IAAI;EACb;AACF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
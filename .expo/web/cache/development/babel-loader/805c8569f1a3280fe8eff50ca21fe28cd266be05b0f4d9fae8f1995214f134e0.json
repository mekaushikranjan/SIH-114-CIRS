{"ast":null,"code":"'use strict';\n\nimport { useCallback, useEffect, useRef } from 'react';\nimport { IS_WEB, logger } from \"../common/index.js\";\nimport { useEvent } from \"./useEvent.js\";\nimport { useSharedValue } from \"./useSharedValue.js\";\nconst NOT_INITIALIZED_WARNING = 'animatedRef is not initialized in useScrollOffset. Make sure to pass the animated ref to the scrollable component to get scroll offset updates.';\nconst NATIVE_SCROLL_EVENT_NAMES = ['onScroll', 'onScrollBeginDrag', 'onScrollEndDrag', 'onMomentumScrollBegin', 'onMomentumScrollEnd'];\nexport const useScrollOffset = IS_WEB ? useScrollOffsetWeb : useScrollOffsetNative;\nconst _worklet_312887998575_init_data = {\n  code: \"function useScrollOffsetJs1(){const{animatedRef,getWebScrollableElement,offset}=this.__closure;var _animatedRef;if((_animatedRef=animatedRef)!==null&&_animatedRef!==void 0&&_animatedRef.current){const element=getWebScrollableElement(animatedRef.current);offset.value=element.scrollLeft===0?element.scrollTop:element.scrollLeft;}}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\hook\\\\useScrollOffset.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"useScrollOffsetJs1\\\",\\\"animatedRef\\\",\\\"getWebScrollableElement\\\",\\\"offset\\\",\\\"__closure\\\",\\\"_animatedRef\\\",\\\"current\\\",\\\"element\\\",\\\"value\\\",\\\"scrollLeft\\\",\\\"scrollTop\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-reanimated/lib/module/hook/useScrollOffset.js\\\"],\\\"mappings\\\":\\\"AAuBmC,SAAAA,kBAAMA,CAAA,QAAAC,WAAA,CAAAC,uBAAA,CAAAC,MAAA,OAAAC,SAAA,KAAAC,YAAA,CAGrC,IAAAA,YAAA,CAAIJ,WAAW,UAAAI,YAAA,WAAXA,YAAA,CAAaC,OAAO,CAAE,CACxB,KAAM,CAAAC,OAAO,CAAGL,uBAAuB,CAACD,WAAW,CAACK,OAAO,CAAC,CAE5DH,MAAM,CAACK,KAAK,CAAGD,OAAO,CAACE,UAAU,GAAK,CAAC,CAAGF,OAAO,CAACG,SAAS,CAAGH,OAAO,CAACE,UAAU,CAClF,CACF\\\",\\\"ignoreList\\\":[]}\"\n};\nfunction useScrollOffsetWeb(animatedRef, providedOffset) {\n  const internalOffset = useSharedValue(0);\n  const offset = useRef(providedOffset ?? internalOffset).current;\n  const eventHandler = useCallback(function useScrollOffsetJs1Factory({\n    _worklet_312887998575_init_data,\n    animatedRef,\n    getWebScrollableElement,\n    offset\n  }) {\n    const _e = [new global.Error(), -4, -27];\n    const useScrollOffsetJs1 = function () {\n      if (animatedRef?.current) {\n        const element = getWebScrollableElement(animatedRef.current);\n        offset.value = element.scrollLeft === 0 ? element.scrollTop : element.scrollLeft;\n      }\n    };\n    useScrollOffsetJs1.__closure = {\n      animatedRef,\n      getWebScrollableElement,\n      offset\n    };\n    useScrollOffsetJs1.__workletHash = 312887998575;\n    useScrollOffsetJs1.__pluginVersion = \"0.5.1\";\n    useScrollOffsetJs1.__initData = _worklet_312887998575_init_data;\n    useScrollOffsetJs1.__stackDetails = _e;\n    return useScrollOffsetJs1;\n  }({\n    _worklet_312887998575_init_data,\n    animatedRef,\n    getWebScrollableElement,\n    offset\n  }), [animatedRef, offset]);\n  useEffect(() => {\n    if (!animatedRef) {\n      return;\n    }\n    return animatedRef.observe(tag => {\n      if (!animatedRef.current || !tag) {\n        logger.warn(NOT_INITIALIZED_WARNING);\n        return;\n      }\n      const element = getWebScrollableElement(animatedRef.current);\n      element.addEventListener('scroll', eventHandler);\n      return () => {\n        element.removeEventListener('scroll', eventHandler);\n      };\n    });\n  }, [animatedRef, eventHandler]);\n  return offset;\n}\nconst _worklet_1380374916320_init_data = {\n  code: \"function useScrollOffsetJs2(event){const{offset}=this.__closure;offset.value=event.contentOffset.x===0?event.contentOffset.y:event.contentOffset.x;}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\hook\\\\useScrollOffset.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"useScrollOffsetJs2\\\",\\\"event\\\",\\\"offset\\\",\\\"__closure\\\",\\\"value\\\",\\\"contentOffset\\\",\\\"x\\\",\\\"y\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-reanimated/lib/module/hook/useScrollOffset.js\\\"],\\\"mappings\\\":\\\"AAqDgC,SAAAA,kBAASA,CAAAC,KAAA,QAAAC,MAAA,OAAAC,SAAA,CAGrCD,MAAM,CAACE,KAAK,CAAGH,KAAK,CAACI,aAAa,CAACC,CAAC,GAAK,CAAC,CAAGL,KAAK,CAACI,aAAa,CAACE,CAAC,CAAGN,KAAK,CAACI,aAAa,CAACC,CAAC,CAC5F\\\",\\\"ignoreList\\\":[]}\"\n};\nfunction useScrollOffsetNative(animatedRef, providedOffset) {\n  const internalOffset = useSharedValue(0);\n  const offset = useRef(providedOffset ?? internalOffset).current;\n  const eventHandler = useEvent(function useScrollOffsetJs2Factory({\n    _worklet_1380374916320_init_data,\n    offset\n  }) {\n    const _e = [new global.Error(), -2, -27];\n    const useScrollOffsetJs2 = function (event) {\n      offset.value = event.contentOffset.x === 0 ? event.contentOffset.y : event.contentOffset.x;\n    };\n    useScrollOffsetJs2.__closure = {\n      offset\n    };\n    useScrollOffsetJs2.__workletHash = 1380374916320;\n    useScrollOffsetJs2.__pluginVersion = \"0.5.1\";\n    useScrollOffsetJs2.__initData = _worklet_1380374916320_init_data;\n    useScrollOffsetJs2.__stackDetails = _e;\n    return useScrollOffsetJs2;\n  }({\n    _worklet_1380374916320_init_data,\n    offset\n  }), NATIVE_SCROLL_EVENT_NAMES);\n  useEffect(() => {\n    if (!animatedRef) {\n      return;\n    }\n    return animatedRef.observe(tag => {\n      if (!tag) {\n        logger.warn(NOT_INITIALIZED_WARNING);\n        return;\n      }\n      eventHandler.workletEventHandler.registerForEvents(tag);\n      return () => {\n        eventHandler.workletEventHandler.unregisterFromEvents(tag);\n      };\n    });\n  }, [animatedRef, eventHandler]);\n  return offset;\n}\nfunction getWebScrollableElement(scrollComponent) {\n  return scrollComponent?.getScrollableNode?.() ?? scrollComponent;\n}","map":{"version":3,"names":["useCallback","useEffect","useRef","IS_WEB","logger","useEvent","useSharedValue","NOT_INITIALIZED_WARNING","NATIVE_SCROLL_EVENT_NAMES","useScrollOffset","useScrollOffsetWeb","useScrollOffsetNative","_worklet_312887998575_init_data","code","location","sourceMap","animatedRef","providedOffset","internalOffset","offset","current","eventHandler","useScrollOffsetJs1Factory","getWebScrollableElement","_e","global","Error","useScrollOffsetJs1","element","value","scrollLeft","scrollTop","__closure","__workletHash","__pluginVersion","__initData","__stackDetails","observe","tag","warn","addEventListener","removeEventListener","_worklet_1380374916320_init_data","useScrollOffsetJs2Factory","useScrollOffsetJs2","event","contentOffset","x","y","workletEventHandler","registerForEvents","unregisterFromEvents","scrollComponent","getScrollableNode"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\hook\\useScrollOffset.ts"],"sourcesContent":["'use strict';\nimport { useCallback, useEffect, useRef } from 'react';\n\nimport { IS_WEB, logger } from '../common';\nimport type { SharedValue, WrapperRef } from '../commonTypes';\nimport type {\n  AnimatedRef,\n  ReanimatedScrollEvent,\n  RNNativeScrollEvent,\n} from './commonTypes';\nimport type { EventHandlerInternal } from './useEvent';\nimport { useEvent } from './useEvent';\nimport { useSharedValue } from './useSharedValue';\n\nconst NOT_INITIALIZED_WARNING =\n  'animatedRef is not initialized in useScrollOffset. Make sure to pass the animated ref to the scrollable component to get scroll offset updates.';\n\nconst NATIVE_SCROLL_EVENT_NAMES = [\n  'onScroll',\n  'onScrollBeginDrag',\n  'onScrollEndDrag',\n  'onMomentumScrollBegin',\n  'onMomentumScrollEnd',\n] as const;\n\n/**\n * Lets you synchronously get the current offset of a scrollable component.\n *\n * @param animatedRef - An [animated\n *   ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef)\n *   attached to a scrollable component.\n * @returns A shared value which holds the current scroll offset of the\n *   scrollable component.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/scroll/useScrollOffset\n */\nexport const useScrollOffset = IS_WEB\n  ? useScrollOffsetWeb\n  : useScrollOffsetNative;\n\nfunction useScrollOffsetWeb<TRef extends WrapperRef>(\n  animatedRef: AnimatedRef<TRef> | null,\n  providedOffset?: SharedValue<number>\n): SharedValue<number> {\n  const internalOffset = useSharedValue(0);\n  const offset = useRef(providedOffset ?? internalOffset).current;\n\n  const eventHandler = useCallback(() => {\n    'worklet';\n    if (animatedRef?.current) {\n      const element = getWebScrollableElement(animatedRef.current);\n      // scrollLeft is the X axis scrolled offset, works properly also with RTL layout\n      offset.value =\n        element.scrollLeft === 0 ? element.scrollTop : element.scrollLeft;\n    }\n  }, [animatedRef, offset]);\n\n  useEffect(() => {\n    if (!animatedRef) {\n      return;\n    }\n\n    return animatedRef.observe((tag) => {\n      if (!animatedRef.current || !tag) {\n        logger.warn(NOT_INITIALIZED_WARNING);\n        return;\n      }\n\n      const element = getWebScrollableElement(animatedRef.current);\n      element.addEventListener('scroll', eventHandler);\n\n      return () => {\n        element.removeEventListener('scroll', eventHandler);\n      };\n    });\n  }, [animatedRef, eventHandler]);\n\n  return offset;\n}\n\nfunction useScrollOffsetNative<TRef extends WrapperRef>(\n  animatedRef: AnimatedRef<TRef> | null,\n  providedOffset?: SharedValue<number>\n): SharedValue<number> {\n  const internalOffset = useSharedValue(0);\n  const offset = useRef(providedOffset ?? internalOffset).current;\n\n  const eventHandler = useEvent<RNNativeScrollEvent>(\n    (event: ReanimatedScrollEvent) => {\n      'worklet';\n      offset.value =\n        event.contentOffset.x === 0\n          ? event.contentOffset.y\n          : event.contentOffset.x;\n    },\n    NATIVE_SCROLL_EVENT_NAMES\n    // Read https://github.com/software-mansion/react-native-reanimated/pull/5056\n    // for more information about this cast.\n  ) as unknown as EventHandlerInternal<ReanimatedScrollEvent>;\n\n  useEffect(() => {\n    if (!animatedRef) {\n      return;\n    }\n\n    return animatedRef.observe((tag) => {\n      if (!tag) {\n        logger.warn(NOT_INITIALIZED_WARNING);\n        return;\n      }\n\n      eventHandler.workletEventHandler.registerForEvents(tag);\n      return () => {\n        eventHandler.workletEventHandler.unregisterFromEvents(tag);\n      };\n    });\n  }, [animatedRef, eventHandler]);\n\n  return offset;\n}\n\nfunction getWebScrollableElement(scrollComponent: WrapperRef): HTMLElement {\n  return scrollComponent?.getScrollableNode?.() ?? scrollComponent;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
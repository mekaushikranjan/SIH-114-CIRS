{"ast":null,"code":"\"use strict\";\n\nimport { tagMessage } from '../../utils';\nlet Reanimated;\ntry {\n  Reanimated = require('react-native-reanimated');\n} catch (e) {\n  Reanimated = undefined;\n}\nif (!Reanimated?.useSharedValue) {\n  Reanimated = undefined;\n}\nconst _worklet_13891607934256_init_data = {\n  code: \"function reanimatedWrapperJs1(){const{tagMessage}=this.__closure;console.warn(tagMessage('Please use newer version of react-native-reanimated in order to control state of the gestures.'));}\",\n  location: \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Desktop\\\\civic-reporter-sih\\\\frontend\\\\node_modules\\\\react-native-gesture-handler\\\\lib\\\\module\\\\handlers\\\\gestures\\\\reanimatedWrapper.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reanimatedWrapperJs1\\\",\\\"tagMessage\\\",\\\"__closure\\\",\\\"console\\\",\\\"warn\\\"],\\\"sources\\\":[\\\"C:/Users/prana/OneDrive/Desktop/civic-reporter-sih/frontend/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/reanimatedWrapper.js\\\"],\\\"mappings\\\":\\\"AAkB+B,SAAAA,oBAAMA,CAAA,QAAAC,UAAA,OAAAC,SAAA,CAGjCC,OAAO,CAACC,IAAI,CAACH,UAAU,CAAC,gGAAgG,CAAC,CAAC,CAC5H\\\",\\\"ignoreList\\\":[]}\"\n};\nif (Reanimated !== undefined && !Reanimated.setGestureState) {\n  Reanimated.setGestureState = function reanimatedWrapperJs1Factory({\n    _worklet_13891607934256_init_data,\n    tagMessage\n  }) {\n    const _e = [new global.Error(), -2, -27];\n    const reanimatedWrapperJs1 = function () {\n      console.warn(tagMessage('Please use newer version of react-native-reanimated in order to control state of the gestures.'));\n    };\n    reanimatedWrapperJs1.__closure = {\n      tagMessage\n    };\n    reanimatedWrapperJs1.__workletHash = 13891607934256;\n    reanimatedWrapperJs1.__pluginVersion = \"0.5.1\";\n    reanimatedWrapperJs1.__initData = _worklet_13891607934256_init_data;\n    reanimatedWrapperJs1.__stackDetails = _e;\n    return reanimatedWrapperJs1;\n  }({\n    _worklet_13891607934256_init_data,\n    tagMessage\n  });\n}\nexport { Reanimated };","map":{"version":3,"names":["tagMessage","Reanimated","require","e","undefined","useSharedValue","_worklet_13891607934256_init_data","code","location","sourceMap","setGestureState","reanimatedWrapperJs1Factory","_e","global","Error","reanimatedWrapperJs1","console","warn","__closure","__workletHash","__pluginVersion","__initData","__stackDetails"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-gesture-handler\\src\\handlers\\gestures\\reanimatedWrapper.ts"],"sourcesContent":["import { ComponentClass } from 'react';\nimport {\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../gestureHandlerCommon';\nimport { tagMessage } from '../../utils';\n\nexport interface SharedValue<T> {\n  value: T;\n}\n\nlet Reanimated:\n  | {\n      default: {\n        // Slightly modified definition copied from 'react-native-reanimated'\n        createAnimatedComponent<P extends object>(\n          component: ComponentClass<P>,\n          options?: unknown\n        ): ComponentClass<P>;\n      };\n      useEvent: (\n        callback: (event: GestureUpdateEvent | GestureStateChangeEvent) => void,\n        events: string[],\n        rebuild: boolean\n      ) => unknown;\n      useSharedValue: <T>(value: T) => SharedValue<T>;\n      setGestureState: (handlerTag: number, newState: number) => void;\n    }\n  | undefined;\n\ntry {\n  Reanimated = require('react-native-reanimated');\n} catch (e) {\n  // When 'react-native-reanimated' is not available we want to quietly continue\n  // @ts-ignore TS demands the variable to be initialized\n  Reanimated = undefined;\n}\n\nif (!Reanimated?.useSharedValue) {\n  // @ts-ignore Make sure the loaded module is actually Reanimated, if it's not\n  // reset the module to undefined so we can fallback to the default implementation\n  Reanimated = undefined;\n}\n\nif (Reanimated !== undefined && !Reanimated.setGestureState) {\n  // The loaded module is Reanimated but it doesn't have the setGestureState defined\n  Reanimated.setGestureState = () => {\n    'worklet';\n    console.warn(\n      tagMessage(\n        'Please use newer version of react-native-reanimated in order to control state of the gestures.'\n      )\n    );\n  };\n}\n\nexport { Reanimated };\n"],"mappings":";;AAKA,SAASA,UAAU,QAAQ,aAAa;AAMxC,IAAIC,UAiBS;AAEb,IAAI;EACFA,UAAU,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AACjD,CAAC,CAAC,OAAOC,CAAC,EAAE;EAGVF,UAAU,GAAGG,SAAS;AACxB;AAEA,IAAI,CAACH,UAAU,EAAEI,cAAc,EAAE;EAG/BJ,UAAU,GAAGG,SAAS;AACxB;AAAA,MAAAE,iCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;AAAA;AAEA,IAAIR,UAAU,KAAKG,SAAS,IAAI,CAACH,UAAU,CAACS,eAAe,EAAE;EAE3DT,UAAU,CAACS,eAAe,GAAG,SAAAC,4BAAA;IAAAL,iCAAA;IAGzBN;EAAU;IAAA,MAAAY,EAAA,QAAAC,MAAA,CAAAC,KAAA;IAAA,MAAAC,oBAAA,YAAAA,CAAA,EAHqB;MAEjCC,OAAO,CAACC,IAAI,CACVjB,UAAU,CACR,gGACF,CACF,CAAC;IACH,CAAC;IAAAe,oBAAA,CAAAG,SAAA;MAJGlB;IAAU;IAAAe,oBAAA,CAAAI,aAAA;IAAAJ,oBAAA,CAAAK,eAAA;IAAAL,oBAAA,CAAAM,UAAA,GAAAf,iCAAA;IAAAS,oBAAA,CAAAO,cAAA,GAAAV,EAAA;IAAA,OAAAG,oBAAA;EAAA,CAHe;IAAAT,iCAAA;IAGzBN;EAAU,EAIb;AACH;AAEA,SAASC,UAAU","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
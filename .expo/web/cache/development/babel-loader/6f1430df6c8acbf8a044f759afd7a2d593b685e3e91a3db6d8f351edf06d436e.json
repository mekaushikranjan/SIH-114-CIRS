{"ast":null,"code":"'use strict';\n\nimport { ReanimatedError } from \"../../../../common/index.js\";\nexport const ERROR_MESSAGES = {\n  unsupportedAspectRatio: ratio => `Unsupported aspect ratio: ${ratio}. Expected a number or a string in \"a/b\" format.`\n};\nexport const processAspectRatio = value => {\n  if (typeof value === 'number' || !isNaN(+value)) {\n    return +value;\n  } else if (typeof value === 'string') {\n    const parts = value.split('/');\n    if (parts.length === 2) {\n      const numerator = parseFloat(parts[0]);\n      const denominator = parseFloat(parts[1]);\n      if (!isNaN(numerator) && !isNaN(denominator) && denominator !== 0) {\n        return numerator / denominator;\n      }\n    }\n  }\n  throw new ReanimatedError(ERROR_MESSAGES.unsupportedAspectRatio(value));\n};\nexport const processGap = value => ({\n  rowGap: value,\n  columnGap: value\n});","map":{"version":3,"names":["ReanimatedError","ERROR_MESSAGES","unsupportedAspectRatio","ratio","processAspectRatio","value","isNaN","parts","split","length","numerator","parseFloat","denominator","processGap","rowGap","columnGap"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-reanimated\\src\\css\\native\\style\\processors\\others.ts"],"sourcesContent":["'use strict';\nimport { ReanimatedError } from '../../../../common';\nimport type { ValueProcessor } from '../types';\n\nexport const ERROR_MESSAGES = {\n  unsupportedAspectRatio: (ratio: string | number) =>\n    `Unsupported aspect ratio: ${ratio}. Expected a number or a string in \"a/b\" format.`,\n};\n\nexport const processAspectRatio: ValueProcessor<number | string> = (value) => {\n  if (typeof value === 'number' || !isNaN(+value)) {\n    return +value;\n  } else if (typeof value === 'string') {\n    const parts = value.split('/');\n    if (parts.length === 2) {\n      const numerator = parseFloat(parts[0]);\n      const denominator = parseFloat(parts[1]);\n      if (!isNaN(numerator) && !isNaN(denominator) && denominator !== 0) {\n        return numerator / denominator;\n      }\n    }\n  }\n\n  throw new ReanimatedError(ERROR_MESSAGES.unsupportedAspectRatio(value));\n};\n\nexport const processGap: ValueProcessor<number | string> = (value) => ({\n  rowGap: value,\n  columnGap: value,\n});\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,eAAe,QAAQ,6BAAoB;AAGpD,OAAO,MAAMC,cAAc,GAAG;EAC5BC,sBAAsB,EAAGC,KAAsB,IAC7C,6BAA6BA,KAAK;AACtC,CAAC;AAED,OAAO,MAAMC,kBAAmD,GAAIC,KAAK,IAAK;EAC5E,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,CAACC,KAAK,CAAC,CAACD,KAAK,CAAC,EAAE;IAC/C,OAAO,CAACA,KAAK;EACf,CAAC,MAAM,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IACpC,MAAME,KAAK,GAAGF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC;IAC9B,IAAID,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;MACtB,MAAMC,SAAS,GAAGC,UAAU,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC;MACtC,MAAMK,WAAW,GAAGD,UAAU,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC;MACxC,IAAI,CAACD,KAAK,CAACI,SAAS,CAAC,IAAI,CAACJ,KAAK,CAACM,WAAW,CAAC,IAAIA,WAAW,KAAK,CAAC,EAAE;QACjE,OAAOF,SAAS,GAAGE,WAAW;MAChC;IACF;EACF;EAEA,MAAM,IAAIZ,eAAe,CAACC,cAAc,CAACC,sBAAsB,CAACG,KAAK,CAAC,CAAC;AACzE,CAAC;AAED,OAAO,MAAMQ,UAA2C,GAAIR,KAAK,KAAM;EACrES,MAAM,EAAET,KAAK;EACbU,SAAS,EAAEV;AACb,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}
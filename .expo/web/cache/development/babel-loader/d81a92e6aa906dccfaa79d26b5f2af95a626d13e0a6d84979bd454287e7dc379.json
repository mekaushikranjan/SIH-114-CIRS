{"ast":null,"code":"\"use strict\";\n\nimport React, { forwardRef } from 'react';\nimport { tagMessage } from '../../../utils';\nimport { isRNSVGNode } from '../../../web/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const Wrap = forwardRef(({\n  children\n}, ref) => {\n  try {\n    const child = React.Children.only(children);\n    if (isRNSVGNode(child)) {\n      const clone = React.cloneElement(child, {\n        ref\n      }, child.props.children);\n      return clone;\n    }\n    return _jsx(\"div\", {\n      ref: ref,\n      style: {\n        display: 'contents'\n      },\n      children: child\n    });\n  } catch (e) {\n    throw new Error(tagMessage(`GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n  }\n});\nexport const AnimatedWrap = Wrap;","map":{"version":3,"names":["React","forwardRef","tagMessage","isRNSVGNode","jsx","_jsx","Wrap","children","ref","child","Children","only","clone","cloneElement","props","style","display","e","Error","AnimatedWrap"],"sources":["C:\\Users\\prana\\OneDrive\\Desktop\\civic-reporter-sih\\frontend\\node_modules\\react-native-gesture-handler\\src\\handlers\\gestures\\GestureDetector\\Wrap.web.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport type { LegacyRef, PropsWithChildren } from 'react';\nimport { tagMessage } from '../../../utils';\nimport { isRNSVGNode } from '../../../web/utils';\n\nexport const Wrap = forwardRef<HTMLDivElement, PropsWithChildren<{}>>(\n  ({ children }, ref) => {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const child: any = React.Children.only(children);\n\n      if (isRNSVGNode(child)) {\n        const clone = React.cloneElement(\n          child,\n          { ref },\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          child.props.children\n        );\n\n        return clone;\n      }\n\n      return (\n        <div\n          ref={ref as LegacyRef<HTMLDivElement>}\n          style={{ display: 'contents' }}>\n          {child}\n        </div>\n      );\n    } catch (e) {\n      throw new Error(\n        tagMessage(\n          `GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`\n        )\n      );\n    }\n  }\n);\n\n// On web we never take a path with Reanimated,\n// therefore we can simply export Wrap\nexport const AnimatedWrap = Wrap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEjD,OAAO,MAAMC,IAAI,GAAGL,UAAU,CAC5B,CAAC;EAAEM;AAAS,CAAC,EAAEC,GAAG,KAAK;EACrB,IAAI;IAEF,MAAMC,KAAU,GAAGT,KAAK,CAACU,QAAQ,CAACC,IAAI,CAACJ,QAAQ,CAAC;IAEhD,IAAIJ,WAAW,CAACM,KAAK,CAAC,EAAE;MACtB,MAAMG,KAAK,GAAGZ,KAAK,CAACa,YAAY,CAC9BJ,KAAK,EACL;QAAED;MAAI,CAAC,EAEPC,KAAK,CAACK,KAAK,CAACP,QACd,CAAC;MAED,OAAOK,KAAK;IACd;IAEA,OACEP,IAAA;MACEG,GAAG,EAAEA,GAAiC;MACtCO,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAW,CAAE;MAAAT,QAAA,EAC9BE;IAAK,CACH,CAAC;EAEV,CAAC,CAAC,OAAOQ,CAAC,EAAE;IACV,MAAM,IAAIC,KAAK,CACbhB,UAAU,CACR,2KACF,CACF,CAAC;EACH;AACF,CACF,CAAC;AAID,OAAO,MAAMiB,YAAY,GAAGb,IAAI","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}